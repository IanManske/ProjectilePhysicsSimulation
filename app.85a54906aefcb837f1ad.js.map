{"version":3,"sources":["webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/Util.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/Types.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/Reflection.js","webpack://ProjectilePhysicsSimulation/./build/production/Physics.js","webpack://ProjectilePhysicsSimulation/./build/production/Graphics.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/Numeric.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/lib/big.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/Int32.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/Decimal.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/lib/long.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/Option.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/Seq.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/MapUtil.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/Date.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/String.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/List.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/MutableMap.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/MutableSet.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/Fable.React.7.2.0/Fable.React.Props.fs.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/Double.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/Fable.React.7.2.0/Fable.React.Extensions.fs.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/AsyncBuilder.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/Fable.Elmish.3.1.0/cmd.fs.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/Async.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/Fable.Elmish.3.1.0/ring.fs.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/fable-library.3.1.5/Array.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/Fable.Elmish.3.1.0/program.fs.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/Fable.Elmish.React.3.0.1/react.fs.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/Fable.Elmish.React.3.0.1/common.fs.js","webpack://ProjectilePhysicsSimulation/./build/production/App.js","webpack://ProjectilePhysicsSimulation/./build/production/.fable/Fable.Elmish.3.1.0/prelude.fs.js","webpack://ProjectilePhysicsSimulation/webpack/bootstrap","webpack://ProjectilePhysicsSimulation/webpack/runtime/hasOwnProperty shorthand","webpack://ProjectilePhysicsSimulation/webpack/runtime/jsonp chunk loading","webpack://ProjectilePhysicsSimulation/webpack/startup"],"names":["isArrayLike","x","Array","isArray","ArrayBuffer","isView","sameConstructor","y","Object","getPrototypeOf","constructor","padWithZeros","i","length","str","toString","date","date1","offset","kind","getTimezoneOffset","ObjectRef","o","idMap","has","set","count","get","stringHash","s","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","GetHashCode","isHashable","arrayHash","Date","getTime","dateHash","values","map","v","id","equalArraysWith","eq","Equals","isEquatable","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","compareArrays","comp","j","compareArraysWith","CompareTo","isComparable","key","compareObjects","min","comparer","max","WeakMap","CURRIED_KEY","arity","f","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","Error","args1","args2","apply","undefined","concat","seqToString","self","callStack","Symbol","iterator","cons","entries","k","join","name","String","compareList","other","tail","res","head","this","cur","next","value","done","from","cases","tag","fields","withParens","field","indexOf","splice","recordToJSON","recordToString","recordGetHashCode","thisNames","recordEquals","result","recordCompareTo","contentsOrGetter","setter","getter","TypeInfo","fullname","generics","construct","parent","enumCases","fullName","getHashCode","getGenerics","t","t1","t2","getRecordElements","k1","v1","k2","v2","gen","endsWith","Vector2Module_ofMagnitudeDegrees","magnitude","degrees","Math","cos","sin","Vector2Module_magnitude","vector","_arg2","_arg1","sqrt","Vector2__get_X","this$","Vector2__get_Y","Body","Width","Height","Mass","Position","Velocity","Acceleration","PrevAcceleration","super","BodyModule_center","body","Model","Projectile","InitialSpeed","InitialAngle","InitialPosition","AccelerationGravity","DragConstant","ShowTrajectory","ShowVelocityMarker","TraceInterval","LastTracer","Running","SimulationSpeed","JumpStep","Time","LeftOverTime","timeStep","ModelModule_started","model","ModelModule_accclerationDrag","constant","velocity","mass","scalar","_arg1_3","scalar_1","_arg1_1","_arg1_2","scalar_2","a","Vector2Module_normalizeUnsafe","b","ModelModule_calculateAcceleration","gravity","dragConstant","ModelModule_applyGravity","ModelModule_acceleration","ModelModule_bodyAcceleration","ModelModule_initial","position","move","time","newAcceleration","_arg2_1","_arg1_4","_arg2_4","_arg1_11","_arg1_10","scalar_5","_arg1_9","_arg2_3","_arg2_2","scalar_3","_arg1_5","_arg1_7","scalar_4","_arg1_6","_arg1_8","scalar_6","deltaPosition","lerpDelta","delta","alpha","getCanvasAndContext","canvas","document","getElementById","getContext","patternInput$004016","trajectoryContext","trajectoryCanvas","patternInput$004017$002D1","bodyContext","bodyCanvas","patternInput$004018$002D2","velocityContext","velocityCanvas","initCanvas","context","width_1","height_1","width","height","translate","initCanvasWith","clearVelocityMarker","projectile","c","clearRect","abs","drawVelocityMarker","beginPath","moveTo","lineTo","closePath","stroke","clearBody","drawBody","fillRect","drawTracer","point","arc","fill","fillStyle","strokeStyle","symbol","sd","toPrecision","dp","toExponential","Number","toHex","P","e","cmp","_this","multiply","mul","toFixed","MAX_DP","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","UNDEFINED","NUMERIC","parse","n","nl","test","charAt","slice","replace","search","substring","Big","DP","RM","rm","more","xc","isZero","findIndex","xci","idx","unshift","pop","stringify","z","push","NE","PE","isneg","yc","l","div","bl","bt","ri","bz","ai","al","r","rl","q","qc","qi","d","shift","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","add","pow","one","round","half","valueOf","toJSON","_Big_","normalize","prototype","version","NumberStyles","wasm","WebAssembly","Instance","Module","Uint8Array","exports","Long","low","high","unsigned","isLong","obj","radix","substr","bytes","le","fromBytesLE","fromBytesBE","fromBytes","$this","hi","lo","toBytesLE","toBytesBE","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","RangeError","p","radixToPower","size","parseInt","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","isNegative","radixLong","rem1","rem","remDiv","digits","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","numBits","shiftRightUnsigned","shiftLeft","shiftRight","floor","log2","ceil","log","LN2","approxRes","approxRem","Some","Seq","_a","iter","makeSeq","append","xs","ys","delay","firstDone","iters","unfold","_b","collect","output","innerIter","hasFinished","fold","acc","isArrayOrBufferView","fst","dashify","separator","m","toLowerCase","keyValueList","caseRule","definedCaseRule","fail","kvPair","assign","toUpperCase","changeCase","dateOffsetToString","isMinus","minutes","dateToHalfUTCString","toISOString","dateToStringWithCustomFormat","format","utc","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","fsFormatRegExp","printf","input","cont","createPrinter","toText","arg","continuePrint","formatReplacement","prefix","flags","padLength","precision","sign","isLessThan","_provider","_c","dateWithOffset","dateToISOStringWithOffset","dateToStringWithOffset","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","dateToStringWithKind","zeroFlag","minusFlag","ch","padLeft","formatOnce","str2","padRef","contents","args","strCopy","isRight","f_mut","state_mut","xs_mut","state","ofSeq","tail_1","col","_","ofArrayWithTail","toStringTag","DOMAttr","HTMLAttr","defValue","Browser_Types_Event__Event_get_Value","target","setPrototypeOf","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","Cmd_exec","dispatch","cmd","call","ex","unitVar0","Cmd_batch","cmds","lists","computation","binder","onSuccess","computation1","computation2","Bind","generator","sequence","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","Dispose","guard","Return","cancelled","_id","_cancelled","_listeners","Map","listener","delete","$","addListener","removeListener","RingState$1","RingBuffer$1","targetIndex","RingBuffer$1__Pop","__","matchValue","wix","rix","items","rix$0027","RingBuffer$1__Push_2B595","item","wix_1","items_1","wix$0027","ix","truncate","take","last","Program$4","init","update","subscribe","view","setState","syncDispatch","program","LazyProps$1","render","equal","Components_LazyView$1","Component","props","nextProps","_nextState","Message","simulateAndDraw","totalTime","patternInput","numSteps","tracers","step","timeAfterTracer","arg00","elapsedTime","newTime","simulate","newModel","model_1","inputRecord","ModelModule_recalculateAcceleration","unit","unitName","withSub","subscript","text","message","isChecked","className","type","checked","onChange","loop","window","requestAnimationFrame","t_1","rb","reentered","msg","nextMsg","msg_1","patternInput_1","model$0027","ex_1","ex_3","ex_2","ProgramModule_runWith","ProgramModule_run","ProgramModule_withSubscription","arg_1","inputRecord_4","projectile_1","inputRecord_1","projectile_2","inputRecord_2","position_1","projectile_3","inputRecord_3","x_3","y_3","x_4","y_4","hidden","trace","x_5","y_5","x_7","y_7","x_6","y_6","x_10","y_9","x_9","y_8","x_11","y_10","projectile_4","inputRecord_5","arg_2","tupledArg","console","error","ProgramModule_mkSimple","unit_1","attributes_1","unit_2","value_4","value_6","name_9","value_8","name_10","value_9","name_11","value_10","name_12","value_11","unit_3","unit_5","arg10_7","unit_10","style","marginTop","playpause","toLocaleLowerCase","display","title","onClick","marginLeft","e_1","matchValue_1","_arg3","open","e_2","matchValue_2","e_3","matchValue_3","value_16","dispatch_7","e_4","arg0_7","matchValue_4","e_5","matchValue_5","value_20","attributes_10","unit_11","e_6","arg0_9","matchValue_6","value_23","attributes_13","unit_14","e_7","arg0_10","matchValue_7","attributes_16","unit_17","e_8","arg0_11","matchValue_8","attributes_19","unit_20","e_9","arg0_12","matchValue_9","lazyView2With","placeholderId","lastRequest","cancelAnimationFrame","Program_Internal_withReactBatchedUsing","__webpack_module_cache__","__webpack_require__","moduleId","module","__webpack_modules__","prop","hasOwnProperty","installedChunks","143","deferredModules","checkDeferredModules","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkId","chunkIds","moreModules","runtime","executeModules","resolves","chunkLoadingGlobal","checkDeferredModulesImpl","deferredModule","fulfilled","depId","forEach","bind","startup"],"mappings":"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","file":"app.85a54906aefcb837f1ad.js","sourcesContent":["// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport class List {\n    constructor(head, tail) {\n        this.head = head;\n        this.tail = tail;\n    }\n    [Symbol.iterator]() {\n        let cur = this;\n        return {\n            next: () => {\n                const value = cur === null || cur === void 0 ? void 0 : cur.head;\n                const done = (cur === null || cur === void 0 ? void 0 : cur.tail) == null;\n                cur = cur === null || cur === void 0 ? void 0 : cur.tail;\n                return { done, value };\n            },\n        };\n    }\n    toJSON() { return Array.from(this); }\n    toString() { return seqToString(this); }\n    GetHashCode() { return combineHashCodes(Array.from(this).map(structuralHash)); }\n    Equals(other) { return compareList(this, other) === 0; }\n    CompareTo(other) { return compareList(this, other); }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        if (this.fields.length === 0) {\n            return this.name;\n        }\n        else {\n            let fields = \"\";\n            let withParens = true;\n            if (this.fields.length === 1) {\n                const field = toString(this.fields[0]);\n                withParens = field.indexOf(\" \") >= 0;\n                fields = field;\n            }\n            else {\n                fields = this.fields.map((x) => toString(x)).join(\", \");\n            }\n            return this.name + (withParens ? \" (\" : \" \") + fields + (withParens ? \")\" : \"\");\n        }\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { equals } from \"./.fable/fable-library.3.1.5/Util.js\";\nimport { Record } from \"./.fable/fable-library.3.1.5/Types.js\";\nimport { bool_type, record_type, obj_type, float64_type, int32_type } from \"./.fable/fable-library.3.1.5/Reflection.js\";\n\nexport function Vector2Module_zero() {\n    return [0, 0];\n}\n\nexport function Vector2Module_ofMagnitudeDegrees(magnitude, degrees) {\n    return [magnitude * Math.cos((degrees * 3.141592653589793) / 180), magnitude * Math.sin((degrees * 3.141592653589793) / 180)];\n}\n\nexport function Vector2Module_magnitude(vector) {\n    let _arg2, _arg1;\n    return Math.sqrt((_arg2 = vector, (_arg1 = vector, (_arg2[0] * _arg1[0]) + (_arg2[1] * _arg1[1]))));\n}\n\nexport function Vector2Module_normalizeUnsafe(vector) {\n    const _arg1 = vector;\n    const scalar = Vector2Module_magnitude(vector);\n    return [_arg1[0] / scalar, _arg1[1] / scalar];\n}\n\nexport function Vector2Module_normalize(vector) {\n    if (equals(vector, Vector2Module_zero())) {\n        return Vector2Module_zero();\n    }\n    else {\n        return Vector2Module_normalizeUnsafe(vector);\n    }\n}\n\nexport function Vector2Module_min(a, b) {\n    if (Vector2Module_magnitude(a) < Vector2Module_magnitude(b)) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nexport function Vector2__get_X(this$) {\n    return this$[0];\n}\n\nexport function Vector2__get_Y(this$) {\n    return this$[1];\n}\n\nexport class Body extends Record {\n    constructor(Width, Height, Mass, Position, Velocity, Acceleration, PrevAcceleration) {\n        super();\n        this.Width = (Width | 0);\n        this.Height = (Height | 0);\n        this.Mass = Mass;\n        this.Position = Position;\n        this.Velocity = Velocity;\n        this.Acceleration = Acceleration;\n        this.PrevAcceleration = PrevAcceleration;\n    }\n}\n\nexport function Body$reflection() {\n    return record_type(\"ProjectilePhysicsSimulation.Physics.Body\", [], Body, () => [[\"Width\", int32_type], [\"Height\", int32_type], [\"Mass\", float64_type], [\"Position\", obj_type], [\"Velocity\", obj_type], [\"Acceleration\", obj_type], [\"PrevAcceleration\", obj_type]]);\n}\n\nexport const BodyModule_minMass = 5E-324 * 1;\n\nexport function BodyModule_center(body) {\n    return [(body.Width * 0.5) + Vector2__get_X(body.Position), (body.Height * 0.5) + Vector2__get_Y(body.Position)];\n}\n\nexport class Model extends Record {\n    constructor(Projectile, InitialSpeed, InitialAngle, InitialPosition, AccelerationGravity, DragConstant, ShowTrajectory, ShowVelocityMarker, TraceInterval, LastTracer, Running, SimulationSpeed, JumpStep, Time, LeftOverTime) {\n        super();\n        this.Projectile = Projectile;\n        this.InitialSpeed = InitialSpeed;\n        this.InitialAngle = InitialAngle;\n        this.InitialPosition = InitialPosition;\n        this.AccelerationGravity = AccelerationGravity;\n        this.DragConstant = DragConstant;\n        this.ShowTrajectory = ShowTrajectory;\n        this.ShowVelocityMarker = ShowVelocityMarker;\n        this.TraceInterval = TraceInterval;\n        this.LastTracer = LastTracer;\n        this.Running = Running;\n        this.SimulationSpeed = SimulationSpeed;\n        this.JumpStep = JumpStep;\n        this.Time = Time;\n        this.LeftOverTime = LeftOverTime;\n    }\n}\n\nexport function Model$reflection() {\n    return record_type(\"ProjectilePhysicsSimulation.Physics.Model\", [], Model, () => [[\"Projectile\", Body$reflection()], [\"InitialSpeed\", float64_type], [\"InitialAngle\", float64_type], [\"InitialPosition\", obj_type], [\"AccelerationGravity\", float64_type], [\"DragConstant\", float64_type], [\"ShowTrajectory\", bool_type], [\"ShowVelocityMarker\", bool_type], [\"TraceInterval\", float64_type], [\"LastTracer\", float64_type], [\"Running\", bool_type], [\"SimulationSpeed\", float64_type], [\"JumpStep\", float64_type], [\"Time\", float64_type], [\"LeftOverTime\", float64_type]]);\n}\n\nexport const timeStep = 1 / 120;\n\nexport const ModelModule_minSpeed = 0;\n\nexport const ModelModule_maxSpeed = 10000;\n\nexport const ModelModule_minJumpStep = timeStep * 1;\n\nexport const ModelModule_maxJumpStep = 10000;\n\nexport const ModelModule_minDragConstant = 0;\n\nexport const ModelModule_minTraceInterval = (timeStep - (timeStep / 1000000000)) * 1;\n\nexport function ModelModule_started(model) {\n    return model.Time > 0;\n}\n\nfunction ModelModule_applyGravity(gravity, _arg1) {\n    return [_arg1[0], _arg1[1] + gravity];\n}\n\nfunction ModelModule_accclerationDrag(constant, velocity, mass) {\n    let scalar, _arg1, _arg1_3, scalar_1, _arg2, _arg1_1, _arg1_2, scalar_2;\n    return Vector2Module_min((scalar = -1, (_arg1 = velocity, [scalar * _arg1[0], scalar * _arg1[1]])), (_arg1_3 = (scalar_1 = ((-constant) * (_arg2 = velocity, (_arg1_1 = velocity, (_arg2[0] * _arg1_1[0]) + (_arg2[1] * _arg1_1[1])))), (_arg1_2 = Vector2Module_normalize(velocity), [scalar_1 * _arg1_2[0], scalar_1 * _arg1_2[1]])), (scalar_2 = mass, [_arg1_3[0] / scalar_2, _arg1_3[1] / scalar_2])));\n}\n\nfunction ModelModule_calculateAcceleration(gravity, dragConstant, velocity, mass) {\n    return ModelModule_applyGravity(gravity, ModelModule_accclerationDrag(dragConstant, velocity, mass));\n}\n\nexport function ModelModule_acceleration(model) {\n    return (velocity) => ((mass) => ModelModule_calculateAcceleration(model.AccelerationGravity, model.DragConstant, velocity, mass));\n}\n\nexport function ModelModule_bodyAcceleration(model, body) {\n    return ModelModule_acceleration(model)(body.Velocity)(body.Mass);\n}\n\nexport function ModelModule_recalculateAcceleration(model) {\n    let inputRecord;\n    return new Model((inputRecord = model.Projectile, new Body(inputRecord.Width, inputRecord.Height, inputRecord.Mass, inputRecord.Position, inputRecord.Velocity, ModelModule_bodyAcceleration(model, model.Projectile), inputRecord.PrevAcceleration)), model.InitialSpeed, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, model.Running, model.SimulationSpeed, model.JumpStep, model.Time, model.LeftOverTime);\n}\n\nexport const ModelModule_initial = (() => {\n    const projectileLength = 25;\n    const mass = 100;\n    const initialSpeed = 105;\n    const initialAngle = 60;\n    const position = [15, 15];\n    const velocity = Vector2Module_ofMagnitudeDegrees(initialSpeed, initialAngle);\n    const accelerationGravity = -9.8;\n    const dragConstant = 0;\n    return new Model(new Body(projectileLength, projectileLength, mass, position, velocity, ModelModule_calculateAcceleration(accelerationGravity, dragConstant, velocity, mass), Vector2Module_zero()), initialSpeed, initialAngle, position, accelerationGravity, dragConstant, true, true, 1, 0, false, 2.5, 1, 0, 0);\n})();\n\nfunction move(body, time, newAcceleration) {\n    let _arg2_1, _arg1_4, _arg2_4, _arg1_11, _arg1_10, scalar_5, _arg1_9, _arg2_3, _arg2_2, scalar_3, _arg1_5, _arg1_7, scalar_4, _arg1_6, _arg1_8, scalar_6;\n    let deltaPosition;\n    let _arg2;\n    const _arg1 = body.Velocity;\n    const scalar = time;\n    _arg2 = [scalar * _arg1[0], scalar * _arg1[1]];\n    let _arg1_3;\n    let _arg1_2;\n    const scalar_1 = 1 / 6;\n    const _arg1_1 = body.Acceleration;\n    _arg1_2 = [scalar_1 * _arg1_1[0], scalar_1 * _arg1_1[1]];\n    const scalar_2 = time * time;\n    _arg1_3 = [scalar_2 * _arg1_2[0], scalar_2 * _arg1_2[1]];\n    deltaPosition = [_arg2[0] + _arg1_3[0], _arg2[1] + _arg1_3[1]];\n    return [new Body(body.Width, body.Height, body.Mass, (_arg2_1 = body.Position, (_arg1_4 = deltaPosition, [_arg2_1[0] + _arg1_4[0], _arg2_1[1] + _arg1_4[1]])), (_arg2_4 = body.Velocity, (_arg1_11 = (_arg1_10 = (scalar_5 = (1 / 6), (_arg1_9 = (_arg2_3 = (_arg2_2 = (scalar_3 = 2, (_arg1_5 = newAcceleration, [scalar_3 * _arg1_5[0], scalar_3 * _arg1_5[1]])), (_arg1_7 = (scalar_4 = 5, (_arg1_6 = body.Acceleration, [scalar_4 * _arg1_6[0], scalar_4 * _arg1_6[1]])), [_arg2_2[0] + _arg1_7[0], _arg2_2[1] + _arg1_7[1]])), (_arg1_8 = body.PrevAcceleration, [_arg2_3[0] - _arg1_8[0], _arg2_3[1] - _arg1_8[1]])), [scalar_5 * _arg1_9[0], scalar_5 * _arg1_9[1]])), (scalar_6 = time, [scalar_6 * _arg1_10[0], scalar_6 * _arg1_10[1]])), [_arg2_4[0] + _arg1_11[0], _arg2_4[1] + _arg1_11[1]])), newAcceleration, body.Acceleration), deltaPosition];\n}\n\nfunction lerpDelta(a, delta, alpha) {\n    const _arg2 = a;\n    let _arg1_1;\n    const scalar = alpha;\n    const _arg1 = delta;\n    _arg1_1 = [scalar * _arg1[0], scalar * _arg1[1]];\n    return [_arg2[0] + _arg1_1[0], _arg2[1] + _arg1_1[1]];\n}\n\nexport function simulate(model, time) {\n    const numSteps = (~(~Math.floor(time / timeStep))) | 0;\n    const tracers = [];\n    let projectile = model.Projectile;\n    for (let step = 1; step <= numSteps; step++) {\n        const patternInput = move(projectile, timeStep, ModelModule_bodyAcceleration(model, projectile));\n        const timeAfterTracer = (model.Time - model.LastTracer) + ((timeStep * step) - (model.TraceInterval * (tracers.length + 1)));\n        if (timeAfterTracer >= 0) {\n            let arg00;\n            const alpha = (timeStep - timeAfterTracer) / timeStep;\n            arg00 = lerpDelta(BodyModule_center(projectile), patternInput[1], alpha);\n            void (tracers.push(arg00));\n        }\n        projectile = patternInput[0];\n    }\n    const elapsedTime = timeStep * numSteps;\n    const newTime = model.Time + elapsedTime;\n    return [new Model(projectile, model.InitialSpeed, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, newTime - ((newTime - model.LastTracer) % model.TraceInterval), model.Running, model.SimulationSpeed, model.JumpStep, newTime, time - elapsedTime), tracers];\n}\n\n","import { Vector2__get_Y, Vector2__get_X, BodyModule_center } from \"./Physics.js\";\n\nexport const width = 1000;\n\nexport const height = 600;\n\nfunction getCanvasAndContext(id) {\n    const canvas = document.getElementById(id);\n    return [canvas, canvas.getContext('2d')];\n}\n\nconst patternInput$004016 = getCanvasAndContext(\"trajectoryCanvas\");\n\nexport const trajectoryContext = patternInput$004016[1];\n\nexport const trajectoryCanvas = patternInput$004016[0];\n\nconst patternInput$004017$002D1 = getCanvasAndContext(\"bodyCanvas\");\n\nexport const bodyContext = patternInput$004017$002D1[1];\n\nexport const bodyCanvas = patternInput$004017$002D1[0];\n\nconst patternInput$004018$002D2 = getCanvasAndContext(\"velocityCanvas\");\n\nexport const velocityContext = patternInput$004018$002D2[1];\n\nexport const velocityCanvas = patternInput$004018$002D2[0];\n\nfunction initCanvasWith(width_1, height_1, canvas, context) {\n    canvas.width = width_1;\n    canvas.height = height_1;\n    context.translate(0, height_1);\n}\n\nconst initCanvas = (canvas) => ((context) => {\n    initCanvasWith(width, height, canvas, context);\n});\n\ninitCanvas(trajectoryCanvas)(trajectoryContext);\n\ninitCanvas(bodyCanvas)(bodyContext);\n\ninitCanvas(velocityCanvas)(velocityContext);\n\ntrajectoryContext.fillStyle = \"black\";\n\nbodyContext.fillStyle = \"blue\";\n\nvelocityContext.strokeStyle = \"red\";\n\nexport function clearVelocityMarker(projectile) {\n    const c = BodyModule_center(projectile);\n    velocityContext.clearRect((Vector2__get_X(c) - Math.abs(Vector2__get_X(projectile.Velocity))) - 1, ((-Vector2__get_Y(c)) - Math.abs(Vector2__get_Y(projectile.Velocity))) - 1, (2 * Math.abs(Vector2__get_X(projectile.Velocity))) + 2, (2 * Math.abs(Vector2__get_Y(projectile.Velocity))) + 2);\n}\n\nexport function drawVelocityMarker(projectile) {\n    velocityContext.beginPath();\n    const c = BodyModule_center(projectile);\n    velocityContext.moveTo(Vector2__get_X(c), -Vector2__get_Y(c));\n    velocityContext.lineTo(Vector2__get_X(c) + Vector2__get_X(projectile.Velocity), (-Vector2__get_Y(c)) - Vector2__get_Y(projectile.Velocity));\n    velocityContext.closePath();\n    velocityContext.stroke();\n}\n\nexport function clearBody(projectile) {\n    bodyContext.clearRect(Vector2__get_X(projectile.Position) - 1, ((-Vector2__get_Y(projectile.Position)) - projectile.Height) - 1, projectile.Width + 2, projectile.Height + 2);\n}\n\nexport function drawBody(projectile) {\n    bodyContext.fillRect(Vector2__get_X(projectile.Position), (-Vector2__get_Y(projectile.Position)) - projectile.Height, projectile.Width, projectile.Height);\n}\n\nexport function drawTracer(point) {\n    trajectoryContext.beginPath();\n    trajectoryContext.arc(Vector2__get_X(point), -Vector2__get_Y(point), 2.5, 0, 3.141592653589793 * 2);\n    trajectoryContext.closePath();\n    trajectoryContext.fill();\n}\n\nexport function clear(context) {\n    context.clearRect(0, -context.canvas.height, context.canvas.width, context.canvas.height);\n}\n\nexport function clearTrajectoryContext() {\n    clear(trajectoryContext);\n}\n\nexport function clearVelocityContext() {\n    clear(velocityContext);\n}\n\nexport function clearBodyContext() {\n    clear(bodyContext);\n}\n\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            const isZero = xc.findIndex((xci, idx) => idx >= i && xci > 0) < 0;\n            more = more || !isZero;\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = step.cmp(get_Zero);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = x.cmp(last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal.js\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long.js\";\nimport { some, value } from \"./Option.js\";\nimport { compare, equals } from \"./Util.js\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nclass Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    [Symbol.iterator]() { return new Seq(this.f); }\n    next() {\n        var _a;\n        this.iter = (_a = this.iter) !== null && _a !== void 0 ? _a : this.f();\n        return this.iter.next();\n    }\n    toString() {\n        return \"seq [\" + Array.from(this).join(\"; \") + \"]\";\n    }\n}\nfunction makeSeq(f) {\n    return new Seq(f);\n}\nfunction isArrayOrBufferView(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs);\n}\nexport function ofArray(xs) {\n    if (Array.isArray(xs)) {\n        return delay(() => xs);\n    }\n    else {\n        return delay(() => unfold((i) => i != null && i < xs.length ? [xs[i], i + 1] : undefined, 0));\n    }\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map((y) => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, undefined];\n        return unfold(() => {\n            var _a, _b;\n            let cur;\n            if (!firstDone) {\n                cur = (_a = iters[0]) === null || _a === void 0 ? void 0 : _a.next();\n                if (cur != null && !cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [undefined, ys[Symbol.iterator]()];\n                }\n            }\n            cur = (_b = iters[1]) === null || _b === void 0 ? void 0 : _b.next();\n            return cur != null && !cur.done ? [cur.value, iters] : undefined;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output;\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = cur.value;\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = undefined;\n                    }\n                }\n            }\n            return innerIter != null ? [output, innerIter] : undefined;\n        }, undefined);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    let cur1;\n    let cur2;\n    let c = 0;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        c = f(cur1.value, cur2.value);\n        if (c !== 0) {\n            break;\n        }\n    }\n    return (c !== 0) ? c : (cur1.done && !cur2.done) ? -1 : (!cur1.done && cur2.done) ? 1 : 0;\n}\nexport function delay(f) {\n    return makeSeq(() => f()[Symbol.iterator]());\n}\nexport function empty() {\n    return delay(() => []);\n}\nexport function singleton(y) {\n    return delay(() => [y]);\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n    return delay(() => unfold((e) => moveNext(e) ? [current(e), e] : undefined, factory()));\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : undefined, undefined));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            try {\n                return empty();\n            }\n            finally {\n                finalFn();\n            }\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : undefined;\n            }\n            catch (err) {\n                return undefined;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const ar2 = isArrayOrBufferView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? undefined : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : undefined, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return undefined;\n    }\n    if (isArrayOrBufferView(xs)) {\n        return i < xs.length ? some(xs[i]) : undefined;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return undefined;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => (f(x), undefined), undefined, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => (f(x, y), undefined), undefined, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => (f(i !== null && i !== void 0 ? i : 0, x), undefined), undefined, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => (f(i !== null && i !== void 0 ? i : 0, x, y), undefined), undefined, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? undefined : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return isArrayOrBufferView(xs)\n        ? xs.length\n        : fold((acc, _x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : undefined;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        const cur = iter.next();\n        if (cur.done) {\n            return empty();\n        }\n        const hd = cur.value;\n        const tl = tail(xs);\n        const ys = scan(([_, last], next) => [last, next], [hd, hd], tl);\n        return skip(1, ys);\n    });\n}\nexport function rangeChar(first, last) {\n    const firstNum = first.charCodeAt(0);\n    const lastNum = last.charCodeAt(0);\n    return delay(() => unfold((x) => x <= lastNum ? [String.fromCharCode(x), x + 1] : undefined, firstNum));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeLongRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeDecimal(first, step, last) {\n    const stepFn = makeDecimalRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : undefined, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return undefined;\n        }, undefined);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function skip(n, xs) {\n    return makeSeq(() => {\n        const iter = xs[Symbol.iterator]();\n        for (let i = 1; i <= n; i++) {\n            if (iter.next().done) {\n                throw new Error(\"Seq has not enough elements\");\n            }\n        }\n        return iter;\n    });\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    return skip(1, xs);\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold(() => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, undefined];\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? undefined : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return undefined;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return makeSeq(() => {\n        // Capture a copy of the first value in the closure\n        // so the sequence is restarted every time, see #1230\n        let acc = fst;\n        const iter = {\n            next() {\n                const res = f(acc);\n                if (res != null) {\n                    const v = value(res);\n                    if (v != null) {\n                        acc = v[1];\n                        return { done: false, value: v[0] };\n                    }\n                }\n                return { done: true, value: undefined };\n            },\n        };\n        return iter;\n    });\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return makeSeq(() => {\n        let window = [];\n        const iter = source[Symbol.iterator]();\n        const iter2 = {\n            next() {\n                let cur;\n                while (window.length < windowSize) {\n                    if ((cur = iter.next()).done) {\n                        return { done: true, value: undefined };\n                    }\n                    window.push(cur.value);\n                }\n                const value = window;\n                window = window.slice(1);\n                return { done: false, value };\n            },\n        };\n        return iter2;\n    });\n}\nexport function transpose(source) {\n    return makeSeq(() => {\n        const iters = Array.from(source, (x) => x[Symbol.iterator]());\n        const iter = {\n            next() {\n                if (iters.length === 0) {\n                    return { done: true, value: undefined }; // empty sequence\n                }\n                const results = Array.from(iters, (iter) => iter.next());\n                if (results[0].done) {\n                    if (!results.every((x) => x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    return { done: true, value: undefined };\n                }\n                else {\n                    if (!results.every((x) => !x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    const values = results.map((x) => x.value);\n                    return { done: false, value: values };\n                }\n            },\n        };\n        return iter;\n    });\n}\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { FSharpRef, toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(input, values) {\n    let i = 0;\n    return input.replace(interpolateRegExp, (_, prefix, flags, padLength, precision, format) => {\n        return formatReplacement(values[i++], prefix, flags, padLength, precision, format);\n    });\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, prefix, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return prefix ? prefix + rep : rep;\n}\nfunction formatOnce(str2, rep, padRef) {\n    return str2.replace(fsFormatRegExp, (match, prefix, flags, padLength, precision, format) => {\n        if (padRef.contents != null) {\n            padLength = padRef.contents;\n            padRef.contents = null;\n        }\n        else if (padLength === \"*\") {\n            if (rep < 0) {\n                throw new Error(\"Non-negative number required\");\n            }\n            padRef.contents = rep;\n            return match;\n        }\n        const once = formatReplacement(rep, prefix, flags, padLength, precision, format);\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont, padRef = new FSharpRef(null)) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg, padRef);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont, padRef)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { List } from \"./Types.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { FSharpRef, List as List_1 } from \"./Types.js\";\nimport { transpose as transpose_1, pairwise as pairwise_1, collect as collect_1, scanBack as scanBack_1, scan as scan_1, foldBack2 as foldBack2_1, fold2 as fold2_1, fold as fold_1, map as map_1 } from \"./Seq.js\";\nimport { uncurry, count } from \"./Util.js\";\nimport { splitInto as splitInto_1, chunkBySize as chunkBySize_1, permute as permute_1, findIndexBack as findIndexBack_1, tryFindIndexBack as tryFindIndexBack_1 } from \"./Array.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { getItemFromDict, addToDict, tryGetValue, addToSet } from \"./MapUtil.js\";\nimport { Dictionary } from \"./MutableMap.js\";\n\nexport function empty() {\n    return new List();\n}\n\nexport function singleton(x) {\n    return new List(x, empty());\n}\n\nexport function cons(x, xs) {\n    return new List(x, xs);\n}\n\nexport function head(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.head;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function tryHead(_arg1) {\n    if (_arg1.tail != null) {\n        return some(_arg1.head);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function tail(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.tail;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function last(_arg1_mut) {\n    last:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return _arg1.head;\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue last;\n            }\n        }\n        else {\n            throw (new Error(\"List was empty\"));\n        }\n        break;\n    }\n}\n\nexport function tryLast(_arg1_mut) {\n    tryLast:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return some(_arg1.head);\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue tryLast;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    else {\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1, ys_1];\n                if (matchValue[0].tail != null) {\n                    if (matchValue[1].tail != null) {\n                        const matchValue_1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n                        if (matchValue_1 === 0) {\n                            xs_1_mut = matchValue[0].tail;\n                            ys_1_mut = matchValue[1].tail;\n                            continue loop;\n                        }\n                        else {\n                            return matchValue_1 | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1].tail == null) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n                break;\n            }\n        };\n        return loop(xs, ys) | 0;\n    }\n}\n\nexport function foldIndexedAux(f_mut, i_mut, acc_mut, _arg1_mut) {\n    foldIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            f_mut = f;\n            i_mut = (i + 1);\n            acc_mut = f(i, acc, _arg1.head);\n            _arg1_mut = _arg1.tail;\n            continue foldIndexedAux;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function foldIndexed(f, state, xs) {\n    return foldIndexedAux(f, 0, state, xs);\n}\n\nexport function fold(f_mut, state_mut, xs_mut) {\n    fold:\n    while (true) {\n        const f = f_mut, state = state_mut, xs = xs_mut;\n        if (xs.tail != null) {\n            f_mut = f;\n            state_mut = f(state, xs.head);\n            xs_mut = xs.tail;\n            continue fold;\n        }\n        else {\n            return state;\n        }\n        break;\n    }\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => (new List_1(x, acc)), new List_1(), xs);\n}\n\nexport function foldBack(f, xs, state) {\n    return fold((acc, x) => f(x, acc), state, reverse(xs));\n}\n\nexport function toSeq(xs) {\n    return map_1((x) => x, xs);\n}\n\nexport function ofSeq(xs) {\n    return reverse(fold_1((acc, x) => (new List_1(x, acc)), new List_1(), xs));\n}\n\nexport function concat(lists) {\n    return reverse(fold_1((state, xs) => fold((acc, x) => (new List_1(x, acc)), state, xs), new List_1(), lists));\n}\n\nexport function foldIndexed2Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut) {\n    foldIndexed2Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y);\n                bs_mut = xs;\n                cs_mut = ys;\n                continue foldIndexed2Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed2(f, state, xs, ys) {\n    return foldIndexed2Aux(f, 0, state, xs, ys);\n}\n\nexport function fold2(f, state, xs, ys) {\n    return fold2_1(f, state, xs, ys);\n}\n\nexport function foldBack2(f, xs, ys, state) {\n    return foldBack2_1(f, xs, ys, state);\n}\n\nexport function unfold(f, state) {\n    const unfoldInner = (acc_mut, state_1_mut) => {\n        unfoldInner:\n        while (true) {\n            const acc = acc_mut, state_1 = state_1_mut;\n            const matchValue = f(state_1);\n            if (matchValue != null) {\n                acc_mut = (new List_1(matchValue[0], acc));\n                state_1_mut = matchValue[1];\n                continue unfoldInner;\n            }\n            else {\n                return reverse(acc);\n            }\n            break;\n        }\n    };\n    return unfoldInner(new List_1(), state);\n}\n\nexport function foldIndexed3Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut, ds_mut) {\n    foldIndexed3Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut, ds = ds_mut;\n        const matchValue = [bs, cs, ds];\n        let pattern_matching_result, x, xs, y, ys, z, zs;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[2].tail != null) {\n                    pattern_matching_result = 1;\n                    x = matchValue[0].head;\n                    xs = matchValue[0].tail;\n                    y = matchValue[1].head;\n                    ys = matchValue[1].tail;\n                    z = matchValue[2].head;\n                    zs = matchValue[2].tail;\n                }\n                else {\n                    pattern_matching_result = 2;\n                }\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            if (matchValue[2].tail == null) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y, z);\n                bs_mut = xs;\n                cs_mut = ys;\n                ds_mut = zs;\n                continue foldIndexed3Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed3(f, seed, xs, ys, zs) {\n    return foldIndexed3Aux(f, 0, seed, xs, ys, zs);\n}\n\nexport function fold3(f, state, xs, ys, zs) {\n    return foldIndexed3((_arg1, acc, x, y, z) => f(acc, x, y, z), state, xs, ys, zs);\n}\n\nexport function scan(f, state, xs) {\n    return ofSeq(scan_1(f, state, xs));\n}\n\nexport function scanBack(f, xs, state) {\n    return ofSeq(scanBack_1(f, xs, state));\n}\n\nexport function length(xs) {\n    return fold((acc, _arg1) => (acc + 1), 0, xs);\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => (new List_1(x, acc)), ys, reverse(xs));\n}\n\nexport function collect(f, xs) {\n    return ofSeq(collect_1(f, xs));\n}\n\nexport function map(f, xs) {\n    return reverse(fold((acc, x) => (new List_1(f(x), acc)), new List_1(), xs));\n}\n\nexport function mapIndexed(f, xs) {\n    return reverse(foldIndexed((i, acc, x) => (new List_1(f(i, x), acc)), new List_1(), xs));\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(f, xs, ys) {\n    return reverse(fold2((acc, x, y) => (new List_1(f(x, y), acc)), new List_1(), xs, ys));\n}\n\nexport function mapIndexed2(f, xs, ys) {\n    return reverse(foldIndexed2((i, acc, x, y) => (new List_1(f(i, x, y), acc)), new List_1(), xs, ys));\n}\n\nexport function map3(f, xs, ys, zs) {\n    return reverse(fold3((acc, x, y, z) => (new List_1(f(x, y, z), acc)), new List_1(), xs, ys, zs));\n}\n\nexport function mapIndexed3(f, xs, ys, zs) {\n    return reverse(foldIndexed3((i, acc, x, y, z) => (new List_1(f(i, x, y, z), acc)), new List_1(), xs, ys, zs));\n}\n\nexport function mapFold(f, s, xs) {\n    const patternInput_1 = fold((tupledArg, x) => {\n        const patternInput = f(tupledArg[1], x);\n        return [new List_1(patternInput[0], tupledArg[0]), patternInput[1]];\n    }, [new List_1(), s], xs);\n    return [reverse(patternInput_1[0]), patternInput_1[1]];\n}\n\nexport function mapFoldBack(f, xs, s) {\n    return mapFold((s_1, v) => f(v, s_1), s, reverse(xs));\n}\n\nexport function iterate(f, xs) {\n    return fold((unitVar0, x) => {\n        f(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(f, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        f(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(f, xs) {\n    return foldIndexed((i, unitVar1, x) => {\n        f(i, x);\n    }, void 0, xs);\n}\n\nexport function iterateIndexed2(f, xs, ys) {\n    return foldIndexed2((i, unitVar1, x, y) => {\n        f(i, x, y);\n    }, void 0, xs, ys);\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = count(xs) - 1; i >= 0; i--) {\n        res = (new List_1(xs[i], res));\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, new List_1());\n}\n\nexport function isEmpty(_arg1) {\n    if (_arg1.tail == null) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function tryPickIndexedAux(f_mut, i_mut, _arg1_mut) {\n    tryPickIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            const result = f(i, _arg1.head);\n            if (result == null) {\n                f_mut = f;\n                i_mut = (i + 1);\n                _arg1_mut = _arg1.tail;\n                continue tryPickIndexedAux;\n            }\n            else {\n                return result;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function tryPickIndexed(f, xs) {\n    return tryPickIndexedAux(f, 0, xs);\n}\n\nexport function tryPick(f, xs) {\n    return tryPickIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function tryFindIndexed(f, xs) {\n    return tryPickIndexed((i, x) => (f(i, x) ? some(x) : (void 0)), xs);\n}\n\nexport function tryFind(f, xs) {\n    return tryPickIndexed((_arg1, x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function findIndexed(f, xs) {\n    const matchValue = tryFindIndexed(f, xs);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function find(f, xs) {\n    return findIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function findBack(f, xs) {\n    return find(f, reverse(xs));\n}\n\nexport function tryFindBack(f, xs) {\n    return tryFind(f, reverse(xs));\n}\n\nexport function tryFindIndex(f, xs) {\n    return tryPickIndexed((i, x) => (f(x) ? i : (void 0)), xs);\n}\n\nexport function tryFindIndexBack(f, xs) {\n    return tryFindIndexBack_1(f, Array.from(xs));\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue != null) {\n        return matchValue | 0;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function findIndexBack(f, xs) {\n    return findIndexBack_1(f, Array.from(xs));\n}\n\nexport function item(n, xs) {\n    return findIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function tryItem(n, xs) {\n    return tryFindIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function filter(f, xs) {\n    return reverse(fold((acc, x) => (f(x) ? (new List_1(x, acc)) : acc), new List_1(), xs));\n}\n\nexport function partition(f, xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => (f(x) ? [new List_1(x, lacc), racc] : [lacc, new List_1(x, racc)]);\n    }), [new List_1(), new List_1()], reverse(xs));\n}\n\nexport function choose(f, xs) {\n    return reverse(fold((acc, x) => {\n        const matchValue = f(x);\n        return (matchValue == null) ? acc : (new List_1(value_1(matchValue), acc));\n    }, new List_1(), xs));\n}\n\nexport function contains(value, list, eq) {\n    const loop = (xs_mut) => {\n        loop:\n        while (true) {\n            const xs = xs_mut;\n            if (xs.tail != null) {\n                if (eq.Equals(value, xs.head)) {\n                    return true;\n                }\n                else {\n                    xs_mut = xs.tail;\n                    continue loop;\n                }\n            }\n            else {\n                return false;\n            }\n            break;\n        }\n    };\n    return loop(list);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (isEmpty(array)) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return filter((arg00) => addToSet(arg00, cached), array);\n    }\n}\n\nexport function initialize(n, f) {\n    let xs = new List_1();\n    for (let i = 0; i <= (n - 1); i++) {\n        xs = (new List_1(f(i), xs));\n    }\n    return reverse(xs);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, _arg1) {\n    if (_arg1.tail != null) {\n        return fold(f, _arg1.head, _arg1.tail);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function reduceBack(f, _arg1) {\n    if (_arg1.tail != null) {\n        return foldBack(f, _arg1.tail, _arg1.head);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f_mut, _arg1_mut) {\n    exists:\n    while (true) {\n        const f = f_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (f(_arg1.head)) {\n                return true;\n            }\n            else {\n                f_mut = f;\n                _arg1_mut = _arg1.tail;\n                continue exists;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function exists2(f_mut, bs_mut, cs_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(x, y)) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    bs_mut = xs;\n                    cs_mut = ys;\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1])], xs, [new List_1(), new List_1()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1]), new List_1(tupledArg[2], tupledArg_1[2])], xs, [new List_1(), new List_1(), new List_1()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sort(xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => comparer.Compare(x, y))), xs_1)));\n}\n\nexport function sortBy(projection, xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y)))), xs_1)));\n}\n\nexport function sortDescending(xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1))), xs_1)));\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1))), xs_1)));\n}\n\nexport function sortWith(comparer, xs) {\n    let comparer_1, xs_1;\n    return ofArray((comparer_1 = comparer, (xs_1 = Array.from(xs), (xs_1.sort(comparer_1), xs_1))));\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(li, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), li);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    return averager.DivideByInt(fold((acc, x) => averager.Add(acc, x), averager.GetZero(), xs), length(xs));\n}\n\nexport function averageBy(f, xs, averager) {\n    return averager.DivideByInt(fold((acc, x) => averager.Add(acc, f(x)), averager.GetZero(), xs), length(xs));\n}\n\nexport function permute(f, xs) {\n    return ofArray(permute_1(f, Array.from(xs)));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return map((xs_2) => ofArray(xs_2), ofArray(chunkBySize_1(chunkSize, Array.from(xs))));\n}\n\nexport function skip(i, xs) {\n    const skipInner = (i_1_mut, xs_1_mut) => {\n        skipInner:\n        while (true) {\n            const i_1 = i_1_mut, xs_1 = xs_1_mut;\n            const matchValue = [i_1, xs_1];\n            if (matchValue[0] === 0) {\n                return xs_1;\n            }\n            else if (matchValue[1].tail != null) {\n                i_1_mut = (i_1 - 1);\n                xs_1_mut = matchValue[1].tail;\n                continue skipInner;\n            }\n            else {\n                throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n            }\n            break;\n        }\n    };\n    const matchValue_1 = [i, xs];\n    if (matchValue_1[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_4, xs_4;\n        if (matchValue_1[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue_1[0] === 1) {\n            if (matchValue_1[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_4 = matchValue_1[0];\n                xs_4 = matchValue_1[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_4 = matchValue_1[0];\n            xs_4 = matchValue_1[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return xs;\n            }\n            case 1: {\n                return matchValue_1[1].tail;\n            }\n            case 2: {\n                return skipInner(i_4, xs_4);\n            }\n        }\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        let pattern_matching_result, h_1, t_1;\n        if (xs.tail != null) {\n            if (predicate(xs.head)) {\n                pattern_matching_result = 0;\n                h_1 = xs.head;\n                t_1 = xs.tail;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                predicate_mut = predicate;\n                xs_mut = t_1;\n                continue skipWhile;\n            }\n            case 1: {\n                return xs;\n            }\n        }\n        break;\n    }\n}\n\nexport function takeSplitAux(error_mut, i_mut, acc_mut, xs_mut) {\n    takeSplitAux:\n    while (true) {\n        const error = error_mut, i = i_mut, acc = acc_mut, xs = xs_mut;\n        const matchValue = [i, xs];\n        if (matchValue[0] === 0) {\n            return [reverse(acc), xs];\n        }\n        else if (matchValue[1].tail != null) {\n            error_mut = error;\n            i_mut = (i - 1);\n            acc_mut = (new List_1(matchValue[1].head, acc));\n            xs_mut = matchValue[1].tail;\n            continue takeSplitAux;\n        }\n        else if (error) {\n            throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n        }\n        else {\n            return [reverse(acc), xs];\n        }\n        break;\n    }\n}\n\nexport function take(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new List_1(), xs_1)[0];\n            }\n        }\n    }\n}\n\nexport function takeWhile(predicate, xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail == null) {\n            if (predicate(xs.head)) {\n                return xs;\n            }\n            else {\n                return xs.tail;\n            }\n        }\n        else if (!predicate(xs.head)) {\n            return new List_1();\n        }\n        else {\n            return new List_1(xs.head, takeWhile(predicate, xs.tail));\n        }\n    }\n    else {\n        return xs;\n    }\n}\n\nexport function truncate(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                return takeSplitAux(false, i_3, new List_1(), xs_1)[0];\n            }\n        }\n    }\n}\n\nexport function splitAt(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_2;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_2 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_2 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [new List_1(), xs];\n            }\n            case 1: {\n                return [new List_1(matchValue[1].head, new List_1()), matchValue[1].tail];\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new List_1(), xs_2);\n            }\n        }\n    }\n}\n\nexport function outOfRange() {\n    throw (new Error(\"Index out of range\"));\n}\n\nexport function getSlice(lower, upper, xs) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const hasUpper = upper != null;\n    if (lower_1 < 0) {\n        return outOfRange();\n    }\n    else if (hasUpper ? (value_1(upper) < lower_1) : false) {\n        return new List_1();\n    }\n    else {\n        let lastIndex = -1;\n        const res = foldIndexed((i, acc, x) => {\n            lastIndex = i;\n            if ((lower_1 <= i) ? ((!hasUpper) ? true : (i <= value_1(upper))) : false) {\n                return new List_1(x, acc);\n            }\n            else {\n                return acc;\n            }\n        }, new List_1(), xs);\n        if ((lower_1 > (lastIndex + 1)) ? true : (hasUpper ? (value_1(upper) > lastIndex) : false)) {\n            outOfRange();\n        }\n        return reverse(res);\n    }\n}\n\nexport function distinctBy(projection, xs, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => addToSet(projection(arg), hashSet), xs);\n}\n\nexport function distinct(xs, eq) {\n    return distinctBy((x) => x, xs, eq);\n}\n\nexport function exactlyOne(xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail != null) {\n            throw (new Error(\"Input list too long\\\\nParameter name: list\"));\n        }\n        else {\n            return xs.head;\n        }\n    }\n    else {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: list\"));\n    }\n}\n\nexport function groupBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, new List_1(v, matchValue[1]));\n        }\n        else {\n            addToDict(dict, key, new List_1(v, new List_1()));\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    iterate((key_1) => {\n        result = (new List_1([key_1, reverse(getItemFromDict(dict, key_1))], result));\n    }, keys);\n    return result;\n}\n\nexport function countBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    iterate((key_1) => {\n        result = (new List_1([key_1, getItemFromDict(dict, key_1)], result));\n    }, keys);\n    return result;\n}\n\nexport function where(predicate, source) {\n    return filter(predicate, source);\n}\n\nexport function pairwise(source) {\n    return ofSeq(pairwise_1(source));\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res = new List_1();\n    for (let i = length(source); i >= windowSize; i--) {\n        res = (new List_1(getSlice(i - windowSize, i - 1, source), res));\n    }\n    return res;\n}\n\nexport function splitInto(chunks, source) {\n    return map((xs_1) => ofArray(xs_1), ofArray(splitInto_1(chunks, Array.from(source))));\n}\n\nexport function transpose(lists) {\n    return ofSeq(map_1((xs) => ofSeq(xs), transpose_1(lists)));\n}\n\n","import { sumBy, iterate, map, iterateIndexed, toIterator, concat, getEnumerator } from \"./Seq.js\";\nimport { equals } from \"./Util.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { format } from \"./String.js\";\n\nexport class Dictionary {\n    constructor(pairs, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-1\"] = 1;\n        const enumerator = getEnumerator(pairs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const pair = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                Dictionary__Add_5BDDA1(this$.contents, pair[0], pair[1]);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"Dictionary\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        return getEnumerator(concat(this$.hashMap.values()));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        Dictionary__Add_5BDDA1(this$, item[0], item[1]);\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        let pattern_matching_result;\n        if (matchValue != null) {\n            if (equals(matchValue[1], item[1])) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return false;\n            }\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        if (matchValue != null) {\n            if (equals(matchValue[1], item[1])) {\n                void Dictionary__Remove_2B595(this$, item[0]);\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    get size() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    clear() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return Dictionary__Remove_2B595(this$, k);\n    }\n    entries() {\n        const this$ = this;\n        return map((p) => [p[0], p[1]], this$);\n    }\n    get(k) {\n        const this$ = this;\n        return Dictionary__get_Item_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return Dictionary__ContainsKey_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((p) => p[0], this$);\n    }\n    set(k, v) {\n        const this$ = this;\n        Dictionary__set_Item_5BDDA1(this$, k, v);\n        return this$;\n    }\n    values() {\n        const this$ = this;\n        return map((p) => p[1], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((p) => {\n            f(p[1], p[0], this$);\n        }, this$);\n    }\n}\n\nexport function Dictionary$reflection(gen0, gen1) {\n    return class_type(\"Fable.Collections.Dictionary\", [gen0, gen1], Dictionary);\n}\n\nexport function Dictionary_$ctor_6623D9B3(pairs, comparer) {\n    return new Dictionary(pairs, comparer);\n}\n\nfunction Dictionary__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((pair) => this$.comparer.Equals(k, pair[0]))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nexport function Dictionary__TryFind_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Dictionary__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function Dictionary__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function Dictionary__get_Count(this$) {\n    return sumBy((pairs) => pairs.length, this$.hashMap.values(), {\n        GetZero: () => 0,\n        Add: (x, y) => (x + y),\n    });\n}\n\nexport function Dictionary__get_Item_2B595(this$, k) {\n    const matchValue = Dictionary__TryFind_2B595(this$, k);\n    if (matchValue != null) {\n        return matchValue[1];\n    }\n    else {\n        throw (new Error(\"The item was not found in collection\"));\n    }\n}\n\nexport function Dictionary__set_Item_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]] = [k, v];\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__Add_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            const msg = format(\"An item with the same key has already been added. Key: {0}\", k);\n            throw (new Error(msg));\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__ContainsKey_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function Dictionary__Remove_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","import { sumBy, iterate, map, iterateIndexed, toIterator, concat, getEnumerator } from \"./Seq.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { some } from \"./Option.js\";\n\nexport class HashSet {\n    constructor(items, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-2\"] = 1;\n        const enumerator = getEnumerator(items);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                void HashSet__Add_2B595(this$.contents, enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"HashSet\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        return getEnumerator(concat(this$.hashMap.values()));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        void HashSet__Add_2B595(this$, item);\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, item);\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, item);\n    }\n    get size() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    add(k) {\n        const this$ = this;\n        void HashSet__Add_2B595(this$, k);\n        return this$;\n    }\n    clear() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((x) => x, this$);\n    }\n    values() {\n        const this$ = this;\n        return map((x) => x, this$);\n    }\n    entries() {\n        const this$ = this;\n        return map((v) => [v, v], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((x) => {\n            f(x, x, this$);\n        }, this$);\n    }\n}\n\nexport function HashSet$reflection(gen0) {\n    return class_type(\"Fable.Collections.HashSet\", [gen0], HashSet);\n}\n\nexport function HashSet_$ctor_Z6150332D(items, comparer) {\n    return new HashSet(items, comparer);\n}\n\nfunction HashSet__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((v_1) => this$.comparer.Equals(k, v_1))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nfunction HashSet__TryFind_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return some(getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]]);\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function HashSet__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function HashSet__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function HashSet__get_Count(this$) {\n    return sumBy((pairs) => pairs.length, this$.hashMap.values(), {\n        GetZero: () => 0,\n        Add: (x, y) => (x + y),\n    });\n}\n\nexport function HashSet__Add_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return false;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push(k));\n                return true;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [k]);\n                return true;\n            }\n        }\n    }\n}\n\nexport function HashSet__Contains_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function HashSet__Remove_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","import { toString, Record, Union } from \"../fable-library.3.1.5/Types.js\";\nimport { array_type, float64_type, int32_type, bool_type, obj_type, record_type, option_type, lambda_type, unit_type, class_type, union_type, string_type } from \"../fable-library.3.1.5/Reflection.js\";\n\nexport class FragmentProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\"];\n    }\n}\n\nexport function FragmentProp$reflection() {\n    return union_type(\"Fable.React.Props.FragmentProp\", [], FragmentProp, () => [[[\"Item\", string_type]]]);\n}\n\nexport class Prop extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\", \"Ref\", \"ref\", \"ref\"];\n    }\n}\n\nexport function Prop$reflection() {\n    return union_type(\"Fable.React.Props.Prop\", [], Prop, () => [[[\"Item\", string_type]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Element\"), unit_type)]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\"))])]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\"))])]]]);\n}\n\nexport class DangerousHtml extends Record {\n    constructor(__html) {\n        super();\n        this.__html = __html;\n    }\n}\n\nexport function DangerousHtml$reflection() {\n    return record_type(\"Fable.React.Props.DangerousHtml\", [], DangerousHtml, () => [[\"__html\", string_type]]);\n}\n\nexport class DOMAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DangerouslySetInnerHTML\", \"OnCut\", \"OnPaste\", \"OnCompositionEnd\", \"OnCompositionStart\", \"OnCopy\", \"OnCompositionUpdate\", \"OnFocus\", \"OnBlur\", \"OnChange\", \"OnInput\", \"OnSubmit\", \"OnReset\", \"OnLoad\", \"OnError\", \"OnKeyDown\", \"OnKeyPress\", \"OnKeyUp\", \"OnAbort\", \"OnCanPlay\", \"OnCanPlayThrough\", \"OnDurationChange\", \"OnEmptied\", \"OnEncrypted\", \"OnEnded\", \"OnLoadedData\", \"OnLoadedMetadata\", \"OnLoadStart\", \"OnPause\", \"OnPlay\", \"OnPlaying\", \"OnProgress\", \"OnRateChange\", \"OnSeeked\", \"OnSeeking\", \"OnStalled\", \"OnSuspend\", \"OnTimeUpdate\", \"OnVolumeChange\", \"OnWaiting\", \"OnClick\", \"OnContextMenu\", \"OnDoubleClick\", \"OnDrag\", \"OnDragEnd\", \"OnDragEnter\", \"OnDragExit\", \"OnDragLeave\", \"OnDragOver\", \"OnDragStart\", \"OnDrop\", \"OnMouseDown\", \"OnMouseEnter\", \"OnMouseLeave\", \"OnMouseMove\", \"OnMouseOut\", \"OnMouseOver\", \"OnMouseUp\", \"OnSelect\", \"OnTouchCancel\", \"OnTouchEnd\", \"OnTouchMove\", \"OnTouchStart\", \"OnScroll\", \"OnWheel\", \"OnAnimationStart\", \"OnAnimationEnd\", \"OnAnimationIteration\", \"OnTransitionEnd\"];\n    }\n}\n\nexport function DOMAttr$reflection() {\n    return union_type(\"Fable.React.Props.DOMAttr\", [], DOMAttr, () => [[[\"Item\", DangerousHtml$reflection()]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.UIEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.WheelEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TransitionEvent\"), unit_type)]]]);\n}\n\nexport class SVGAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ClipPath\", \"Cx\", \"Cy\", \"D\", \"Dx\", \"Dy\", \"Fill\", \"FillOpacity\", \"FontFamily\", \"FontSize\", \"Fx\", \"Fy\", \"GradientTransform\", \"GradientUnits\", \"Height\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"Offset\", \"Opacity\", \"PatternContentUnits\", \"PatternUnits\", \"Points\", \"PreserveAspectRatio\", \"R\", \"Rx\", \"Ry\", \"SpreadMethod\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TextAnchor\", \"Transform\", \"Version\", \"ViewBox\", \"Width\", \"X1\", \"X2\", \"X\", \"XlinkActuate\", \"XlinkArcrole\", \"XlinkHref\", \"XlinkRole\", \"XlinkShow\", \"XlinkTitle\", \"XlinkType\", \"XmlBase\", \"XmlLang\", \"XmlSpace\", \"Y1\", \"Y2\", \"Y\", \"Custom\"];\n    }\n}\n\nexport function SVGAttr$reflection() {\n    return union_type(\"Fable.React.Props.SVGAttr\", [], SVGAttr, () => [[[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class HTMLAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DefaultChecked\", \"DefaultValue\", \"Accept\", \"AcceptCharset\", \"AccessKey\", \"Action\", \"AllowFullScreen\", \"AllowTransparency\", \"Alt\", \"aria-atomic\", \"aria-busy\", \"aria-checked\", \"aria-colcount\", \"aria-colindex\", \"aria-colspan\", \"aria-controls\", \"aria-current\", \"aria-describedby\", \"aria-details\", \"aria-disabled\", \"aria-errormessage\", \"aria-expanded\", \"aria-flowto\", \"aria-haspopup\", \"aria-hidden\", \"aria-invalid\", \"aria-keyshortcuts\", \"aria-label\", \"aria-labelledby\", \"aria-level\", \"aria-live\", \"aria-modal\", \"aria-multiline\", \"aria-multiselectable\", \"aria-orientation\", \"aria-owns\", \"aria-placeholder\", \"aria-posinset\", \"aria-pressed\", \"aria-readonly\", \"aria-relevant\", \"aria-required\", \"aria-roledescription\", \"aria-rowcount\", \"aria-rowindex\", \"aria-rowspan\", \"aria-selected\", \"aria-setsize\", \"aria-sort\", \"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\", \"aria-valuetext\", \"Async\", \"AutoComplete\", \"AutoFocus\", \"AutoPlay\", \"Capture\", \"CellPadding\", \"CellSpacing\", \"CharSet\", \"Challenge\", \"Checked\", \"ClassID\", \"ClassName\", \"className\", \"Cols\", \"ColSpan\", \"Content\", \"ContentEditable\", \"ContextMenu\", \"Controls\", \"Coords\", \"CrossOrigin\", \"data-toggle\", \"DateTime\", \"Default\", \"Defer\", \"Dir\", \"Disabled\", \"Download\", \"Draggable\", \"EncType\", \"Form\", \"FormAction\", \"FormEncType\", \"FormMethod\", \"FormNoValidate\", \"FormTarget\", \"FrameBorder\", \"Headers\", \"Height\", \"Hidden\", \"High\", \"Href\", \"HrefLang\", \"HtmlFor\", \"HttpEquiv\", \"Icon\", \"Id\", \"InputMode\", \"Integrity\", \"Is\", \"KeyParams\", \"KeyType\", \"Kind\", \"Label\", \"Lang\", \"List\", \"Loop\", \"Low\", \"Manifest\", \"MarginHeight\", \"MarginWidth\", \"Max\", \"MaxLength\", \"Media\", \"MediaGroup\", \"Method\", \"Min\", \"MinLength\", \"Multiple\", \"Muted\", \"Name\", \"NoValidate\", \"Open\", \"Optimum\", \"Pattern\", \"Placeholder\", \"Poster\", \"Preload\", \"RadioGroup\", \"ReadOnly\", \"Rel\", \"Required\", \"Role\", \"Rows\", \"RowSpan\", \"Sandbox\", \"Scope\", \"Scoped\", \"Scrolling\", \"Seamless\", \"Selected\", \"Shape\", \"Size\", \"Sizes\", \"Span\", \"SpellCheck\", \"Src\", \"SrcDoc\", \"SrcLang\", \"SrcSet\", \"Start\", \"Step\", \"Summary\", \"TabIndex\", \"Target\", \"Title\", \"Type\", \"UseMap\", \"Value\", \"value\", \"Width\", \"Wmode\", \"Wrap\", \"About\", \"Datatype\", \"Inlist\", \"Prefix\", \"Property\", \"Resource\", \"Typeof\", \"Vocab\", \"AutoCapitalize\", \"AutoCorrect\", \"AutoSave\", \"ItemProp\", \"ItemScope\", \"ItemType\", \"ItemID\", \"ItemRef\", \"Results\", \"Security\", \"Unselectable\", \"Custom\"];\n    }\n}\n\nexport function HTMLAttr$reflection() {\n    return union_type(\"Fable.React.Props.HTMLAttr\", [], HTMLAttr, () => [[[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", array_type(string_type)]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class CSSProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"AlignContent\", \"AlignItems\", \"AlignSelf\", \"AlignmentAdjust\", \"AlignmentBaseline\", \"All\", \"Animation\", \"AnimationDelay\", \"AnimationDirection\", \"AnimationDuration\", \"AnimationFillMode\", \"AnimationIterationCount\", \"AnimationName\", \"AnimationPlayState\", \"AnimationTimingFunction\", \"Appearance\", \"BackfaceVisibility\", \"Background\", \"BackgroundAttachment\", \"BackgroundBlendMode\", \"BackgroundClip\", \"BackgroundColor\", \"BackgroundComposite\", \"BackgroundImage\", \"BackgroundOrigin\", \"BackgroundPosition\", \"BackgroundPositionX\", \"BackgroundPositionY\", \"BackgroundRepeat\", \"BackgroundSize\", \"BaselineShift\", \"Behavior\", \"BlockSize\", \"Border\", \"BorderBlockEnd\", \"BorderBlockEndColor\", \"BorderBlockEndStyle\", \"BorderBlockEndWidth\", \"BorderBlockStart\", \"BorderBlockStartColor\", \"BorderBlockStartStyle\", \"BorderBlockStartWidth\", \"BorderBottom\", \"BorderBottomColor\", \"BorderBottomLeftRadius\", \"BorderBottomRightRadius\", \"BorderBottomStyle\", \"BorderBottomWidth\", \"BorderCollapse\", \"BorderColor\", \"BorderCornerShape\", \"BorderImage\", \"BorderImageOutset\", \"BorderImageRepeat\", \"BorderImageSlice\", \"BorderImageSource\", \"BorderImageWidth\", \"BorderInlineEnd\", \"BorderInlineEndColor\", \"BorderInlineEndStyle\", \"BorderInlineEndWidth\", \"BorderInlineStart\", \"BorderInlineStartColor\", \"BorderInlineStartStyle\", \"BorderInlineStartWidth\", \"BorderLeft\", \"BorderLeftColor\", \"BorderLeftStyle\", \"BorderLeftWidth\", \"BorderRadius\", \"BorderRight\", \"BorderRightColor\", \"BorderRightStyle\", \"BorderRightWidth\", \"BorderSpacing\", \"BorderStyle\", \"BorderTop\", \"BorderTopColor\", \"BorderTopLeftRadius\", \"BorderTopRightRadius\", \"BorderTopStyle\", \"BorderTopWidth\", \"BorderWidth\", \"Bottom\", \"BoxAlign\", \"BoxDecorationBreak\", \"BoxDirection\", \"BoxFlex\", \"BoxFlexGroup\", \"BoxLineProgression\", \"BoxLines\", \"BoxOrdinalGroup\", \"BoxShadow\", \"BoxSizing\", \"BreakAfter\", \"BreakBefore\", \"BreakInside\", \"CaptionSide\", \"CaretColor\", \"Clear\", \"Clip\", \"ClipPath\", \"ClipRule\", \"Color\", \"ColorInterpolation\", \"ColorInterpolationFilters\", \"ColorProfile\", \"ColorRendering\", \"ColumnCount\", \"ColumnFill\", \"ColumnGap\", \"ColumnRule\", \"ColumnRuleColor\", \"ColumnRuleStyle\", \"ColumnRuleWidth\", \"ColumnSpan\", \"ColumnWidth\", \"Columns\", \"Content\", \"CounterIncrement\", \"CounterReset\", \"Cue\", \"CueAfter\", \"Cursor\", \"Direction\", \"Display\", \"DominantBaseline\", \"EmptyCells\", \"EnableBackground\", \"Fill\", \"FillOpacity\", \"FillRule\", \"Filter\", \"Flex\", \"FlexAlign\", \"FlexBasis\", \"FlexDirection\", \"FlexFlow\", \"FlexGrow\", \"FlexItemAlign\", \"FlexLinePack\", \"FlexOrder\", \"FlexShrink\", \"FlexWrap\", \"Float\", \"FloodColor\", \"FloodOpacity\", \"FlowFrom\", \"Font\", \"FontFamily\", \"FontFeatureSettings\", \"FontKerning\", \"FontLanguageOverride\", \"FontSize\", \"FontSizeAdjust\", \"FontStretch\", \"FontStyle\", \"FontSynthesis\", \"FontVariant\", \"FontVariantAlternates\", \"FontVariantCaps\", \"FontVariantEastAsian\", \"FontVariantLigatures\", \"FontVariantNumeric\", \"FontVariantPosition\", \"FontWeight\", \"GlyphOrientationHorizontal\", \"GlyphOrientationVertical\", \"Grid\", \"GridArea\", \"GridAutoColumns\", \"GridAutoFlow\", \"GridAutoRows\", \"GridColumn\", \"GridColumnEnd\", \"GridColumnGap\", \"GridColumnStart\", \"GridGap\", \"GridRow\", \"GridRowEnd\", \"GridRowGap\", \"GridRowPosition\", \"GridRowSpan\", \"GridRowStart\", \"GridTemplate\", \"GridTemplateAreas\", \"GridTemplateColumns\", \"GridTemplateRows\", \"HangingPunctuation\", \"Height\", \"HyphenateLimitChars\", \"HyphenateLimitLines\", \"HyphenateLimitZone\", \"Hyphens\", \"ImageOrientation\", \"ImageRendering\", \"ImageResolution\", \"ImeMode\", \"InlineSize\", \"Isolation\", \"JustifyContent\", \"JustifySelf\", \"Kerning\", \"LayoutGrid\", \"LayoutGridChar\", \"LayoutGridLine\", \"LayoutGridMode\", \"LayoutGridType\", \"Left\", \"LetterSpacing\", \"LightingColor\", \"LineBreak\", \"LineClamp\", \"LineHeight\", \"ListStyle\", \"ListStyleImage\", \"ListStylePosition\", \"ListStyleType\", \"Margin\", \"MarginBlockEnd\", \"MarginBlockStart\", \"MarginBottom\", \"MarginInlineEnd\", \"MarginInlineStart\", \"MarginLeft\", \"MarginRight\", \"MarginTop\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"MarqueeDirection\", \"MarqueeStyle\", \"Mask\", \"MaskBorder\", \"MaskBorderRepeat\", \"MaskBorderSlice\", \"MaskBorderSource\", \"MaskBorderWidth\", \"MaskClip\", \"MaskComposite\", \"MaskImage\", \"MaskMode\", \"MaskOrigin\", \"MaskPosition\", \"MaskRepeat\", \"MaskSize\", \"MaskType\", \"MaxFontSize\", \"MaxHeight\", \"MaxWidth\", \"MinBlockSize\", \"MinHeight\", \"MinInlineSize\", \"MinWidth\", \"MixBlendMode\", \"ObjectFit\", \"ObjectPosition\", \"OffsetBlockEnd\", \"OffsetBlockStart\", \"OffsetInlineEnd\", \"OffsetInlineStart\", \"Opacity\", \"Order\", \"Orphans\", \"Outline\", \"OutlineColor\", \"OutlineOffset\", \"OutlineStyle\", \"OutlineWidth\", \"OverflowStyle\", \"OverflowWrap\", \"OverflowX\", \"OverflowY\", \"Padding\", \"PaddingBlockEnd\", \"PaddingBlockStart\", \"PaddingBottom\", \"PaddingInlineEnd\", \"PaddingInlineStart\", \"PaddingLeft\", \"PaddingRight\", \"PaddingTop\", \"PageBreakAfter\", \"PageBreakBefore\", \"PageBreakInside\", \"Pause\", \"PauseAfter\", \"PauseBefore\", \"Perspective\", \"PerspectiveOrigin\", \"PointerEvents\", \"Position\", \"PunctuationTrim\", \"Quotes\", \"RegionFragment\", \"Resize\", \"RestAfter\", \"RestBefore\", \"Right\", \"RubyAlign\", \"RubyMerge\", \"RubyPosition\", \"ScrollBehavior\", \"ScrollSnapCoordinate\", \"ScrollSnapDestination\", \"ScrollSnapType\", \"ShapeImageThreshold\", \"ShapeInside\", \"ShapeMargin\", \"ShapeOutside\", \"ShapeRendering\", \"Speak\", \"SpeakAs\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeLinejoin\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TabSize\", \"TableLayout\", \"TextAlign\", \"TextAlignLast\", \"TextAnchor\", \"TextCombineUpright\", \"TextDecoration\", \"TextDecorationColor\", \"TextDecorationLine\", \"TextDecorationLineThrough\", \"TextDecorationNone\", \"TextDecorationOverline\", \"TextDecorationSkip\", \"TextDecorationStyle\", \"TextDecorationUnderline\", \"TextEmphasis\", \"TextEmphasisColor\", \"TextEmphasisPosition\", \"TextEmphasisStyle\", \"TextHeight\", \"TextIndent\", \"TextJustify\", \"TextJustifyTrim\", \"TextKashidaSpace\", \"TextLineThrough\", \"TextLineThroughColor\", \"TextLineThroughMode\", \"TextLineThroughStyle\", \"TextLineThroughWidth\", \"TextOrientation\", \"TextOverflow\", \"TextOverline\", \"TextOverlineColor\", \"TextOverlineMode\", \"TextOverlineStyle\", \"TextOverlineWidth\", \"TextRendering\", \"TextScript\", \"TextShadow\", \"TextTransform\", \"TextUnderlinePosition\", \"TextUnderlineStyle\", \"Top\", \"TouchAction\", \"Transform\", \"TransformBox\", \"TransformOrigin\", \"TransformOriginZ\", \"TransformStyle\", \"Transition\", \"TransitionDelay\", \"TransitionDuration\", \"TransitionProperty\", \"TransitionTimingFunction\", \"UnicodeBidi\", \"UnicodeRange\", \"UserFocus\", \"UserInput\", \"UserSelect\", \"VerticalAlign\", \"Visibility\", \"VoiceBalance\", \"VoiceDuration\", \"VoiceFamily\", \"VoicePitch\", \"VoiceRange\", \"VoiceRate\", \"VoiceStress\", \"VoiceVolume\", \"WhiteSpace\", \"WhiteSpaceTreatment\", \"Widows\", \"Width\", \"WillChange\", \"WordBreak\", \"WordSpacing\", \"WordWrap\", \"WrapFlow\", \"WrapMargin\", \"WrapOption\", \"WritingMode\", \"ZIndex\", \"Zoom\", \"Custom\"];\n    }\n}\n\nexport function CSSProp$reflection() {\n    return union_type(\"Fable.React.Props.CSSProp\", [], CSSProp, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport function stringEnum(case$) {\n    return toString(case$);\n}\n\nexport function CSSProp_Overflow_25F0CD75(overflow, overflowY) {\n    if (overflowY == null) {\n        return [\"overflow\", stringEnum(overflow)];\n    }\n    else {\n        const value = overflowY;\n        return [\"overflow\", (stringEnum(overflow) + \" \") + stringEnum(value)];\n    }\n}\n\n","import { FSharpRef } from \"./Types.js\";\nexport function tryParse(str, defValue) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            defValue.contents = v;\n            return true;\n        }\n    }\n    return false;\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(0);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n","\nexport function Browser_Types_Event__Event_get_Value(this$) {\n    return this$.target.value;\n}\n\nexport function Browser_Types_Event__Event_get_Checked(this$) {\n    return this$.target.checked;\n}\n\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.1.5/List.js\";\nimport { singleton as singleton_1 } from \"../fable-library.3.1.5/AsyncBuilder.js\";\nimport { startImmediate, catchAsync } from \"../fable-library.3.1.5/Async.js\";\nimport { Timer_delay } from \"./prelude.fs.js\";\n\nexport function Cmd_exec(onError, dispatch, cmd) {\n    iterate((call) => {\n        try {\n            call(dispatch);\n        }\n        catch (ex) {\n            onError(ex);\n        }\n    }, cmd);\n}\n\nexport function Cmd_none() {\n    return empty();\n}\n\nexport function Cmd_map(f, cmd) {\n    return map((g) => ((arg_1) => {\n        g((arg) => {\n            arg_1(f(arg));\n        });\n    }), cmd);\n}\n\nexport function Cmd_batch(cmds) {\n    return concat(cmds);\n}\n\nexport function Cmd_ofSub(sub) {\n    return singleton(sub);\n}\n\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        try {\n            return dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n            return dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        try {\n            dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n        }\n    });\n}\n\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        try {\n            task(arg);\n        }\n        catch (x) {\n            dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_result(msg) {\n    return singleton((dispatch) => {\n        dispatch(msg);\n    });\n}\n\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 0) {\n                arg_1(ofSuccess(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 1) {\n                arg_1(ofError(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_result(start, task) {\n    return singleton((arg) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg1) => {\n            arg(_arg1);\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsync_start(x) {\n    Timer_delay(0, (_arg1) => {\n        startImmediate(x);\n    });\n}\n\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\n    });\n}\n\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\n    });\n}\n\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).catch((arg_2) => {\n            dispatch(ofError(arg_2));\n        });\n    });\n}\n\nexport function Cmd_OfPromise_result(task) {\n    return singleton((dispatch) => {\n        void task.then(dispatch);\n    });\n}\n\nexport function Cmd_attemptFunc(task, arg, ofError) {\n    return Cmd_OfFunc_attempt(task, arg, ofError);\n}\n\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\nimport { map } from \"./Seq.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { Union } from \"../fable-library.3.1.5/Types.js\";\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.1.5/Reflection.js\";\nimport { fill } from \"../fable-library.3.1.5/Array.js\";\nimport { comparePrimitives, max } from \"../fable-library.3.1.5/Util.js\";\nimport { some } from \"../fable-library.3.1.5/Option.js\";\nimport { rangeNumber, singleton, collect, take, skip, append, delay } from \"../fable-library.3.1.5/Seq.js\";\n\nexport class RingState$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Writable\", \"ReadWritable\"];\n    }\n}\n\nexport function RingState$1$reflection(gen0) {\n    return union_type(\"Elmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\n}\n\nexport class RingBuffer$1 {\n    constructor(size) {\n        this.state = (new RingState$1(0, fill(new Array(max((x, y) => comparePrimitives(x, y), size, 10)), 0, max((x, y) => comparePrimitives(x, y), size, 10), null), 0));\n    }\n}\n\nexport function RingBuffer$1$reflection(gen0) {\n    return class_type(\"Elmish.RingBuffer`1\", [gen0], RingBuffer$1);\n}\n\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\n    return new RingBuffer$1(size);\n}\n\nexport function RingBuffer$1__Pop(__) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items = matchValue.fields[0];\n        const rix$0027 = ((rix + 1) % items.length) | 0;\n        if (rix$0027 === wix) {\n            __.state = (new RingState$1(0, items, wix));\n        }\n        else {\n            __.state = (new RingState$1(1, items, wix, rix$0027));\n        }\n        return some(items[rix]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RingBuffer$1__Push_2B595(__, item) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix_1 = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items_1 = matchValue.fields[0];\n        items_1[wix_1] = item;\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\n        if (wix$0027 === rix) {\n            __.state = (new RingState$1(1, RingBuffer$1__doubleSize(__, rix, items_1), items_1.length, 0));\n        }\n        else {\n            __.state = (new RingState$1(1, items_1, wix$0027, rix));\n        }\n    }\n    else {\n        const ix = matchValue.fields[1] | 0;\n        const items = matchValue.fields[0];\n        items[ix] = item;\n        const wix = ((ix + 1) % items.length) | 0;\n        __.state = (new RingState$1(1, items, wix, ix));\n    }\n}\n\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeNumber(0, 1, items.length))))))));\n}\n\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, comparePrimitives, max as max_1 } from \"./Util.js\";\nimport { Dictionary } from \"./MutableMap.js\";\nimport { addToDict, addToSet, getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { iterate as iterate_1 } from \"./Seq.js\";\n\nexport function Helpers_allocateArrayFromCons(cons, len) {\n    if ((typeof cons) === \"function\") {\n        return new cons(len);\n    }\n    else {\n        return new Array(len);\n    }\n}\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return Helpers_allocateArrayFromCons(cons, 0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = (totalLength + arr_1.length);\n            }\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = (totalIdx + 1);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    return concat(map(mapping, array, null), cons);\n}\n\nexport function countBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const key = projection(array[idx]);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            void (keys.push(key));\n        }\n    }\n    return map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys, null);\n}\n\nexport function distinctBy(projection, array, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => addToSet(projection(arg), hashSet), array);\n}\n\nexport function distinct(array, eq) {\n    return distinctBy((x) => x, array, eq);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (array.length === 0) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return array.filter(((arg00) => addToSet(arg00, cached)));\n    }\n}\n\nexport function groupBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const v = array[idx];\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            void (matchValue[1].push(v));\n        }\n        else {\n            addToDict(dict, key, [v]);\n            void (keys.push(key));\n        }\n    }\n    return map((key_1) => [key_1, Array.from(getItemFromDict(dict, key_1))], keys, null);\n}\n\nexport function empty(cons) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n}\n\nexport function singleton(value, cons) {\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    void (array.push(x));\n}\n\nexport function addRangeInPlace(range, array) {\n    iterate_1((x) => {\n        void (array.push(x));\n    }, range);\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        void (array.splice(i, 1));\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            void (array.splice(i, 1));\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\n    try {\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\n    }\n    catch (matchValue) {\n        copyTo(source, sourceIndex, target, targetIndex, count);\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = (iTrue + 1);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = (iFalse + 1);\n        }\n    }\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound();\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    return value_2(matchValue);\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    return map((x_1) => value_2(chooser(x_1)), array.filter(((x) => (chooser(x) != null))), cons);\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    if (!(checkFlags.every(((y) => (1 === y))))) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                void (res.push(x));\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            let slice;\n            const start_1 = (x * chunkSize) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = comparer(array1[i], array2[i]);\n                i = (i + 1);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith((e1, e2) => compare(e1, e2), array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            let slice;\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const lenInner = arrays_1[0].length | 0;\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import { Record } from \"../fable-library.3.1.5/Types.js\";\nimport { record_type, class_type, string_type, tuple_type, list_type, lambda_type, unit_type } from \"../fable-library.3.1.5/Reflection.js\";\nimport { Cmd_exec, Cmd_batch, Cmd_none } from \"./cmd.fs.js\";\nimport { Log_toConsole, Log_onError } from \"./prelude.fs.js\";\nimport { curry, partialApply, checkArity, uncurry } from \"../fable-library.3.1.5/Util.js\";\nimport { ofArray } from \"../fable-library.3.1.5/List.js\";\nimport { RingBuffer$1__Pop, RingBuffer$1__Push_2B595, RingBuffer$1_$ctor_Z524259A4 } from \"./ring.fs.js\";\nimport { value as value_1, some } from \"../fable-library.3.1.5/Option.js\";\nimport { printf, toText } from \"../fable-library.3.1.5/String.js\";\n\nexport class Program$4 extends Record {\n    constructor(init, update, subscribe, view, setState, onError, syncDispatch) {\n        super();\n        this.init = init;\n        this.update = update;\n        this.subscribe = subscribe;\n        this.view = view;\n        this.setState = setState;\n        this.onError = onError;\n        this.syncDispatch = syncDispatch;\n    }\n}\n\nexport function Program$4$reflection(gen0, gen1, gen2, gen3) {\n    return record_type(\"Elmish.Program`4\", [gen0, gen1, gen2, gen3], Program$4, () => [[\"init\", lambda_type(gen0, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type))))], [\"update\", lambda_type(gen2, lambda_type(gen1, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))))], [\"subscribe\", lambda_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))], [\"view\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), gen3))], [\"setState\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), unit_type))], [\"onError\", lambda_type(tuple_type(string_type, class_type(\"System.Exception\")), unit_type)], [\"syncDispatch\", lambda_type(lambda_type(gen2, unit_type), lambda_type(gen2, unit_type))]]);\n}\n\nexport function ProgramModule_mkProgram(init, update, view) {\n    return new Program$4(init, update, (_arg1) => Cmd_none(), view, (model, arg) => {\n        void view(model, arg);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_mkSimple(init, update, view) {\n    return new Program$4((arg) => [init(arg), Cmd_none()], (msg, arg_1) => [update(msg, arg_1), Cmd_none()], (_arg1) => Cmd_none(), view, (model, arg_2) => {\n        void view(model, arg_2);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_withSubscription(subscribe, program) {\n    return new Program$4(program.init, program.update, (model) => Cmd_batch(ofArray([program.subscribe(model), subscribe(model)])), checkArity(2, program.view), program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withConsoleTrace(program) {\n    return new Program$4((arg) => {\n        const patternInput = program.init(arg);\n        const initModel = patternInput[0];\n        Log_toConsole(\"Initial state:\", initModel);\n        return [initModel, patternInput[1]];\n    }, (msg, model) => {\n        Log_toConsole(\"New message:\", msg);\n        const patternInput_1 = program.update(msg, model);\n        const newModel = patternInput_1[0];\n        Log_toConsole(\"Updated state:\", newModel);\n        return [newModel, patternInput_1[1]];\n    }, program.subscribe, checkArity(2, program.view), program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withTrace(trace, program) {\n    return new Program$4(program.init, (msg, model) => {\n        const patternInput = program.update(msg, model);\n        const state = patternInput[0];\n        trace(msg, state);\n        return [state, patternInput[1]];\n    }, program.subscribe, checkArity(2, program.view), program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withErrorHandler(onError, program) {\n    return new Program$4(program.init, program.update, program.subscribe, checkArity(2, program.view), program.setState, onError, program.syncDispatch);\n}\n\nexport function ProgramModule_mapErrorHandler(map, program) {\n    return new Program$4(program.init, program.update, program.subscribe, checkArity(2, program.view), program.setState, partialApply(1, map, [program.onError]), program.syncDispatch);\n}\n\nexport function ProgramModule_onError(program) {\n    return program.onError;\n}\n\nexport function ProgramModule_withSetState(setState, program) {\n    return new Program$4(program.init, program.update, program.subscribe, checkArity(2, program.view), setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_setState(program) {\n    return curry(2, program.setState);\n}\n\nexport function ProgramModule_view(program) {\n    return curry(2, checkArity(2, program.view));\n}\n\nexport function ProgramModule_withSyncDispatch(syncDispatch, program) {\n    return new Program$4(program.init, program.update, program.subscribe, checkArity(2, program.view), program.setState, program.onError, syncDispatch);\n}\n\nexport function ProgramModule_map(mapInit, mapUpdate, mapView, mapSetState, mapSubscribe, program) {\n    const init = partialApply(1, mapInit, [program.init]);\n    const update = partialApply(2, mapUpdate, [program.update]);\n    const view = partialApply(2, mapView, [checkArity(2, program.view)]);\n    const setState = partialApply(2, mapSetState, [program.setState]);\n    return new Program$4(init, uncurry(2, update), partialApply(1, mapSubscribe, [program.subscribe]), uncurry(2, view), uncurry(2, setState), program.onError, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_runWith(arg, program) {\n    const patternInput = program.init(arg);\n    const model = patternInput[0];\n    const rb = RingBuffer$1_$ctor_Z524259A4(10);\n    let reentered = false;\n    let state = model;\n    const dispatch = (msg) => {\n        if (reentered) {\n            RingBuffer$1__Push_2B595(rb, msg);\n        }\n        else {\n            reentered = true;\n            let nextMsg = some(msg);\n            while (nextMsg != null) {\n                const msg_1 = value_1(nextMsg);\n                try {\n                    const patternInput_1 = program.update(msg_1, state);\n                    const model$0027 = patternInput_1[0];\n                    program.setState(model$0027, syncDispatch);\n                    Cmd_exec((ex) => {\n                        program.onError([toText(printf(\"Error in command while handling: %A\"))(msg_1), ex]);\n                    }, syncDispatch, patternInput_1[1]);\n                    state = model$0027;\n                }\n                catch (ex_1) {\n                    program.onError([toText(printf(\"Unable to process the message: %A\"))(msg_1), ex_1]);\n                }\n                nextMsg = RingBuffer$1__Pop(rb);\n            }\n            reentered = false;\n        }\n    };\n    const syncDispatch = partialApply(1, program.syncDispatch, [dispatch]);\n    program.setState(model, syncDispatch);\n    Cmd_exec((ex_3) => {\n        program.onError([\"Error intitializing:\", ex_3]);\n    }, syncDispatch, Cmd_batch(ofArray([(() => {\n        try {\n            return program.subscribe(model);\n        }\n        catch (ex_2) {\n            program.onError([\"Unable to subscribe:\", ex_2]);\n            return Cmd_none();\n        }\n    })(), patternInput[1]])));\n}\n\nexport function ProgramModule_run(program) {\n    ProgramModule_runWith(void 0, program);\n}\n\n","import { ProgramModule_view, ProgramModule_withSetState } from \"../Fable.Elmish.3.1.0/program.fs.js\";\nimport * as react$002Ddom from \"react-dom\";\nimport { uncurry } from \"../fable-library.3.1.5/Util.js\";\nimport { Common_lazyView2With } from \"./common.fs.js\";\n\nexport function Program_Internal_withReactBatchedUsing(lazyView2With, placeholderId, program) {\n    let lastRequest = void 0;\n    return ProgramModule_withSetState((model, dispatch) => {\n        if (lastRequest != null) {\n            window.cancelAnimationFrame(lastRequest);\n        }\n        lastRequest = window.requestAnimationFrame((_arg1) => {\n            react$002Ddom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n        });\n    }, program);\n}\n\nexport function Program_Internal_withReactSynchronousUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react$002Ddom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_Internal_withReactHydrateUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react$002Ddom.hydrate(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_withReactBatched(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactSynchronous(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReact(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactUnoptimized(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactHydrate(placeholderId, program) {\n    return Program_Internal_withReactHydrateUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\n","import { Record } from \"../fable-library.3.1.5/Types.js\";\nimport { obj_type, record_type, bool_type, lambda_type, class_type, unit_type } from \"../fable-library.3.1.5/Reflection.js\";\nimport { Component } from \"react\";\nimport * as react from \"react\";\nimport { equalArrays, equals } from \"../fable-library.3.1.5/Util.js\";\n\nexport class LazyProps$1 extends Record {\n    constructor(model, render, equal) {\n        super();\n        this.model = model;\n        this.render = render;\n        this.equal = equal;\n    }\n}\n\nexport function LazyProps$1$reflection(gen0) {\n    return record_type(\"Elmish.React.LazyProps`1\", [gen0], LazyProps$1, () => [[\"model\", gen0], [\"render\", lambda_type(unit_type, class_type(\"Fable.React.ReactElement\"))], [\"equal\", lambda_type(gen0, lambda_type(gen0, bool_type))]]);\n}\n\nexport class Components_LazyView$1 extends Component {\n    constructor(props) {\n        super(props);\n    }\n    shouldComponentUpdate(nextProps, _nextState) {\n        const this$ = this;\n        return !(this$.props).equal((this$.props).model, nextProps.model);\n    }\n    render() {\n        const this$ = this;\n        return (this$.props).render();\n    }\n}\n\nexport function Components_LazyView$1$reflection(gen0) {\n    return class_type(\"Elmish.React.Components.LazyView`1\", [gen0], Components_LazyView$1, class_type(\"Fable.React.Component`2\", [LazyProps$1$reflection(gen0), obj_type]));\n}\n\nexport function Components_LazyView$1_$ctor_Z7829D94B(props) {\n    return new Components_LazyView$1(props);\n}\n\nexport function Common_lazyViewWith(equal, view, state) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state), equal));\n}\n\nexport function Common_lazyView2With(equal, view, state, dispatch) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state, dispatch), equal));\n}\n\nexport function Common_lazyView3With(equal, view, state1, state2, dispatch) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1([state1, state2], () => view(state1, state2, dispatch), equal));\n}\n\nexport function Common_lazyView(view) {\n    return (state) => Common_lazyViewWith((x, y) => equals(x, y), view, state);\n}\n\nexport function Common_lazyView2(view) {\n    return (state) => ((dispatch) => Common_lazyView2With((x, y) => equals(x, y), view, state, dispatch));\n}\n\nexport function Common_lazyView3(view) {\n    return (state1) => ((state2) => ((dispatch) => Common_lazyView3With((x, y) => equalArrays(x, y), view, state1, state2, dispatch)));\n}\n\n","import { Union } from \"./.fable/fable-library.3.1.5/Types.js\";\nimport { union_type, float64_type } from \"./.fable/fable-library.3.1.5/Reflection.js\";\nimport { height, width, trajectoryContext, clear, velocityCanvas, trajectoryCanvas, drawTracer, drawVelocityMarker, drawBody, clearVelocityMarker, clearBody } from \"./Graphics.js\";\nimport { ModelModule_initial, ModelModule_started, Vector2__get_Y, Vector2__get_X, Vector2Module_zero, ModelModule_acceleration, ModelModule_minSpeed, ModelModule_maxSpeed, ModelModule_minJumpStep, ModelModule_maxJumpStep, BodyModule_center, ModelModule_minTraceInterval, ModelModule_minDragConstant, BodyModule_minMass, Model, Body, Vector2Module_ofMagnitudeDegrees, ModelModule_recalculateAcceleration, simulate } from \"./Physics.js\";\nimport { singleton as singleton_1, append, delay, iterate } from \"./.fable/fable-library.3.1.5/Seq.js\";\nimport { min, comparePrimitives, max } from \"./.fable/fable-library.3.1.5/Util.js\";\nimport { ofSeq, ofArray, singleton } from \"./.fable/fable-library.3.1.5/List.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"./.fable/fable-library.3.1.5/MapUtil.js\";\nimport { DOMAttr, HTMLAttr } from \"./.fable/Fable.React.7.2.0/Fable.React.Props.fs.js\";\nimport { parse } from \"./.fable/fable-library.3.1.5/Double.js\";\nimport { Browser_Types_Event__Event_get_Value } from \"./.fable/Fable.React.7.2.0/Fable.React.Extensions.fs.js\";\nimport { printf, toText } from \"./.fable/fable-library.3.1.5/String.js\";\nimport { ProgramModule_mkSimple, ProgramModule_withSubscription, ProgramModule_run } from \"./.fable/Fable.Elmish.3.1.0/program.fs.js\";\nimport { Cmd_ofSub } from \"./.fable/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { Program_withReactBatched } from \"./.fable/Fable.Elmish.React.3.0.1/react.fs.js\";\n\nexport class Message extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"SetInitialSpeed\", \"SetInitialAngle\", \"SetInitialX\", \"SetInitialY\", \"SetMass\", \"SetAccelerationGravity\", \"SetDragConstant\", \"ToggleShowTrajectory\", \"ToggleShowVelocity\", \"SetTraceInterval\", \"SetJumpStep\", \"SetSimulationSpeed\", \"StartStop\", \"NextFrame\", \"Jump\", \"Reset\"];\n    }\n}\n\nexport function Message$reflection() {\n    return union_type(\"ProjectilePhysicsSimulation.App.Message\", [], Message, () => [[[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [], [], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [], [[\"Item\", float64_type]], [], []]);\n}\n\nexport function simulateAndDraw(model, totalTime) {\n    clearBody(model.Projectile);\n    clearVelocityMarker(model.Projectile);\n    const patternInput = simulate(model, totalTime);\n    const newModel = patternInput[0];\n    drawBody(newModel.Projectile);\n    drawVelocityMarker(newModel.Projectile);\n    iterate((point) => {\n        drawTracer(point);\n    }, patternInput[1]);\n    return newModel;\n}\n\nexport function newAcceleration(model) {\n    return (model.Running ? ((x) => x) : ((model_1) => ModelModule_recalculateAcceleration(model_1)))(model);\n}\n\nexport function update(message, model) {\n    let inputRecord_4;\n    switch (message.tag) {\n        case 1: {\n            const a = message.fields[0];\n            clearVelocityMarker(model.Projectile);\n            let projectile_1;\n            const inputRecord_1 = model.Projectile;\n            projectile_1 = (new Body(inputRecord_1.Width, inputRecord_1.Height, inputRecord_1.Mass, inputRecord_1.Position, Vector2Module_ofMagnitudeDegrees(model.InitialSpeed, a), inputRecord_1.Acceleration, inputRecord_1.PrevAcceleration));\n            drawVelocityMarker(projectile_1);\n            return new Model(projectile_1, model.InitialSpeed, a, model.InitialPosition, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, model.Running, model.SimulationSpeed, model.JumpStep, model.Time, model.LeftOverTime);\n        }\n        case 2: {\n            clearBody(model.Projectile);\n            clearVelocityMarker(model.Projectile);\n            const position = [message.fields[0], model.InitialPosition[1]];\n            let projectile_2;\n            const inputRecord_2 = model.Projectile;\n            projectile_2 = (new Body(inputRecord_2.Width, inputRecord_2.Height, inputRecord_2.Mass, position, inputRecord_2.Velocity, inputRecord_2.Acceleration, inputRecord_2.PrevAcceleration));\n            drawBody(projectile_2);\n            drawVelocityMarker(projectile_2);\n            return new Model(projectile_2, model.InitialSpeed, model.InitialAngle, position, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, model.Running, model.SimulationSpeed, model.JumpStep, model.Time, model.LeftOverTime);\n        }\n        case 3: {\n            clearBody(model.Projectile);\n            clearVelocityMarker(model.Projectile);\n            const position_1 = [model.InitialPosition[0], message.fields[0]];\n            let projectile_3;\n            const inputRecord_3 = model.Projectile;\n            projectile_3 = (new Body(inputRecord_3.Width, inputRecord_3.Height, inputRecord_3.Mass, position_1, inputRecord_3.Velocity, inputRecord_3.Acceleration, inputRecord_3.PrevAcceleration));\n            drawBody(projectile_3);\n            drawVelocityMarker(projectile_3);\n            return new Model(projectile_3, model.InitialSpeed, model.InitialAngle, position_1, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, model.Running, model.SimulationSpeed, model.JumpStep, model.Time, model.LeftOverTime);\n        }\n        case 4: {\n            return newAcceleration(new Model((inputRecord_4 = model.Projectile, new Body(inputRecord_4.Width, inputRecord_4.Height, max((x_3, y_3) => comparePrimitives(x_3, y_3), BodyModule_minMass, message.fields[0]), inputRecord_4.Position, inputRecord_4.Velocity, inputRecord_4.Acceleration, inputRecord_4.PrevAcceleration)), model.InitialSpeed, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, model.Running, model.SimulationSpeed, model.JumpStep, model.Time, model.LeftOverTime));\n        }\n        case 5: {\n            return newAcceleration(new Model(model.Projectile, model.InitialSpeed, model.InitialAngle, model.InitialPosition, message.fields[0], model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, model.Running, model.SimulationSpeed, model.JumpStep, model.Time, model.LeftOverTime));\n        }\n        case 6: {\n            return newAcceleration(new Model(model.Projectile, model.InitialSpeed, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, max((x_4, y_4) => comparePrimitives(x_4, y_4), ModelModule_minDragConstant, message.fields[0]), model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, model.Running, model.SimulationSpeed, model.JumpStep, model.Time, model.LeftOverTime));\n        }\n        case 7: {\n            trajectoryCanvas.hidden = model.ShowTrajectory;\n            return new Model(model.Projectile, model.InitialSpeed, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, model.DragConstant, !model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, model.Running, model.SimulationSpeed, model.JumpStep, model.Time, model.LeftOverTime);\n        }\n        case 8: {\n            velocityCanvas.hidden = model.ShowVelocityMarker;\n            return new Model(model.Projectile, model.InitialSpeed, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, !model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, model.Running, model.SimulationSpeed, model.JumpStep, model.Time, model.LeftOverTime);\n        }\n        case 9: {\n            const trace = max((x_5, y_5) => comparePrimitives(x_5, y_5), ModelModule_minTraceInterval, message.fields[0]);\n            if (trace !== model.TraceInterval) {\n                return new Model(model.Projectile, model.InitialSpeed, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, trace, ((model.Time - model.LastTracer) >= model.TraceInterval) ? (drawTracer(BodyModule_center(model.Projectile)), model.Time) : model.LastTracer, model.Running, model.SimulationSpeed, model.JumpStep, model.Time, model.LeftOverTime);\n            }\n            else {\n                return model;\n            }\n        }\n        case 10: {\n            return new Model(model.Projectile, model.InitialSpeed, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, model.Running, model.SimulationSpeed, min((x_7, y_7) => comparePrimitives(x_7, y_7), ModelModule_maxJumpStep, max((x_6, y_6) => comparePrimitives(x_6, y_6), ModelModule_minJumpStep, message.fields[0])), model.Time, model.LeftOverTime);\n        }\n        case 11: {\n            return new Model(model.Projectile, model.InitialSpeed, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, model.Running, min((x_10, y_9) => comparePrimitives(x_10, y_9), ModelModule_maxSpeed, max((x_9, y_8) => comparePrimitives(x_9, y_8), ModelModule_minSpeed, message.fields[0])), model.JumpStep, model.Time, model.LeftOverTime);\n        }\n        case 12: {\n            if (model.Running) {\n                return new Model(model.Projectile, model.InitialSpeed, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, false, model.SimulationSpeed, model.JumpStep, model.Time, 0);\n            }\n            else {\n                return new Model(model.Projectile, model.InitialSpeed, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, true, model.SimulationSpeed, model.JumpStep, model.Time, model.LeftOverTime);\n            }\n        }\n        case 13: {\n            if (model.Running) {\n                return simulateAndDraw(model, (min((x_11, y_10) => comparePrimitives(x_11, y_10), 0.1, message.fields[0] / 1000) * model.SimulationSpeed) + model.LeftOverTime);\n            }\n            else {\n                return model;\n            }\n        }\n        case 14: {\n            return simulateAndDraw(model, model.JumpStep);\n        }\n        case 15: {\n            clearBody(model.Projectile);\n            clearVelocityMarker(model.Projectile);\n            clear(trajectoryContext);\n            let projectile_4;\n            const velocity = Vector2Module_ofMagnitudeDegrees(model.InitialSpeed, model.InitialAngle);\n            const inputRecord_5 = model.Projectile;\n            projectile_4 = (new Body(inputRecord_5.Width, inputRecord_5.Height, inputRecord_5.Mass, model.InitialPosition, velocity, ModelModule_acceleration(model)(velocity)(model.Projectile.Mass), Vector2Module_zero()));\n            drawBody(projectile_4);\n            drawVelocityMarker(projectile_4);\n            drawTracer(BodyModule_center(projectile_4));\n            return new Model(projectile_4, model.InitialSpeed, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, 0, false, model.SimulationSpeed, model.JumpStep, 0, 0);\n        }\n        default: {\n            const v = message.fields[0];\n            clearVelocityMarker(model.Projectile);\n            let projectile;\n            const inputRecord = model.Projectile;\n            projectile = (new Body(inputRecord.Width, inputRecord.Height, inputRecord.Mass, inputRecord.Position, Vector2Module_ofMagnitudeDegrees(v, model.InitialAngle), inputRecord.Acceleration, inputRecord.PrevAcceleration));\n            drawVelocityMarker(projectile);\n            return new Model(projectile, v, model.InitialAngle, model.InitialPosition, model.AccelerationGravity, model.DragConstant, model.ShowTrajectory, model.ShowVelocityMarker, model.TraceInterval, model.LastTracer, model.Running, model.SimulationSpeed, model.JumpStep, model.Time, model.LeftOverTime);\n        }\n    }\n}\n\nexport function unit(unitName) {\n    return singleton(unitName);\n}\n\nexport function withSub(subscript, text) {\n    return ofArray([text, react.createElement(\"sub\", {}, subscript)]);\n}\n\nexport function withSuper(superscript, text) {\n    return ofArray([text, react.createElement(\"sup\", {}, superscript)]);\n}\n\nexport function checkbox(text, message, isChecked, dispatch) {\n    return react.createElement(\"li\", {}, react.createElement(\"label\", {\n        className: \"checkbox\",\n    }, react.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: isChecked,\n        onChange: (_arg1) => {\n            dispatch(message);\n        },\n    }), text));\n}\n\nexport function view(model, dispatch) {\n    let unit_1, attributes_1, unit_2, value_4, value_6, name_9, value_8, name_10, value_9, name_11, value_10, name_12, value_11, unit_3, unit_5, arg10_7, unit_10;\n    return [react.createElement(\"div\", {\n        className: \"simulation\",\n        key: \"simulation\",\n        style: {\n            width: width,\n        },\n    }, react.createElement(\"div\", {\n        className: \"controls\",\n        style: {\n            marginTop: height,\n        },\n    }, react.createElement(\"button\", keyValueList(ofSeq(delay(() => {\n        const playpause = model.Running ? \"Pause\" : \"Play\";\n        return append(singleton_1(new HTMLAttr(159, \"button\")), delay(() => append(singleton_1(new HTMLAttr(64, playpause.toLocaleLowerCase())), delay(() => append(singleton_1(new HTMLAttr(158, playpause)), delay(() => singleton_1(new DOMAttr(40, (_arg1) => {\n            dispatch(new Message(12));\n        }))))))));\n    })), 1)), react.createElement(\"label\", {}, \"Speed:\", (unit_1 = unit(\"x\"), react.createElement(\"div\", {\n        style: {\n            display: \"inline-block\",\n        },\n    }, ...ofSeq(delay(() => append(singleton_1(react.createElement(\"input\", keyValueList(ofSeq(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, model.SimulationSpeed)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e) => {\n        try {\n            dispatch(new Message(11, parse(Browser_Types_Event__Event_get_Value(e)) * 1));\n        }\n        catch (matchValue) {\n        }\n    })), delay(() => [new HTMLAttr(119, 0), new HTMLAttr(114, ModelModule_maxSpeed)])))))))))), 1))), delay(() => unit_1))))))), react.createElement(\"div\", {}, react.createElement(\"button\", {\n        type: \"button\",\n        className: \"jump\",\n        title: \"Jump\",\n        onClick: (_arg2) => {\n            dispatch(new Message(14));\n        },\n    }), (attributes_1 = [[\"style\", {\n        width: \"3em\",\n        marginLeft: 0,\n        marginTop: \"0.1em\",\n    }], new HTMLAttr(119, 0), new HTMLAttr(114, ModelModule_maxJumpStep)], (unit_2 = unit(\"s\"), react.createElement(\"div\", {\n        style: {\n            display: \"inline-block\",\n        },\n    }, ...ofSeq(delay(() => append(singleton_1(react.createElement(\"input\", keyValueList(ofSeq(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, model.JumpStep)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_1) => {\n        try {\n            dispatch(new Message(10, parse(Browser_Types_Event__Event_get_Value(e_1)) * 1));\n        }\n        catch (matchValue_1) {\n        }\n    })), delay(() => attributes_1)))))))))), 1))), delay(() => unit_2)))))))), react.createElement(\"button\", {\n        type: \"button\",\n        className: \"reset\",\n        title: \"Reset\",\n        onClick: (_arg3) => {\n            dispatch(new Message(15));\n        },\n    })), react.createElement(\"details\", {\n        className: \"telemetry\",\n        open: true,\n    }, react.createElement(\"summary\", {}, \"Telemetry\"), react.createElement(\"table\", {}, react.createElement(\"tbody\", {}, react.createElement(\"tr\", {}, react.createElement(\"td\", {}, ...ofSeq(delay(() => append([\"T\"], delay(() => singleton_1(\":\")))))), react.createElement(\"td\", {}, toText(printf(\"%.3f\"))(model.Time))), (value_4 = Vector2__get_X(model.Projectile.Position), react.createElement(\"tr\", {}, react.createElement(\"td\", {}, ...ofSeq(delay(() => append([\"X\"], delay(() => singleton_1(\":\")))))), react.createElement(\"td\", {}, toText(printf(\"%.3f\"))(value_4)))), (value_6 = Vector2__get_Y(model.Projectile.Position), react.createElement(\"tr\", {}, react.createElement(\"td\", {}, ...ofSeq(delay(() => append([\"Y\"], delay(() => singleton_1(\":\")))))), react.createElement(\"td\", {}, toText(printf(\"%.3f\"))(value_6)))), (name_9 = withSub(\"x\", \"V\"), (value_8 = Vector2__get_X(model.Projectile.Velocity), react.createElement(\"tr\", {}, react.createElement(\"td\", {}, ...ofSeq(delay(() => append(name_9, delay(() => singleton_1(\":\")))))), react.createElement(\"td\", {}, toText(printf(\"%.3f\"))(value_8))))), (name_10 = withSub(\"y\", \"V\"), (value_9 = Vector2__get_Y(model.Projectile.Velocity), react.createElement(\"tr\", {}, react.createElement(\"td\", {}, ...ofSeq(delay(() => append(name_10, delay(() => singleton_1(\":\")))))), react.createElement(\"td\", {}, toText(printf(\"%.3f\"))(value_9))))), (name_11 = withSub(\"x\", \"A\"), (value_10 = Vector2__get_X(model.Projectile.Acceleration), react.createElement(\"tr\", {}, react.createElement(\"td\", {}, ...ofSeq(delay(() => append(name_11, delay(() => singleton_1(\":\")))))), react.createElement(\"td\", {}, toText(printf(\"%.3f\"))(value_10))))), (name_12 = withSub(\"y\", \"A\"), (value_11 = Vector2__get_Y(model.Projectile.Acceleration), react.createElement(\"tr\", {}, react.createElement(\"td\", {}, ...ofSeq(delay(() => append(name_12, delay(() => singleton_1(\":\")))))), react.createElement(\"td\", {}, toText(printf(\"%.3f\"))(value_11))))))))), react.createElement(\"div\", {\n        className: \"settings\",\n        key: \"settings\",\n    }, react.createElement(\"ul\", {}, checkbox(\"Show Velocity Marker\", new Message(8), model.ShowVelocityMarker, dispatch), checkbox(\"Show Trajectory\", new Message(7), model.ShowTrajectory, dispatch), (unit_3 = unit(\"s\"), react.createElement(\"li\", {}, react.createElement(\"label\", {}, \"Trace Trajectory Every:\", react.createElement(\"div\", {\n        style: {\n            display: \"inline-block\",\n        },\n    }, ...ofSeq(delay(() => append(singleton_1(react.createElement(\"input\", keyValueList(ofSeq(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, model.TraceInterval)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_2) => {\n        try {\n            dispatch(new Message(9, parse(Browser_Types_Event__Event_get_Value(e_2)) * 1));\n        }\n        catch (matchValue_2) {\n        }\n    })), delay(() => [new HTMLAttr(119, 0)])))))))))), 1))), delay(() => unit_3))))))))), react.createElement(\"ul\", {}, (unit_5 = unit(\"kg\"), react.createElement(\"li\", {}, react.createElement(\"label\", {}, \"Mass:\", react.createElement(\"div\", {\n        style: {\n            display: \"inline-block\",\n        },\n    }, ...ofSeq(delay(() => append(singleton_1(react.createElement(\"input\", keyValueList(ofSeq(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, model.Projectile.Mass)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_3) => {\n        try {\n            dispatch(new Message(4, parse(Browser_Types_Event__Event_get_Value(e_3)) * 1));\n        }\n        catch (matchValue_3) {\n        }\n    })), delay(() => [new HTMLAttr(119, 0)])))))))))), 1))), delay(() => unit_5)))))))), (arg10_7 = withSuper(\"2\", \"m/s\"), ((message_6) => ((value_16) => ((dispatch_7) => react.createElement(\"li\", {}, react.createElement(\"label\", {}, \"Gravity:\", react.createElement(\"div\", {\n        style: {\n            display: \"inline-block\",\n        },\n    }, ...ofSeq(delay(() => append(singleton_1(react.createElement(\"input\", keyValueList(ofSeq(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, value_16)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_4) => {\n        try {\n            dispatch_7(message_6(parse(Browser_Types_Event__Event_get_Value(e_4)) * 1));\n        }\n        catch (matchValue_4) {\n        }\n    })), delay(() => [])))))))))), 1))), delay(() => arg10_7))))))))))((arg0_7) => (new Message(5, arg0_7)))(model.AccelerationGravity)(dispatch)), react.createElement(\"li\", {}, react.createElement(\"label\", {}, react.createElement(\"span\", {\n        title: \"Combined Drag Constant = fluid density (kg/m^3) * contact area (m^2) * drag coefficient (unitless) / 2\",\n    }, react.createElement(\"u\", {\n        className: \"tooltip\",\n    }, \"Combined Drag Constant\"), \":\"), (unit_10 = unit(\"kg/m\"), react.createElement(\"div\", {\n        style: {\n            display: \"inline-block\",\n        },\n    }, ...ofSeq(delay(() => append(singleton_1(react.createElement(\"input\", keyValueList(ofSeq(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, model.DragConstant)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_5) => {\n        try {\n            dispatch(new Message(6, parse(Browser_Types_Event__Event_get_Value(e_5)) * 1));\n        }\n        catch (matchValue_5) {\n        }\n    })), delay(() => [new HTMLAttr(119, 0)])))))))))), 1))), delay(() => unit_10))))))))), react.createElement(\"ul\", {}, ...ofSeq(delay(() => {\n        let value_20, attributes_10, unit_11;\n        return append(singleton_1((value_20 = Vector2__get_X(model.InitialPosition), (attributes_10 = singleton(new HTMLAttr(79, ModelModule_started(model))), (unit_11 = unit(\"m\"), react.createElement(\"li\", {}, react.createElement(\"label\", {}, \"Initial X\" + \":\", react.createElement(\"div\", {\n            style: {\n                display: \"inline-block\",\n            },\n        }, ...ofSeq(delay(() => append(singleton_1(react.createElement(\"input\", keyValueList(ofSeq(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, value_20)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_6) => {\n            try {\n                dispatch(((arg0_9) => (new Message(2, arg0_9)))(parse(Browser_Types_Event__Event_get_Value(e_6)) * 1));\n            }\n            catch (matchValue_6) {\n            }\n        })), delay(() => attributes_10)))))))))), 1))), delay(() => unit_11))))))))))), delay(() => {\n            let value_23, attributes_13, unit_14;\n            return append(singleton_1((value_23 = Vector2__get_Y(model.InitialPosition), (attributes_13 = singleton(new HTMLAttr(79, ModelModule_started(model))), (unit_14 = unit(\"m\"), react.createElement(\"li\", {}, react.createElement(\"label\", {}, \"Initial Y\" + \":\", react.createElement(\"div\", {\n                style: {\n                    display: \"inline-block\",\n                },\n            }, ...ofSeq(delay(() => append(singleton_1(react.createElement(\"input\", keyValueList(ofSeq(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, value_23)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_7) => {\n                try {\n                    dispatch(((arg0_10) => (new Message(3, arg0_10)))(parse(Browser_Types_Event__Event_get_Value(e_7)) * 1));\n                }\n                catch (matchValue_7) {\n                }\n            })), delay(() => attributes_13)))))))))), 1))), delay(() => unit_14))))))))))), delay(() => {\n                let attributes_16, unit_17;\n                return append(singleton_1((attributes_16 = singleton(new HTMLAttr(79, ModelModule_started(model))), (unit_17 = unit(\"m/s\"), react.createElement(\"li\", {}, react.createElement(\"label\", {}, \"Initial Speed\" + \":\", react.createElement(\"div\", {\n                    style: {\n                        display: \"inline-block\",\n                    },\n                }, ...ofSeq(delay(() => append(singleton_1(react.createElement(\"input\", keyValueList(ofSeq(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, model.InitialSpeed)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_8) => {\n                    try {\n                        dispatch(((arg0_11) => (new Message(0, arg0_11)))(parse(Browser_Types_Event__Event_get_Value(e_8)) * 1));\n                    }\n                    catch (matchValue_8) {\n                    }\n                })), delay(() => attributes_16)))))))))), 1))), delay(() => unit_17)))))))))), delay(() => {\n                    let attributes_19, unit_20;\n                    return singleton_1((attributes_19 = singleton(new HTMLAttr(79, ModelModule_started(model))), (unit_20 = unit(\"deg\"), react.createElement(\"li\", {}, react.createElement(\"label\", {}, \"Initial Angle\" + \":\", react.createElement(\"div\", {\n                        style: {\n                            display: \"inline-block\",\n                        },\n                    }, ...ofSeq(delay(() => append(singleton_1(react.createElement(\"input\", keyValueList(ofSeq(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, model.InitialAngle)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_9) => {\n                        try {\n                            dispatch(((arg0_12) => (new Message(1, arg0_12)))(parse(Browser_Types_Event__Event_get_Value(e_9)) * 1));\n                        }\n                        catch (matchValue_9) {\n                        }\n                    })), delay(() => attributes_19)))))))))), 1))), delay(() => unit_20))))))))));\n                }));\n            }));\n        }));\n    }))))];\n}\n\nexport function init() {\n    drawBody(ModelModule_initial.Projectile);\n    drawVelocityMarker(ModelModule_initial.Projectile);\n    drawTracer(BodyModule_center(ModelModule_initial.Projectile));\n    return ModelModule_initial;\n}\n\nexport function loop(dispatch, last, t) {\n    dispatch(new Message(13, (t - last) * 1));\n    void window.requestAnimationFrame((t_1) => {\n        loop(dispatch, t, t_1);\n    });\n}\n\nProgramModule_run(ProgramModule_withSubscription((_arg1) => Cmd_ofSub((d) => {\n    loop(d, 0, 0);\n}), Program_withReactBatched(\"elmish-app\", ProgramModule_mkSimple(init, (message, model) => update(message, model), (model_1, dispatch) => view(model_1, dispatch)))));\n\n","import { some } from \"../fable-library.3.1.5/Option.js\";\nimport Timer from \"../fable-library.3.1.5/Timer.js\";\nimport { add } from \"../fable-library.3.1.5/Observable.js\";\n\nexport function Log_onError(text, ex) {\n    console.error(some(text), ex);\n}\n\nexport function Log_toConsole(text, o) {\n    console.log(some(text), o);\n}\n\nexport function Timer_delay(interval, callback) {\n    let t;\n    let returnVal = new Timer(interval);\n    returnVal.AutoReset = false;\n    t = returnVal;\n    add(callback, t.Elapsed);\n    t.Enabled = true;\n    t.Start();\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n// It's empty as some runtime module handles the default behavior\n__webpack_require__.x = x => {};\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\nvar deferredModules = [\n\t[359,216],\n\t[885,216]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = x => {};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkProjectilePhysicsSimulation\"] = self[\"webpackChunkProjectilePhysicsSimulation\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = x => {};\n\t}\n\treturn result;\n}\nvar startup = __webpack_require__.x;\n__webpack_require__.x = () => {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = startup || (x => {});\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"sourceRoot":""}