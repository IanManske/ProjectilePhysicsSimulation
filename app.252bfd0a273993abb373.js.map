{"version":3,"file":"app.252bfd0a273993abb373.js","mappings":"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","sources":["webpack://projectile-physics-simulation/webpack/runtime/chunk loaded","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Util.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Types.js","webpack://projectile-physics-simulation/./build/production/Physics.js","webpack://projectile-physics-simulation/./build/production/Graphics.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Date.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Numeric.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/String.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Array.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/List.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.React.7.4.3/Fable.React.Props.fs.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Option.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Seq.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/FSharp.Core.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/MapUtil.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Double.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.React.7.4.3/Fable.React.Extensions.fs.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.Elmish.React.3.0.1/common.fs.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.Elmish.3.1.0/cmd.fs.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Range.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.Elmish.3.1.0/ring.fs.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.Elmish.3.1.0/program.fs.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.Elmish.React.3.0.1/react.fs.js","webpack://projectile-physics-simulation/./build/production/App.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.Elmish.3.1.0/prelude.fs.js","webpack://projectile-physics-simulation/webpack/bootstrap","webpack://projectile-physics-simulation/webpack/runtime/hasOwnProperty shorthand","webpack://projectile-physics-simulation/webpack/runtime/jsonp chunk loading","webpack://projectile-physics-simulation/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function disposeSafe(x) {\n    if (isDisposable(x)) {\n        x.Dispose();\n    }\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED = Symbol(\"curried\");\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    const uncurried = (...args) => {\n        let res = f;\n        for (let i = 0; i < arity; i++) {\n            res = res(args[i]);\n        }\n        return res;\n    };\n    uncurried[CURRIED] = f;\n    return uncurried;\n}\nfunction _curry(args, arity, f) {\n    return (arg) => arity === 1\n        ? f(...args.concat([arg]))\n        // Note it's important to generate a new args array every time\n        // because a partially applied function can be run multiple times\n        : _curry(args.concat([arg]), arity - 1, f);\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    else if (CURRIED in f) {\n        return f[CURRIED];\n    }\n    else {\n        return _curry([], arity, f);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED in f) {\n        f = f[CURRIED];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        return _curry(args, arity, f);\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { equals } from \"./fable_modules/fable-library.3.7.6/Util.js\";\nimport { Record } from \"./fable_modules/fable-library.3.7.6/Types.js\";\nimport { bool_type, record_type, obj_type, float64_type, int32_type } from \"./fable_modules/fable-library.3.7.6/Reflection.js\";\n\nexport function Vector2Module_zero() {\n    return [0, 0];\n}\n\nexport function Vector2Module_ofMagnitudeDegrees(magnitude, degrees) {\n    return [magnitude * Math.cos((degrees * 3.141592653589793) / 180), magnitude * Math.sin((degrees * 3.141592653589793) / 180)];\n}\n\nexport function Vector2Module_magnitude(vector) {\n    let _arg2, _arg1;\n    return Math.sqrt((_arg2 = vector, (_arg1 = vector, (_arg2[0] * _arg1[0]) + (_arg2[1] * _arg1[1]))));\n}\n\nexport function Vector2Module_normalizeUnsafe(vector) {\n    const _arg1 = vector;\n    const scalar = Vector2Module_magnitude(vector);\n    return [_arg1[0] / scalar, _arg1[1] / scalar];\n}\n\nexport function Vector2Module_normalize(vector) {\n    if (equals(vector, Vector2Module_zero())) {\n        return Vector2Module_zero();\n    }\n    else {\n        return Vector2Module_normalizeUnsafe(vector);\n    }\n}\n\nexport function Vector2__get_X(this$) {\n    return this$[0];\n}\n\nexport function Vector2__get_Y(this$) {\n    return this$[1];\n}\n\nexport class Body extends Record {\n    constructor(Width, Height, Mass, Position, Velocity, Acceleration, PrevAcceleration) {\n        super();\n        this.Width = (Width | 0);\n        this.Height = (Height | 0);\n        this.Mass = Mass;\n        this.Position = Position;\n        this.Velocity = Velocity;\n        this.Acceleration = Acceleration;\n        this.PrevAcceleration = PrevAcceleration;\n    }\n}\n\nexport function Body$reflection() {\n    return record_type(\"ProjectilePhysicsSimulation.Physics.Body\", [], Body, () => [[\"Width\", int32_type], [\"Height\", int32_type], [\"Mass\", float64_type], [\"Position\", obj_type], [\"Velocity\", obj_type], [\"Acceleration\", obj_type], [\"PrevAcceleration\", obj_type]]);\n}\n\nexport const BodyModule_minMass = 5E-324 * 1;\n\nexport function BodyModule_center(body) {\n    return [(body.Width * 0.5) + Vector2__get_X(body.Position), (body.Height * 0.5) + Vector2__get_Y(body.Position)];\n}\n\nexport class Settings extends Record {\n    constructor(InitialSpeed, InitialAngle, InitialPosition, AccelerationGravity, DragConstant, ShowTrajectory, ShowVelocityMarker, TraceInterval, SimulationSpeed, JumpStep) {\n        super();\n        this.InitialSpeed = InitialSpeed;\n        this.InitialAngle = InitialAngle;\n        this.InitialPosition = InitialPosition;\n        this.AccelerationGravity = AccelerationGravity;\n        this.DragConstant = DragConstant;\n        this.ShowTrajectory = ShowTrajectory;\n        this.ShowVelocityMarker = ShowVelocityMarker;\n        this.TraceInterval = TraceInterval;\n        this.SimulationSpeed = SimulationSpeed;\n        this.JumpStep = JumpStep;\n    }\n}\n\nexport function Settings$reflection() {\n    return record_type(\"ProjectilePhysicsSimulation.Physics.Settings\", [], Settings, () => [[\"InitialSpeed\", float64_type], [\"InitialAngle\", float64_type], [\"InitialPosition\", obj_type], [\"AccelerationGravity\", float64_type], [\"DragConstant\", float64_type], [\"ShowTrajectory\", bool_type], [\"ShowVelocityMarker\", bool_type], [\"TraceInterval\", float64_type], [\"SimulationSpeed\", float64_type], [\"JumpStep\", float64_type]]);\n}\n\nexport class Simulation extends Record {\n    constructor(Projectile, Running, Time, LastTracer, LeftOverTime, Settings) {\n        super();\n        this.Projectile = Projectile;\n        this.Running = Running;\n        this.Time = Time;\n        this.LastTracer = LastTracer;\n        this.LeftOverTime = LeftOverTime;\n        this.Settings = Settings;\n    }\n}\n\nexport function Simulation$reflection() {\n    return record_type(\"ProjectilePhysicsSimulation.Physics.Simulation\", [], Simulation, () => [[\"Projectile\", Body$reflection()], [\"Running\", bool_type], [\"Time\", float64_type], [\"LastTracer\", float64_type], [\"LeftOverTime\", float64_type], [\"Settings\", Settings$reflection()]]);\n}\n\nexport const timeStep = 1 / 120;\n\nexport const SimulationModule_minSpeed = 0;\n\nexport const SimulationModule_maxSpeed = 10000;\n\nexport const SimulationModule_minJumpStep = timeStep;\n\nexport const SimulationModule_maxJumpStep = 10000;\n\nexport const SimulationModule_minDragConstant = 0;\n\nexport const SimulationModule_minTraceInterval = timeStep - (timeStep / 1000000000);\n\nexport function SimulationModule_started(sim) {\n    return sim.Time > 0;\n}\n\nfunction SimulationModule_applyGravity(gravity, _arg1) {\n    return [_arg1[0], _arg1[1] + gravity];\n}\n\nfunction SimulationModule_accclerationDrag(constant, velocity, mass) {\n    let _arg2, _arg1;\n    let _arg1_2;\n    const scalar = (-constant) * ((_arg2 = velocity, (_arg1 = velocity, (_arg2[0] * _arg1[0]) + (_arg2[1] * _arg1[1]))));\n    const _arg1_1 = Vector2Module_normalize(velocity);\n    _arg1_2 = [scalar * _arg1_1[0], scalar * _arg1_1[1]];\n    const scalar_1 = mass;\n    return [_arg1_2[0] / scalar_1, _arg1_2[1] / scalar_1];\n}\n\nexport function SimulationModule_acceleration(settings, body) {\n    return SimulationModule_applyGravity(settings.AccelerationGravity, SimulationModule_accclerationDrag(settings.DragConstant, body.Velocity, body.Mass));\n}\n\nfunction SimulationModule_move(body, time, newAcceleration) {\n    let _arg2_1, _arg1_4, _arg2_4, _arg1_11, _arg1_10, scalar_5, _arg1_9, _arg2_3, _arg2_2, scalar_3, _arg1_5, _arg1_7, scalar_4, _arg1_6, _arg1_8, scalar_6;\n    let deltaPosition;\n    let _arg2;\n    const _arg1 = body.Velocity;\n    const scalar = time;\n    _arg2 = [scalar * _arg1[0], scalar * _arg1[1]];\n    let _arg1_3;\n    let _arg1_2;\n    const scalar_1 = 1 / 6;\n    const _arg1_1 = body.Acceleration;\n    _arg1_2 = [scalar_1 * _arg1_1[0], scalar_1 * _arg1_1[1]];\n    const scalar_2 = time * time;\n    _arg1_3 = [scalar_2 * _arg1_2[0], scalar_2 * _arg1_2[1]];\n    deltaPosition = [_arg2[0] + _arg1_3[0], _arg2[1] + _arg1_3[1]];\n    return [new Body(body.Width, body.Height, body.Mass, (_arg2_1 = body.Position, (_arg1_4 = deltaPosition, [_arg2_1[0] + _arg1_4[0], _arg2_1[1] + _arg1_4[1]])), (_arg2_4 = body.Velocity, (_arg1_11 = ((_arg1_10 = ((scalar_5 = (1 / 6), (_arg1_9 = ((_arg2_3 = ((_arg2_2 = ((scalar_3 = 2, (_arg1_5 = newAcceleration, [scalar_3 * _arg1_5[0], scalar_3 * _arg1_5[1]]))), (_arg1_7 = ((scalar_4 = 5, (_arg1_6 = body.Acceleration, [scalar_4 * _arg1_6[0], scalar_4 * _arg1_6[1]]))), [_arg2_2[0] + _arg1_7[0], _arg2_2[1] + _arg1_7[1]]))), (_arg1_8 = body.PrevAcceleration, [_arg2_3[0] - _arg1_8[0], _arg2_3[1] - _arg1_8[1]]))), [scalar_5 * _arg1_9[0], scalar_5 * _arg1_9[1]]))), (scalar_6 = time, [scalar_6 * _arg1_10[0], scalar_6 * _arg1_10[1]]))), [_arg2_4[0] + _arg1_11[0], _arg2_4[1] + _arg1_11[1]])), newAcceleration, body.Acceleration), deltaPosition];\n}\n\nexport function SimulationModule_simulate(otherSideEffects, sim, timeToSimulate) {\n    let value;\n    const numSteps = (~(~((value = (timeToSimulate / timeStep), Math.floor(value))))) | 0;\n    let projectile = sim.Projectile;\n    for (let step = 1; step <= numSteps; step++) {\n        const patternInput = SimulationModule_move(projectile, timeStep, SimulationModule_acceleration(sim.Settings, projectile));\n        otherSideEffects(projectile, patternInput[1], timeStep * step);\n        projectile = patternInput[0];\n    }\n    const simulatedTime = timeStep * numSteps;\n    const newTime = sim.Time + simulatedTime;\n    const LeftOverTime = timeToSimulate - simulatedTime;\n    const LastTracer = newTime - ((newTime - sim.LastTracer) % sim.Settings.TraceInterval);\n    return new Simulation(projectile, sim.Running, newTime, LastTracer, LeftOverTime, sim.Settings);\n}\n\nexport function SimulationModule_initialProjectile(settings, projectile) {\n    return new Body(projectile.Width, projectile.Height, projectile.Mass, settings.InitialPosition, Vector2Module_ofMagnitudeDegrees(settings.InitialSpeed, settings.InitialAngle), SimulationModule_acceleration(settings, projectile), Vector2Module_zero());\n}\n\nexport function SimulationModule_withSettings(settings, sim) {\n    return new Simulation(SimulationModule_initialProjectile(settings, sim.Projectile), sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, settings);\n}\n\nexport const SimulationModule_initial = (() => {\n    let projectileLength;\n    const settings = new Settings(90, 60, [15, 15], -9.8, 0, true, true, 1, 2.5, 1);\n    return new Simulation((projectileLength = 25, SimulationModule_initialProjectile(settings, new Body(projectileLength, projectileLength, 1000, Vector2Module_zero(), Vector2Module_zero(), Vector2Module_zero(), Vector2Module_zero()))), false, 0, 0, 0, settings);\n})();\n\n","import { SimulationModule_initial, BodyModule_center, timeStep, Vector2__get_Y, Vector2__get_X } from \"./Physics.js\";\n\nconst phi = (1 + Math.sqrt(5)) / 2;\n\nexport const width = window.screen.availWidth / phi;\n\nexport const height = window.screen.availHeight * 0.7;\n\nfunction setupCanvas(id) {\n    const canvas = document.getElementById(id);\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext('2d');\n    context.translate(0, height);\n    return [canvas, context];\n}\n\nconst patternInput$004024 = setupCanvas(\"trajectoryCanvas\");\n\nexport const trajectoryContext = patternInput$004024[1];\n\nexport const trajectoryCanvas = patternInput$004024[0];\n\nconst patternInput$004025$002D1 = setupCanvas(\"bodyCanvas\");\n\nexport const bodyContext = patternInput$004025$002D1[1];\n\nexport const bodyCanvas = patternInput$004025$002D1[0];\n\nconst patternInput$004026$002D2 = setupCanvas(\"velocityCanvas\");\n\nexport const velocityContext = patternInput$004026$002D2[1];\n\nexport const velocityCanvas = patternInput$004026$002D2[0];\n\ntrajectoryContext.fillStyle = \"black\";\n\nbodyContext.fillStyle = \"blue\";\n\nvelocityContext.strokeStyle = \"red\";\n\nfunction clear(context) {\n    context.clearRect(0, -context.canvas.height, context.canvas.width, context.canvas.height);\n}\n\nexport function drawTracer(point) {\n    trajectoryContext.beginPath();\n    trajectoryContext.arc(Vector2__get_X(point), -Vector2__get_Y(point), 2.5, 0, 3.141592653589793 * 2);\n    trajectoryContext.closePath();\n    trajectoryContext.fill();\n}\n\nfunction lerpDelta(a, delta, alpha) {\n    const _arg2 = a;\n    let _arg1_1;\n    const scalar = alpha;\n    const _arg1 = delta;\n    _arg1_1 = [scalar * _arg1[0], scalar * _arg1[1]];\n    return [_arg2[0] + _arg1_1[0], _arg2[1] + _arg1_1[1]];\n}\n\nexport function maybeDrawTracer(sim) {\n    const timeSinceLastTracer = sim.Time - sim.LastTracer;\n    let tracerCount = 1;\n    let nextTracerTime = sim.Settings.TraceInterval - timeSinceLastTracer;\n    return (projectile) => ((deltaPosition) => ((time) => {\n        let alpha;\n        if (time >= nextTracerTime) {\n            drawTracer((alpha = ((timeStep - (time - nextTracerTime)) / timeStep), lerpDelta(BodyModule_center(projectile), deltaPosition, alpha)));\n            tracerCount = ((tracerCount + 1) | 0);\n            nextTracerTime = ((sim.Settings.TraceInterval * tracerCount) - timeSinceLastTracer);\n        }\n    }));\n}\n\nexport function resetTrajectory(projectile) {\n    clear(trajectoryContext);\n    drawTracer(BodyModule_center(projectile));\n}\n\nlet lastBody = SimulationModule_initial.Projectile;\n\nlet lastVelocityMaker = SimulationModule_initial.Projectile;\n\nfunction clearBody(projectile) {\n    bodyContext.clearRect(Vector2__get_X(projectile.Position) - 1, ((-Vector2__get_Y(projectile.Position)) - projectile.Height) - 1, projectile.Width + 2, projectile.Height + 2);\n}\n\nfunction drawBody(projectile) {\n    bodyContext.fillRect(Vector2__get_X(projectile.Position), (-Vector2__get_Y(projectile.Position)) - projectile.Height, projectile.Width, projectile.Height);\n}\n\nexport function redrawBody(projectile) {\n    clearBody(lastBody);\n    drawBody(projectile);\n    lastBody = projectile;\n}\n\nfunction clearVelocityMarker(projectile) {\n    const c = BodyModule_center(projectile);\n    const v = projectile.Velocity;\n    velocityContext.clearRect((Vector2__get_X(c) - Math.abs(Vector2__get_X(v))) - 1, ((-Vector2__get_Y(c)) - Math.abs(Vector2__get_Y(v))) - 1, (2 * Math.abs(Vector2__get_X(v))) + 2, (2 * Math.abs(Vector2__get_Y(v))) + 2);\n}\n\nfunction drawVelocityMarker(projectile) {\n    velocityContext.beginPath();\n    const c = BodyModule_center(projectile);\n    velocityContext.moveTo(Vector2__get_X(c), -Vector2__get_Y(c));\n    velocityContext.lineTo(Vector2__get_X(c) + Vector2__get_X(projectile.Velocity), (-Vector2__get_Y(c)) - Vector2__get_Y(projectile.Velocity));\n    velocityContext.closePath();\n    velocityContext.stroke();\n}\n\nexport function redrawVelocityMarker(projectile) {\n    clearVelocityMarker(lastVelocityMaker);\n    drawVelocityMarker(projectile);\n    lastVelocityMaker = projectile;\n}\n\nexport function redrawAll(projectile) {\n    redrawBody(projectile);\n    redrawVelocityMarker(projectile);\n    resetTrajectory(projectile);\n}\n\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 2 /* Local */; // better default than Unspecified\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    function fail() {\n        throw new Error(`The string is not a valid Date: ${input}`);\n    }\n    if (input == null || input.trim() === \"\") {\n        fail();\n    }\n    // ISO dates without TZ are parsed as UTC. Adding time without TZ keeps them local.\n    if (input.length === 10 && input[4] === \"-\" && input[7] === \"-\") {\n        input += \"T00:00:00\";\n    }\n    let date = new Date(input);\n    let offset = null;\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*(Z|[+-]([01]?\\d):?([0-5]?\\d)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                if (m[4] === \"Z\") {\n                    offset = \"Z\";\n                }\n                else {\n                    let offsetInMinutes = parseInt(m[5], 10) * 60 + parseInt(m[6] || \"0\", 10);\n                    if (m[4][0] === \"-\") {\n                        offsetInMinutes *= -1;\n                    }\n                    offset = offsetInMinutes;\n                    timeInSeconds -= offsetInMinutes * 60;\n                }\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            fail();\n        }\n        // Check again the date is valid after transformations, see #2229\n        if (isNaN(date.getTime())) {\n            fail();\n        }\n    }\n    return [date, offset];\n}\nexport function parse(str, detectUTC = false) {\n    const [date, offset] = parseRaw(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        if (idx < 0 || idx >= args.length) {\n            throw new Error(\"Index must be greater or equal to zero and less than the arguments' length.\");\n        }\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/([0#,]+)(\\.[0#]+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            const decimalPartLength = decimalPart != null ? decimalPart.length : 0;\n                            rep = toFixed(rep, Math.max(decimalPartLength - 1, 0));\n                            // Thousands separator\n                            if (intPart.indexOf(\",\") > 0) {\n                                const [intPart, decimalPart] = rep.split(\".\");\n                                const i = intPart.length % 3;\n                                const thousandGroups = Math.floor(intPart.length / 3);\n                                let thousands = i > 0 ? intPart.substr(0, i) + (thousandGroups > 0 ? \",\" : \"\") : \"\";\n                                for (let j = 0; j < thousandGroups; j++) {\n                                    thousands += intPart.substr(i + j * 3, 3) + (j < thousandGroups - 1 ? \",\" : \"\");\n                                }\n                                rep = decimalPart ? thousands + \".\" + decimalPart : thousands;\n                            }\n                            // In .NET you can mix 0/# placeholders but for simplicity we only check the left most character\n                            intPart = intPart.replace(/,/g, \"\");\n                            const intPartLength = intPart.length > 0 && intPart[0] === \"0\" ? intPart.length : 0;\n                            return padLeft(rep, intPartLength - sign.length + decimalPartLength, \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, options) {\n    count = typeof count === \"number\" ? count : undefined;\n    options = typeof options === \"number\" ? options : 0;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    const removeEmpty = (options & 1) === 1;\n    const trim = (options & 2) === 2;\n    splitters = splitters || [];\n    splitters = splitters.filter(x => x).map(escape);\n    splitters = splitters.length > 0 ? splitters : [\"\\\\s\"];\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    let findSplits = true;\n    let i = 0;\n    do {\n        const match = reg.exec(str);\n        if (match === null) {\n            const candidate = trim ? str.substring(i).trim() : str.substring(i);\n            if (!removeEmpty || candidate.length > 0) {\n                splits.push(candidate);\n            }\n            findSplits = false;\n        }\n        else {\n            const candidate = trim ? str.substring(i, match.index).trim() : str.substring(i, match.index);\n            if (!removeEmpty || candidate.length > 0) {\n                if (count != null && splits.length + 1 === count) {\n                    splits.push(trim ? str.substring(i).trim() : str.substring(i));\n                    findSplits = false;\n                }\n                else {\n                    splits.push(candidate);\n                }\n            }\n            i = reg.lastIndex;\n        }\n    } while (findSplits);\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\nexport function fmt(strs, ...args) {\n    return ({ strs, args });\n}\nexport function fmtWith(fmts) {\n    return (strs, ...args) => ({ strs, args, fmts });\n}\nexport function getFormat(s) {\n    return s.fmts\n        ? s.strs.reduce((acc, newPart, index) => acc + `{${String(index - 1) + s.fmts[index - 1]}}` + newPart)\n        : s.strs.reduce((acc, newPart, index) => acc + `{${index - 1}}` + newPart);\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\r\nimport { min as min_1, disposeSafe, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\r\nimport { SR_indexOutOfBounds } from \"./Global.js\";\r\n\r\nexport function Helpers_allocateArrayFromCons(cons, len) {\r\n    if ((typeof cons) === \"function\") {\r\n        return new cons(len);\r\n    }\r\n    else {\r\n        return new Array(len);\r\n    }\r\n}\r\n\r\nfunction indexNotFound() {\r\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\r\n}\r\n\r\nfunction differentLengths() {\r\n    throw (new Error(\"Arrays had different lengths\"));\r\n}\r\n\r\nexport function append(array1, array2, cons) {\r\n    const len1 = array1.length | 0;\r\n    const len2 = array2.length | 0;\r\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\r\n    for (let i = 0; i <= (len1 - 1); i++) {\r\n        newArray[i] = array1[i];\r\n    }\r\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\r\n        newArray[i_1 + len1] = array2[i_1];\r\n    }\r\n    return newArray;\r\n}\r\n\r\nexport function filter(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function fill(target, targetIndex, count, value) {\r\n    const start = targetIndex | 0;\r\n    return target.fill(value, start, (start + count));\r\n}\r\n\r\nexport function getSubArray(array, start, count) {\r\n    const start_1 = start | 0;\r\n    return array.slice(start_1, (start_1 + count));\r\n}\r\n\r\nexport function last(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    return array[array.length - 1];\r\n}\r\n\r\nexport function tryLast(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[array.length - 1]);\r\n    }\r\n}\r\n\r\nexport function mapIndexed(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(i, source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function map(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function mapIndexed2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapIndexed3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapFold(mapping, state, array, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = 0; i <= (array.length - 1); i++) {\r\n            const patternInput = mapping(acc, array[i]);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function mapFoldBack(mapping, array, state, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = array.length - 1; i >= 0; i--) {\r\n            const patternInput = mapping(array[i], acc);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function indexed(source) {\r\n    const len = source.length | 0;\r\n    const target = new Array(len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = [i, source[i]];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function truncate(count, array) {\r\n    const count_1 = max_1(comparePrimitives, 0, count) | 0;\r\n    const start = 0;\r\n    return array.slice(start, (start + count_1));\r\n}\r\n\r\nexport function concat(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const matchValue = arrays_1.length | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return Helpers_allocateArrayFromCons(cons, 0);\r\n        }\r\n        case 1: {\r\n            return arrays_1[0];\r\n        }\r\n        default: {\r\n            let totalIdx = 0;\r\n            let totalLength = 0;\r\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\r\n                const arr_1 = arrays_1[idx];\r\n                totalLength = ((totalLength + arr_1.length) | 0);\r\n            }\r\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\r\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\r\n                const arr_2 = arrays_1[idx_1];\r\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\r\n                    result[totalIdx] = arr_2[j];\r\n                    totalIdx = ((totalIdx + 1) | 0);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function collect(mapping, array, cons) {\r\n    return concat(map(mapping, array, null), cons);\r\n}\r\n\r\nexport function where(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function contains(value, array, eq) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return false;\r\n            }\r\n            else if (eq.Equals(value, array[i])) {\r\n                return true;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function empty(cons) {\r\n    return Helpers_allocateArrayFromCons(cons, 0);\r\n}\r\n\r\nexport function singleton(value, cons) {\r\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\r\n    ar[0] = value;\r\n    return ar;\r\n}\r\n\r\nexport function initialize(count, initializer, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (count - 1); i++) {\r\n        result[i] = initializer(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function pairwise(array) {\r\n    if (array.length < 2) {\r\n        return [];\r\n    }\r\n    else {\r\n        const count = (array.length - 1) | 0;\r\n        const result = new Array(count);\r\n        for (let i = 0; i <= (count - 1); i++) {\r\n            result[i] = [array[i], array[i + 1]];\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function replicate(count, initial, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (result.length - 1); i++) {\r\n        result[i] = initial;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function copy(array) {\r\n    return array.slice();\r\n}\r\n\r\nexport function reverse(array) {\r\n    const array_2 = array.slice();\r\n    return array_2.reverse();\r\n}\r\n\r\nexport function scan(folder, state, array, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[0] = state;\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        res[i + 1] = folder(res[i], array[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function scanBack(folder, array, state, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[array.length] = state;\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n        res[i] = folder(array[i], res[i + 1]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function skip(count, array, cons) {\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = ((count < 0) ? 0 : count) | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) && predicate(array[count])) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = count | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function take(count, array, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        return array.slice(start, (start + count));\r\n    }\r\n}\r\n\r\nexport function takeWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) && predicate(array[count])) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        const count_1 = count | 0;\r\n        return array.slice(start, (start + count_1));\r\n    }\r\n}\r\n\r\nexport function addInPlace(x, array) {\r\n    array.push(x);\r\n}\r\n\r\nexport function addRangeInPlace(range, array) {\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(enumerator);\r\n    }\r\n}\r\n\r\nexport function insertRangeInPlace(index, range, array) {\r\n    let index_1;\r\n    let i = index;\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            (index_1 = (i | 0), array.splice(index_1, 0, x));\r\n            i = ((i + 1) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(enumerator);\r\n    }\r\n}\r\n\r\nexport function removeInPlace(item_1, array) {\r\n    const i = (array.indexOf(item_1, 0)) | 0;\r\n    if (i > -1) {\r\n        array.splice(i, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function removeAllInPlace(predicate, array) {\r\n    const countRemoveAll = (count) => {\r\n        const i = (array.findIndex(predicate)) | 0;\r\n        if (i > -1) {\r\n            array.splice(i, 1);\r\n            return (countRemoveAll(count) + 1) | 0;\r\n        }\r\n        else {\r\n            return count | 0;\r\n        }\r\n    };\r\n    return countRemoveAll(0) | 0;\r\n}\r\n\r\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\r\n    const diff = (targetIndex - sourceIndex) | 0;\r\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\r\n        target[i + diff] = source[i];\r\n    }\r\n}\r\n\r\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\r\n    try {\r\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\r\n    }\r\n    catch (matchValue) {\r\n        copyTo(source, sourceIndex, target, targetIndex, count);\r\n    }\r\n}\r\n\r\nexport function indexOf(array, item_1, start, count) {\r\n    const start_1 = defaultArg(start, 0) | 0;\r\n    const i = (array.indexOf(item_1, start_1)) | 0;\r\n    if ((count != null) && (i >= (start_1 + value_2(count)))) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return i | 0;\r\n    }\r\n}\r\n\r\nexport function partition(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\r\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\r\n    let iTrue = 0;\r\n    let iFalse = 0;\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        if (f(source[i])) {\r\n            res1[iTrue] = source[i];\r\n            iTrue = ((iTrue + 1) | 0);\r\n        }\r\n        else {\r\n            res2[iFalse] = source[i];\r\n            iFalse = ((iFalse + 1) | 0);\r\n        }\r\n    }\r\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\r\n}\r\n\r\nexport function find(predicate, array) {\r\n    const matchValue = array.find(predicate);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_2(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, array) {\r\n    return array.find(predicate);\r\n}\r\n\r\nexport function findIndex(predicate, array) {\r\n    const matchValue = (array.findIndex(predicate)) | 0;\r\n    if (matchValue > -1) {\r\n        return matchValue | 0;\r\n    }\r\n    else {\r\n        return indexNotFound() | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, array) {\r\n    const matchValue = (array.findIndex(predicate)) | 0;\r\n    if (matchValue > -1) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function pick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return indexNotFound();\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue != null) {\r\n                    return value_2(matchValue);\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function tryPick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue == null) {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function findBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound();\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return array[i];\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function tryFindBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return some(array[i]);\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function findLastIndex(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return -1;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function findIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound() | 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function choose(chooser, array, cons) {\r\n    const res = [];\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        const matchValue = chooser(array[i]);\r\n        if (matchValue != null) {\r\n            const y = value_2(matchValue);\r\n            res.push(y);\r\n        }\r\n    }\r\n    if ((typeof cons) === \"function\") {\r\n        return map((x) => x, res, cons);\r\n    }\r\n    else {\r\n        return res;\r\n    }\r\n}\r\n\r\nexport function foldIndexed(folder, state, array) {\r\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\r\n}\r\n\r\nexport function fold(folder, state, array) {\r\n    return array.reduce((folder), state);\r\n}\r\n\r\nexport function iterate(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(array[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(i, array[i]);\r\n    }\r\n}\r\n\r\nexport function iterate2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(i, array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function isEmpty(array) {\r\n    return array.length === 0;\r\n}\r\n\r\nexport function forAll(predicate, array) {\r\n    return array.every(predicate);\r\n}\r\n\r\nexport function permute(f, array) {\r\n    const size = array.length | 0;\r\n    const res = array.slice();\r\n    const checkFlags = new Array(size);\r\n    iterateIndexed((i, x) => {\r\n        const j = f(i) | 0;\r\n        if ((j < 0) ? true : (j >= size)) {\r\n            throw (new Error(\"Not a valid permutation\"));\r\n        }\r\n        res[j] = x;\r\n        checkFlags[j] = 1;\r\n    }, array);\r\n    if (!(checkFlags.every((y) => (1 === y)))) {\r\n        throw (new Error(\"Not a valid permutation\"));\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function setSlice(target, lower, upper, source) {\r\n    const lower_1 = defaultArg(lower, 0) | 0;\r\n    const upper_1 = defaultArg(upper, 0) | 0;\r\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\r\n    for (let i = 0; i <= length; i++) {\r\n        target[i + lower_1] = source[i];\r\n    }\r\n}\r\n\r\nexport function sortInPlaceBy(projection, xs, comparer) {\r\n    xs.sort((x, y) => comparer.Compare(projection(x), projection(y)));\r\n}\r\n\r\nexport function sortInPlace(xs, comparer) {\r\n    xs.sort((x, y) => comparer.Compare(x, y));\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => comparer.Compare(x, y));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    return (xs_1.sort((x, y) => comparer.Compare(projection(x), projection(y))), xs_1);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => (comparer.Compare(x, y) * -1));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    return (xs_1.sort((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)), xs_1);\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const comparer_1 = comparer;\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(comparer_1);\r\n    return xs_1;\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const len1 = xs.length | 0;\r\n    const len2 = ys.length | 0;\r\n    const res = new Array(len1 * len2);\r\n    for (let i = 0; i <= (xs.length - 1); i++) {\r\n        for (let j = 0; j <= (ys.length - 1); j++) {\r\n            res[(i * len2) + j] = [xs[i], ys[j]];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    const res = [];\r\n    const loop = (state_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const state_1 = state_1_mut;\r\n            const matchValue = generator(state_1);\r\n            if (matchValue != null) {\r\n                const x = matchValue[0];\r\n                const s = matchValue[1];\r\n                res.push(x);\r\n                state_1_mut = s;\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(state);\r\n    return res;\r\n}\r\n\r\nexport function unzip(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n    }, array);\r\n    return [res1, res2];\r\n}\r\n\r\nexport function unzip3(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    const res3 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n        res3[i] = tupledArg[2];\r\n    }, array);\r\n    return [res1, res2, res3];\r\n}\r\n\r\nexport function zip(array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function zip3(array1, array2, array3) {\r\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i], array3[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function chunkBySize(chunkSize, array) {\r\n    if (chunkSize < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\r\n            let slice;\r\n            const start_1 = (x * chunkSize) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            result.push(slice);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function splitAt(index, array) {\r\n    let start;\r\n    if ((index < 0) ? true : (index > array.length)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\r\n}\r\n\r\nexport function compareWith(comparer, array1, array2) {\r\n    if (array1 == null) {\r\n        if (array2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (array2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        let i = 0;\r\n        let result = 0;\r\n        const length1 = array1.length | 0;\r\n        const length2 = array2.length | 0;\r\n        if (length1 > length2) {\r\n            return 1;\r\n        }\r\n        else if (length1 < length2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            while ((i < length1) && (result === 0)) {\r\n                result = (comparer(array1[i], array2[i]) | 0);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return result | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function equalsWith(equals, array1, array2) {\r\n    if (array1 == null) {\r\n        if (array2 == null) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else if (array2 == null) {\r\n        return false;\r\n    }\r\n    else {\r\n        let i = 0;\r\n        let result = true;\r\n        const length1 = array1.length | 0;\r\n        const length2 = array2.length | 0;\r\n        if (length1 > length2) {\r\n            return false;\r\n        }\r\n        else if (length1 < length2) {\r\n            return false;\r\n        }\r\n        else {\r\n            while ((i < length1) && result) {\r\n                result = equals(array1[i], array2[i]);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function exactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return array[0];\r\n    }\r\n    else if (array.length === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return some(array[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function head(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        return array[0];\r\n    }\r\n}\r\n\r\nexport function tryHead(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[0]);\r\n    }\r\n}\r\n\r\nexport function tail(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\r\n    }\r\n    return array.slice(1);\r\n}\r\n\r\nexport function item(index, array) {\r\n    return array[index];\r\n}\r\n\r\nexport function tryItem(index, array) {\r\n    if ((index < 0) ? true : (index >= array.length)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[index]);\r\n    }\r\n}\r\n\r\nexport function foldBackIndexed(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldBack(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldIndexed2(folder, state, array1, array2) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        throw (new Error(\"Arrays have different lengths\"));\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        acc = folder(i, acc, array1[i], array2[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function fold2(folder, state, array1, array2) {\r\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\r\n}\r\n\r\nexport function foldBackIndexed2(folder, array1, array2, state) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const size = array1.length | 0;\r\n    for (let i = 1; i <= size; i++) {\r\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(f, array1, array2, state) {\r\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\r\n}\r\n\r\nexport function reduce(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduce(reduction_1);\r\n}\r\n\r\nexport function reduceBack(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduceRight(reduction_1);\r\n}\r\n\r\nexport function forAll2(predicate, array1, array2) {\r\n    return fold2((acc, x, y) => (acc && predicate(x, y)), true, array1, array2);\r\n}\r\n\r\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\r\n    existsOffset:\r\n    while (true) {\r\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\r\n        if (index === array.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array_mut = array;\r\n            index_mut = (index + 1);\r\n            continue existsOffset;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists(predicate, array) {\r\n    return existsOffset(predicate, array, 0);\r\n}\r\n\r\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\r\n    existsOffset2:\r\n    while (true) {\r\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\r\n        if (index === array1.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array1[index], array2[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array1_mut = array1;\r\n            array2_mut = array2;\r\n            index_mut = (index + 1);\r\n            continue existsOffset2;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    return existsOffset2(predicate, array1, array2, 0);\r\n}\r\n\r\nexport function sum(array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, array[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function sumBy(projection, array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, projection(array[i]));\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, array[i]);\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function averageBy(projection, array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, projection(array[i]));\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function windowed(windowSize, source) {\r\n    if (windowSize <= 0) {\r\n        throw (new Error(\"windowSize must be positive\"));\r\n    }\r\n    let res;\r\n    const len = max_1(comparePrimitives, 0, (source.length - windowSize) + 1) | 0;\r\n    res = (new Array(len));\r\n    for (let i = windowSize; i <= source.length; i++) {\r\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function splitInto(chunks, array) {\r\n    if (chunks < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        const chunks_1 = min_1(comparePrimitives, chunks, array.length) | 0;\r\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\r\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\r\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\r\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\r\n            let slice;\r\n            const start_1 = ((i * minChunkSize) + min_1(comparePrimitives, chunksWithExtraItem, i)) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            result.push(slice);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function transpose(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const len = arrays_1.length | 0;\r\n    if (len === 0) {\r\n        return new Array(0);\r\n    }\r\n    else {\r\n        const firstArray = arrays_1[0];\r\n        const lenInner = firstArray.length | 0;\r\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\r\n            differentLengths();\r\n        }\r\n        const result = new Array(lenInner);\r\n        for (let i = 0; i <= (lenInner - 1); i++) {\r\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\r\n            for (let j = 0; j <= (len - 1); j++) {\r\n                result[i][j] = arrays_1[j][i];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function insertAt(index, y, xs) {\r\n    const len = xs.length | 0;\r\n    if ((index < 0) ? true : (index > len)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    const target = new xs.constructor(len + 1);\r\n    for (let i = 0; i <= (index - 1); i++) {\r\n        target[i] = xs[i];\r\n    }\r\n    target[index] = y;\r\n    for (let i_1 = index; i_1 <= (len - 1); i_1++) {\r\n        target[i_1 + 1] = xs[i_1];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function insertManyAt(index, ys, xs) {\r\n    const len = xs.length | 0;\r\n    if ((index < 0) ? true : (index > len)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    const ys_1 = Array.from(ys);\r\n    const len2 = ys_1.length | 0;\r\n    const target = new xs.constructor(len + len2);\r\n    for (let i = 0; i <= (index - 1); i++) {\r\n        target[i] = xs[i];\r\n    }\r\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\r\n        target[index + i_1] = ys_1[i_1];\r\n    }\r\n    for (let i_2 = index; i_2 <= (len - 1); i_2++) {\r\n        target[i_2 + len2] = xs[i_2];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function removeAt(index, xs) {\r\n    if ((index < 0) ? true : (index >= xs.length)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    let i = -1;\r\n    return filter((_arg1) => {\r\n        i = ((i + 1) | 0);\r\n        return i !== index;\r\n    }, xs);\r\n}\r\n\r\nexport function removeManyAt(index, count, xs) {\r\n    let i = -1;\r\n    let status = -1;\r\n    const ys = filter((_arg1) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            status = 0;\r\n            return false;\r\n        }\r\n        else if (i > index) {\r\n            if (i < (index + count)) {\r\n                return false;\r\n            }\r\n            else {\r\n                status = 1;\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, xs);\r\n    const status_1 = (((status === 0) && ((i + 1) === (index + count))) ? 1 : status) | 0;\r\n    if (status_1 < 1) {\r\n        const arg = (status_1 < 0) ? \"index\" : \"count\";\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + arg));\r\n    }\r\n    return ys;\r\n}\r\n\r\nexport function updateAt(index, y, xs) {\r\n    const len = xs.length | 0;\r\n    if ((index < 0) ? true : (index >= len)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    const target = new xs.constructor(len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = ((i === index) ? y : xs[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\n","import { join } from \"./String.js\";\r\nimport { uncurry, disposeSafe, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\r\nimport { Record } from \"./Types.js\";\r\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\r\nimport { SR_inputSequenceTooLong, SR_inputSequenceEmpty, SR_inputMustBeNonNegative, SR_notEnoughElements, SR_differentLengths, SR_keyNotFoundAlt, SR_indexOutOfBounds, SR_inputWasEmpty } from \"./Global.js\";\r\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\r\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\r\n\r\nexport class FSharpList extends Record {\r\n    constructor(head, tail) {\r\n        super();\r\n        this.head = head;\r\n        this.tail = tail;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        return (\"[\" + join(\"; \", xs)) + \"]\";\r\n    }\r\n    Equals(other) {\r\n        const xs = this;\r\n        if (xs === other) {\r\n            return true;\r\n        }\r\n        else {\r\n            const loop = (xs_1_mut, ys_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                    const matchValue = [xs_1.tail, ys_1.tail];\r\n                    if (matchValue[0] != null) {\r\n                        if (matchValue[1] != null) {\r\n                            const xt = matchValue[0];\r\n                            const yt = matchValue[1];\r\n                            if (equals(xs_1.head, ys_1.head)) {\r\n                                xs_1_mut = xt;\r\n                                ys_1_mut = yt;\r\n                                continue loop;\r\n                            }\r\n                            else {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (matchValue[1] != null) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(xs, other);\r\n        }\r\n    }\r\n    GetHashCode() {\r\n        const xs = this;\r\n        const loop = (i_mut, h_mut, xs_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\r\n                const matchValue = xs_1.tail;\r\n                if (matchValue != null) {\r\n                    const t = matchValue;\r\n                    if (i > 18) {\r\n                        return h | 0;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\r\n                        xs_1_mut = t;\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return h | 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0, 0, xs) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    CompareTo(other) {\r\n        const xs = this;\r\n        const loop = (xs_1_mut, ys_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                const matchValue = [xs_1.tail, ys_1.tail];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const xt = matchValue[0];\r\n                        const yt = matchValue[1];\r\n                        const c = compare(xs_1.head, ys_1.head) | 0;\r\n                        if (c === 0) {\r\n                            xs_1_mut = xt;\r\n                            ys_1_mut = yt;\r\n                            continue loop;\r\n                        }\r\n                        else {\r\n                            return c | 0;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                else if (matchValue[1] != null) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(xs, other) | 0;\r\n    }\r\n    GetEnumerator() {\r\n        const xs = this;\r\n        return ListEnumerator$1_$ctor_3002E699(xs);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const xs = this;\r\n        return getEnumerator(xs);\r\n    }\r\n}\r\n\r\nexport function FSharpList$reflection(gen0) {\r\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\r\n}\r\n\r\nexport class ListEnumerator$1 {\r\n    constructor(xs) {\r\n        this.xs = xs;\r\n        this.it = this.xs;\r\n        this.current = null;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        const matchValue = __.it.tail;\r\n        if (matchValue != null) {\r\n            const t = matchValue;\r\n            __.current = __.it.head;\r\n            __.it = t;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        const __ = this;\r\n        __.it = __.xs;\r\n        __.current = null;\r\n    }\r\n    Dispose() {\r\n    }\r\n}\r\n\r\nexport function ListEnumerator$1$reflection(gen0) {\r\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\r\n}\r\n\r\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\r\n    return new ListEnumerator$1(xs);\r\n}\r\n\r\nexport function FSharpList_get_Empty() {\r\n    return new FSharpList(null, void 0);\r\n}\r\n\r\nexport function FSharpList_Cons_305B8EAC(x, xs) {\r\n    return new FSharpList(x, xs);\r\n}\r\n\r\nexport function FSharpList__get_IsEmpty(xs) {\r\n    return xs.tail == null;\r\n}\r\n\r\nexport function FSharpList__get_Length(xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = matchValue;\r\n                continue loop;\r\n            }\r\n            else {\r\n                return i | 0;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs) | 0;\r\n}\r\n\r\nexport function FSharpList__get_Head(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return xs.head;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Tail(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                if (i === index) {\r\n                    return xs_1.head;\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    xs_1_mut = matchValue;\r\n                    continue loop;\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function empty() {\r\n    return FSharpList_get_Empty();\r\n}\r\n\r\nexport function cons(x, xs) {\r\n    return FSharpList_Cons_305B8EAC(x, xs);\r\n}\r\n\r\nexport function singleton(x) {\r\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    return FSharpList__get_IsEmpty(xs);\r\n}\r\n\r\nexport function length(xs) {\r\n    return FSharpList__get_Length(xs);\r\n}\r\n\r\nexport function head(xs) {\r\n    return FSharpList__get_Head(xs);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n}\r\n\r\nexport function tail(xs) {\r\n    return FSharpList__get_Tail(xs);\r\n}\r\n\r\nexport function tryLast(xs_mut) {\r\n    tryLast:\r\n    while (true) {\r\n        const xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return void 0;\r\n        }\r\n        else {\r\n            const t = FSharpList__get_Tail(xs);\r\n            if (FSharpList__get_IsEmpty(t)) {\r\n                return some(FSharpList__get_Head(xs));\r\n            }\r\n            else {\r\n                xs_mut = t;\r\n                continue tryLast;\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_inputWasEmpty));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const loop = (xs_1_mut, ys_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\r\n            if (matchValue[0]) {\r\n                if (matchValue[1]) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return -1;\r\n                }\r\n            }\r\n            else if (matchValue[1]) {\r\n                return 1;\r\n            }\r\n            else {\r\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\r\n                if (c === 0) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return c | 0;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs, ys) | 0;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    const len = FSharpList__get_Length(xs) | 0;\r\n    const res = fill(new Array(len), 0, len, null);\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (!FSharpList__get_IsEmpty(xs_1)) {\r\n                res[i] = FSharpList__get_Head(xs_1);\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(0, xs);\r\n    return res;\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_1)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function foldIndexed(folder, state, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, state, xs);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    let ys_1 = ys;\r\n    while ((!FSharpList__get_IsEmpty(xs_1)) && (!FSharpList__get_IsEmpty(ys_1))) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n        ys_1 = FSharpList__get_Tail(ys_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function unfold(gen, state) {\r\n    const loop = (acc_mut, node_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, node = node_mut;\r\n            const matchValue = gen(acc);\r\n            if (matchValue != null) {\r\n                acc_mut = matchValue[1];\r\n                node_mut = ((t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t)));\r\n                continue loop;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(state, root);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function toSeq(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function ofArrayWithTail(xs, tail_1) {\r\n    let res = tail_1;\r\n    for (let i = xs.length - 1; i >= 0; i--) {\r\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function ofArray(xs) {\r\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    let xs_3, t;\r\n    if (isArrayLike(xs)) {\r\n        return ofArray(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        const root = FSharpList_get_Empty();\r\n        let node = root;\r\n        const enumerator = getEnumerator(xs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                node = ((xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t))));\r\n            }\r\n        }\r\n        finally {\r\n            disposeSafe(enumerator);\r\n        }\r\n        const xs_5 = node;\r\n        const t_2 = FSharpList_get_Empty();\r\n        xs_5.tail = t_2;\r\n        return FSharpList__get_Tail(root);\r\n    }\r\n}\r\n\r\nexport function concat(lists) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    const action = (xs) => {\r\n        node = fold((acc, x) => {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }, node, xs);\r\n    };\r\n    if (isArrayLike(lists)) {\r\n        lists.forEach(action);\r\n    }\r\n    else if (lists instanceof FSharpList) {\r\n        iterate(action, lists);\r\n    }\r\n    else {\r\n        const enumerator = getEnumerator(lists);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n        }\r\n        finally {\r\n            disposeSafe(enumerator);\r\n        }\r\n    }\r\n    const xs_6 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_6.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    let t, xs_4, t_2;\r\n    const root = FSharpList_get_Empty();\r\n    let node = (t = (new FSharpList(state, void 0)), (root.tail = t, t));\r\n    let acc = state;\r\n    let xs_3 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_3)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_3));\r\n        node = ((xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2))));\r\n        xs_3 = FSharpList__get_Tail(xs_3);\r\n    }\r\n    const xs_6 = node;\r\n    const t_4 = FSharpList_get_Empty();\r\n    xs_6.tail = t_4;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return ofArray(scanBack_1(folder, toArray(xs), state));\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    let xs_1, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    let ys = xs;\r\n    while (!FSharpList__get_IsEmpty(ys)) {\r\n        let zs = mapping(FSharpList__get_Head(ys));\r\n        while (!FSharpList__get_IsEmpty(zs)) {\r\n            node = ((xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t))));\r\n            zs = FSharpList__get_Tail(zs);\r\n        }\r\n        ys = FSharpList__get_Tail(ys);\r\n    }\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = foldIndexed((i, acc, x) => {\r\n        let t;\r\n        return (t = (new FSharpList(mapping(i, x), void 0)), (acc.tail = t, t));\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        let t;\r\n        return (t = (new FSharpList(mapping(x), void 0)), (acc.tail = t, t));\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold2((acc, x, y) => {\r\n        let t;\r\n        return (t = (new FSharpList(mapping(x, y), void 0)), (acc.tail = t, t));\r\n    }, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = ((t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(0, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\r\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                zs_1_mut = FSharpList__get_Tail(zs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(root, xs, ys, zs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const patternInput_1 = fold((tupledArg, x) => {\r\n        let t;\r\n        const patternInput = mapping(tupledArg[1], x);\r\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\r\n    }, [root, state], xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_2;\r\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\r\n}\r\n\r\nexport function tryPick(f, xs) {\r\n    const loop = (xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = f(FSharpList__get_Head(xs_1));\r\n                if (matchValue == null) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs);\r\n}\r\n\r\nexport function pick(f, xs) {\r\n    const matchValue = tryPick(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(f, xs) {\r\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\r\n}\r\n\r\nexport function find(f, xs) {\r\n    const matchValue = tryFind(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(f, xs) {\r\n    return tryFindBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findBack(f, xs) {\r\n    const matchValue = tryFindBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(f, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (f(FSharpList__get_Head(xs_1))) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function findIndex(f, xs) {\r\n    const matchValue = tryFindIndex(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(f, xs) {\r\n    return tryFindIndexBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(f, xs) {\r\n    const matchValue = tryFindIndexBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryItem(n, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (i === n) {\r\n                return some(FSharpList__get_Head(xs_1));\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function item(n, xs) {\r\n    return FSharpList__get_Item_Z524259A4(xs, n);\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        if (f(x)) {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function partition(f, xs) {\r\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\r\n    const root2 = patternInput[1];\r\n    const root1 = patternInput[0];\r\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\r\n        const lacc = tupledArg[0];\r\n        const racc = tupledArg[1];\r\n        return (x) => {\r\n            let t, t_2;\r\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\r\n        };\r\n    }), [root1, root2], xs);\r\n    const t_4 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_4;\r\n    const t_5 = FSharpList_get_Empty();\r\n    patternInput_1[1].tail = t_5;\r\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\r\n}\r\n\r\nexport function choose(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const matchValue = f(x);\r\n        if (matchValue == null) {\r\n            return acc;\r\n        }\r\n        else {\r\n            const t = new FSharpList(value_1(matchValue), void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function contains(value, xs, eq) {\r\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\r\n}\r\n\r\nexport function initialize(n, f) {\r\n    let xs, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    for (let i = 0; i <= (n - 1); i++) {\r\n        node = ((xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t))));\r\n    }\r\n    const xs_2 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_2.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reduce(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputWasEmpty));\r\n    }\r\n    else {\r\n        return fold(f, head(xs), tail(xs));\r\n    }\r\n}\r\n\r\nexport function reduceBack(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputWasEmpty));\r\n    }\r\n    else {\r\n        return foldBack(f, tail(xs), head(xs));\r\n    }\r\n}\r\n\r\nexport function forAll(f, xs) {\r\n    return fold((acc, x) => (acc && f(x)), true, xs);\r\n}\r\n\r\nexport function forAll2(f, xs, ys) {\r\n    return fold2((acc, x, y) => (acc && f(x, y)), true, xs, ys);\r\n}\r\n\r\nexport function exists(f, xs) {\r\n    return tryFindIndex(f, xs) != null;\r\n}\r\n\r\nexport function exists2(f_mut, xs_mut, ys_mut) {\r\n    exists2:\r\n    while (true) {\r\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\r\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0]) {\r\n            if (matchValue[1]) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 2;\r\n            }\r\n        }\r\n        else if (matchValue[1]) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return false;\r\n            }\r\n            case 1: {\r\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    xs_mut = FSharpList__get_Tail(xs);\r\n                    ys_mut = FSharpList__get_Tail(ys);\r\n                    continue exists2;\r\n                }\r\n            }\r\n            case 2: {\r\n                throw (new Error((SR_differentLengths + \"\\\\nParameter name: \") + \"list2\"));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function unzip(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function unzip3(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const arr = toArray(xs);\r\n    arr.sort(comparer);\r\n    return ofArray(arr);\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs);\r\n    return averager.DivideByInt(total, count);\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs);\r\n    return averager.DivideByInt(total, count);\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return ofArray(permute_1(f, toArray(xs)));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return ofArray(map_1(ofArray, chunkBySize_1(chunkSize, toArray(xs))));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    iterate((x) => {\r\n        iterate((y) => {\r\n            let xs_1, t;\r\n            node = ((xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t))));\r\n        }, ys);\r\n    }, xs);\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function skip(count_mut, xs_mut) {\r\n    skip:\r\n    while (true) {\r\n        const count = count_mut, xs = xs_mut;\r\n        if (count <= 0) {\r\n            return xs;\r\n        }\r\n        else if (FSharpList__get_IsEmpty(xs)) {\r\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n        }\r\n        else {\r\n            count_mut = (count - 1);\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skip;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate_mut, xs_mut) {\r\n    skipWhile:\r\n    while (true) {\r\n        const predicate = predicate_mut, xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return xs;\r\n        }\r\n        else if (!predicate(FSharpList__get_Head(xs))) {\r\n            return xs;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skipWhile;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function take(count, xs) {\r\n    if (count < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\r\n    }\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    const loop = (acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function getSlice(startIndex, endIndex, xs) {\r\n    const len = length(xs) | 0;\r\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\r\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\r\n    if (startIndex_1 < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\r\n    }\r\n    else if (endIndex_1 >= len) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\r\n    }\r\n    else if (endIndex_1 < startIndex_1) {\r\n        return FSharpList_get_Empty();\r\n    }\r\n    else {\r\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\r\n    }\r\n}\r\n\r\nexport function splitAt(index, xs) {\r\n    if (index < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    if (index > FSharpList__get_Length(xs)) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return [take(index, xs), skip(index, xs)];\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return FSharpList__get_Head(xs);\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    if ((!FSharpList__get_IsEmpty(xs)) && FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return ofArray(pairwise_1(toArray(xs)));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return ofArray(map_1(ofArray, windowed_1(windowSize, toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return ofArray(map_1(ofArray, splitInto_1(chunks, toArray(xs))));\r\n}\r\n\r\nexport function transpose(lists) {\r\n    return ofArray(map_1(ofArray, transpose_1(map_1(toArray, Array.from(lists)))));\r\n}\r\n\r\nexport function insertAt(index, y, xs) {\r\n    let i = -1;\r\n    let isDone = false;\r\n    const result = fold((acc, x) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            isDone = true;\r\n            return FSharpList_Cons_305B8EAC(x, FSharpList_Cons_305B8EAC(y, acc));\r\n        }\r\n        else {\r\n            return FSharpList_Cons_305B8EAC(x, acc);\r\n        }\r\n    }, FSharpList_get_Empty(), xs);\r\n    return reverse(isDone ? result : (((i + 1) === index) ? FSharpList_Cons_305B8EAC(y, result) : (() => {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    })()));\r\n}\r\n\r\nexport function insertManyAt(index, ys, xs) {\r\n    let i = -1;\r\n    let isDone = false;\r\n    const ys_1 = ofSeq(ys);\r\n    const result = fold((acc, x) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            isDone = true;\r\n            return FSharpList_Cons_305B8EAC(x, append(ys_1, acc));\r\n        }\r\n        else {\r\n            return FSharpList_Cons_305B8EAC(x, acc);\r\n        }\r\n    }, FSharpList_get_Empty(), xs);\r\n    return reverse(isDone ? result : (((i + 1) === index) ? append(ys_1, result) : (() => {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    })()));\r\n}\r\n\r\nexport function removeAt(index, xs) {\r\n    let i = -1;\r\n    let isDone = false;\r\n    const ys = filter((_arg1) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            isDone = true;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, xs);\r\n    if (!isDone) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return ys;\r\n}\r\n\r\nexport function removeManyAt(index, count, xs) {\r\n    let i = -1;\r\n    let status = -1;\r\n    const ys = filter((_arg1) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            status = 0;\r\n            return false;\r\n        }\r\n        else if (i > index) {\r\n            if (i < (index + count)) {\r\n                return false;\r\n            }\r\n            else {\r\n                status = 1;\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, xs);\r\n    const status_1 = (((status === 0) && ((i + 1) === (index + count))) ? 1 : status) | 0;\r\n    if (status_1 < 1) {\r\n        const arg = (status_1 < 0) ? \"index\" : \"count\";\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + arg));\r\n    }\r\n    return ys;\r\n}\r\n\r\nexport function updateAt(index, y, xs) {\r\n    let isDone = false;\r\n    const ys = mapIndexed((i, x) => {\r\n        if (i === index) {\r\n            isDone = true;\r\n            return y;\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n    }, xs);\r\n    if (!isDone) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return ys;\r\n}\r\n\r\n","import { toString, Record, Union } from \"../fable-library.3.7.6/Types.js\";\nimport { array_type, float64_type, int32_type, bool_type, obj_type, record_type, option_type, lambda_type, unit_type, class_type, union_type, string_type } from \"../fable-library.3.7.6/Reflection.js\";\n\nexport class FragmentProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\"];\n    }\n}\n\nexport function FragmentProp$reflection() {\n    return union_type(\"Fable.React.Props.FragmentProp\", [], FragmentProp, () => [[[\"Item\", string_type]]]);\n}\n\nexport class Prop extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\", \"Ref\", \"ref\", \"ref\"];\n    }\n}\n\nexport function Prop$reflection() {\n    return union_type(\"Fable.React.Props.Prop\", [], Prop, () => [[[\"Item\", string_type]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Element\", void 0, Element), unit_type)]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\", void 0, Element))])]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\", void 0, Element))])]]]);\n}\n\nexport class DangerousHtml extends Record {\n    constructor(__html) {\n        super();\n        this.__html = __html;\n    }\n}\n\nexport function DangerousHtml$reflection() {\n    return record_type(\"Fable.React.Props.DangerousHtml\", [], DangerousHtml, () => [[\"__html\", string_type]]);\n}\n\nexport class DOMAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DangerouslySetInnerHTML\", \"OnCut\", \"OnPaste\", \"OnCompositionEnd\", \"OnCompositionStart\", \"OnCopy\", \"OnCompositionUpdate\", \"OnFocus\", \"OnBlur\", \"OnChange\", \"OnInput\", \"OnSubmit\", \"OnReset\", \"OnLoad\", \"OnError\", \"OnKeyDown\", \"OnKeyPress\", \"OnKeyUp\", \"OnAbort\", \"OnCanPlay\", \"OnCanPlayThrough\", \"OnDurationChange\", \"OnEmptied\", \"OnEncrypted\", \"OnEnded\", \"OnLoadedData\", \"OnLoadedMetadata\", \"OnLoadStart\", \"OnPause\", \"OnPlay\", \"OnPlaying\", \"OnProgress\", \"OnRateChange\", \"OnSeeked\", \"OnSeeking\", \"OnStalled\", \"OnSuspend\", \"OnTimeUpdate\", \"OnVolumeChange\", \"OnWaiting\", \"OnClick\", \"OnContextMenu\", \"OnDoubleClick\", \"OnDrag\", \"OnDragEnd\", \"OnDragEnter\", \"OnDragExit\", \"OnDragLeave\", \"OnDragOver\", \"OnDragStart\", \"OnDrop\", \"OnMouseDown\", \"OnMouseEnter\", \"OnMouseLeave\", \"OnMouseMove\", \"OnMouseOut\", \"OnMouseOver\", \"OnMouseUp\", \"OnSelect\", \"OnTouchCancel\", \"OnTouchEnd\", \"OnTouchMove\", \"OnTouchStart\", \"OnScroll\", \"OnWheel\", \"OnAnimationStart\", \"OnAnimationEnd\", \"OnAnimationIteration\", \"OnTransitionEnd\", \"Custom\"];\n    }\n}\n\nexport function DOMAttr$reflection() {\n    return union_type(\"Fable.React.Props.DOMAttr\", [], DOMAttr, () => [[[\"Item\", DangerousHtml$reflection()]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\", void 0, ClipboardEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\", void 0, ClipboardEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\", void 0, CompositionEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\", void 0, CompositionEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\", void 0, ClipboardEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\", void 0, CompositionEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\", void 0, FocusEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\", void 0, FocusEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\", void 0, KeyboardEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\", void 0, KeyboardEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\", void 0, KeyboardEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\", void 0, TouchEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\", void 0, TouchEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\", void 0, TouchEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\", void 0, TouchEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.UIEvent\", void 0, UIEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.WheelEvent\", void 0, WheelEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\", void 0, AnimationEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\", void 0, AnimationEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\", void 0, AnimationEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TransitionEvent\", void 0, TransitionEvent), unit_type)]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class SVGAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ClipPath\", \"Cx\", \"Cy\", \"D\", \"Dx\", \"Dy\", \"Fill\", \"FillOpacity\", \"FontFamily\", \"FontSize\", \"Fx\", \"Fy\", \"GradientTransform\", \"GradientUnits\", \"Height\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"Offset\", \"Opacity\", \"PatternContentUnits\", \"PatternUnits\", \"Points\", \"PreserveAspectRatio\", \"R\", \"Rx\", \"Ry\", \"SpreadMethod\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TextAnchor\", \"Transform\", \"Version\", \"ViewBox\", \"Width\", \"X1\", \"X2\", \"X\", \"XlinkActuate\", \"XlinkArcrole\", \"XlinkHref\", \"XlinkRole\", \"XlinkShow\", \"XlinkTitle\", \"XlinkType\", \"XmlBase\", \"XmlLang\", \"XmlSpace\", \"Y1\", \"Y2\", \"Y\", \"Custom\"];\n    }\n}\n\nexport function SVGAttr$reflection() {\n    return union_type(\"Fable.React.Props.SVGAttr\", [], SVGAttr, () => [[[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class HTMLAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DefaultChecked\", \"DefaultValue\", \"Accept\", \"AcceptCharset\", \"AccessKey\", \"Action\", \"AllowFullScreen\", \"AllowTransparency\", \"Alt\", \"aria-atomic\", \"aria-busy\", \"aria-checked\", \"aria-colcount\", \"aria-colindex\", \"aria-colspan\", \"aria-controls\", \"aria-current\", \"aria-describedby\", \"aria-details\", \"aria-disabled\", \"aria-errormessage\", \"aria-expanded\", \"aria-flowto\", \"aria-haspopup\", \"aria-hidden\", \"aria-invalid\", \"aria-keyshortcuts\", \"aria-label\", \"aria-labelledby\", \"aria-level\", \"aria-live\", \"aria-modal\", \"aria-multiline\", \"aria-multiselectable\", \"aria-orientation\", \"aria-owns\", \"aria-placeholder\", \"aria-posinset\", \"aria-pressed\", \"aria-readonly\", \"aria-relevant\", \"aria-required\", \"aria-roledescription\", \"aria-rowcount\", \"aria-rowindex\", \"aria-rowspan\", \"aria-selected\", \"aria-setsize\", \"aria-sort\", \"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\", \"aria-valuetext\", \"Async\", \"AutoComplete\", \"AutoFocus\", \"AutoPlay\", \"Capture\", \"CellPadding\", \"CellSpacing\", \"CharSet\", \"Challenge\", \"Checked\", \"ClassID\", \"ClassName\", \"className\", \"Cols\", \"ColSpan\", \"Content\", \"ContentEditable\", \"ContextMenu\", \"Controls\", \"Coords\", \"CrossOrigin\", \"data-toggle\", \"DateTime\", \"Default\", \"Defer\", \"Dir\", \"Disabled\", \"Download\", \"Draggable\", \"EncType\", \"Form\", \"FormAction\", \"FormEncType\", \"FormMethod\", \"FormNoValidate\", \"FormTarget\", \"FrameBorder\", \"Headers\", \"Height\", \"Hidden\", \"High\", \"Href\", \"HrefLang\", \"HtmlFor\", \"HttpEquiv\", \"Icon\", \"Id\", \"InputMode\", \"Integrity\", \"Is\", \"KeyParams\", \"KeyType\", \"Kind\", \"Label\", \"Lang\", \"List\", \"Loop\", \"Low\", \"Manifest\", \"MarginHeight\", \"MarginWidth\", \"Max\", \"MaxLength\", \"Media\", \"MediaGroup\", \"Method\", \"Min\", \"MinLength\", \"Multiple\", \"Muted\", \"Name\", \"NoValidate\", \"Open\", \"Optimum\", \"Pattern\", \"Placeholder\", \"Poster\", \"Preload\", \"RadioGroup\", \"ReadOnly\", \"Rel\", \"Required\", \"Role\", \"Rows\", \"RowSpan\", \"Sandbox\", \"Scope\", \"Scoped\", \"Scrolling\", \"Seamless\", \"Selected\", \"Shape\", \"Size\", \"Sizes\", \"Span\", \"SpellCheck\", \"Src\", \"SrcDoc\", \"SrcLang\", \"SrcSet\", \"Start\", \"Step\", \"Summary\", \"TabIndex\", \"Target\", \"Title\", \"Type\", \"UseMap\", \"Value\", \"value\", \"Width\", \"Wmode\", \"Wrap\", \"About\", \"Datatype\", \"Inlist\", \"Prefix\", \"Property\", \"Resource\", \"Typeof\", \"Vocab\", \"AutoCapitalize\", \"AutoCorrect\", \"AutoSave\", \"ItemProp\", \"ItemScope\", \"ItemType\", \"ItemID\", \"ItemRef\", \"Results\", \"Security\", \"Unselectable\", \"Custom\"];\n    }\n}\n\nexport function HTMLAttr$reflection() {\n    return union_type(\"Fable.React.Props.HTMLAttr\", [], HTMLAttr, () => [[[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", array_type(string_type)]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class CSSProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"AlignContent\", \"AlignItems\", \"AlignSelf\", \"AlignmentAdjust\", \"AlignmentBaseline\", \"All\", \"Animation\", \"AnimationDelay\", \"AnimationDirection\", \"AnimationDuration\", \"AnimationFillMode\", \"AnimationIterationCount\", \"AnimationName\", \"AnimationPlayState\", \"AnimationTimingFunction\", \"Appearance\", \"BackfaceVisibility\", \"Background\", \"BackgroundAttachment\", \"BackgroundBlendMode\", \"BackgroundClip\", \"BackgroundColor\", \"BackgroundComposite\", \"BackgroundImage\", \"BackgroundOrigin\", \"BackgroundPosition\", \"BackgroundPositionX\", \"BackgroundPositionY\", \"BackgroundRepeat\", \"BackgroundSize\", \"BaselineShift\", \"Behavior\", \"BlockSize\", \"Border\", \"BorderBlockEnd\", \"BorderBlockEndColor\", \"BorderBlockEndStyle\", \"BorderBlockEndWidth\", \"BorderBlockStart\", \"BorderBlockStartColor\", \"BorderBlockStartStyle\", \"BorderBlockStartWidth\", \"BorderBottom\", \"BorderBottomColor\", \"BorderBottomLeftRadius\", \"BorderBottomRightRadius\", \"BorderBottomStyle\", \"BorderBottomWidth\", \"BorderCollapse\", \"BorderColor\", \"BorderCornerShape\", \"BorderImage\", \"BorderImageOutset\", \"BorderImageRepeat\", \"BorderImageSlice\", \"BorderImageSource\", \"BorderImageWidth\", \"BorderInlineEnd\", \"BorderInlineEndColor\", \"BorderInlineEndStyle\", \"BorderInlineEndWidth\", \"BorderInlineStart\", \"BorderInlineStartColor\", \"BorderInlineStartStyle\", \"BorderInlineStartWidth\", \"BorderLeft\", \"BorderLeftColor\", \"BorderLeftStyle\", \"BorderLeftWidth\", \"BorderRadius\", \"BorderRight\", \"BorderRightColor\", \"BorderRightStyle\", \"BorderRightWidth\", \"BorderSpacing\", \"BorderStyle\", \"BorderTop\", \"BorderTopColor\", \"BorderTopLeftRadius\", \"BorderTopRightRadius\", \"BorderTopStyle\", \"BorderTopWidth\", \"BorderWidth\", \"Bottom\", \"BoxAlign\", \"BoxDecorationBreak\", \"BoxDirection\", \"BoxFlex\", \"BoxFlexGroup\", \"BoxLineProgression\", \"BoxLines\", \"BoxOrdinalGroup\", \"BoxShadow\", \"BoxSizing\", \"BreakAfter\", \"BreakBefore\", \"BreakInside\", \"CaptionSide\", \"CaretColor\", \"Clear\", \"Clip\", \"ClipPath\", \"ClipRule\", \"Color\", \"ColorInterpolation\", \"ColorInterpolationFilters\", \"ColorProfile\", \"ColorRendering\", \"ColumnCount\", \"ColumnFill\", \"ColumnGap\", \"ColumnRule\", \"ColumnRuleColor\", \"ColumnRuleStyle\", \"ColumnRuleWidth\", \"ColumnSpan\", \"ColumnWidth\", \"Columns\", \"Content\", \"CounterIncrement\", \"CounterReset\", \"Cue\", \"CueAfter\", \"Cursor\", \"Direction\", \"Display\", \"DominantBaseline\", \"EmptyCells\", \"EnableBackground\", \"Fill\", \"FillOpacity\", \"FillRule\", \"Filter\", \"Flex\", \"FlexAlign\", \"FlexBasis\", \"FlexDirection\", \"FlexFlow\", \"FlexGrow\", \"FlexItemAlign\", \"FlexLinePack\", \"FlexOrder\", \"FlexShrink\", \"FlexWrap\", \"Float\", \"FloodColor\", \"FloodOpacity\", \"FlowFrom\", \"Font\", \"FontFamily\", \"FontFeatureSettings\", \"FontKerning\", \"FontLanguageOverride\", \"FontSize\", \"FontSizeAdjust\", \"FontStretch\", \"FontStyle\", \"FontSynthesis\", \"FontVariant\", \"FontVariantAlternates\", \"FontVariantCaps\", \"FontVariantEastAsian\", \"FontVariantLigatures\", \"FontVariantNumeric\", \"FontVariantPosition\", \"FontWeight\", \"GlyphOrientationHorizontal\", \"GlyphOrientationVertical\", \"Grid\", \"GridArea\", \"GridAutoColumns\", \"GridAutoFlow\", \"GridAutoRows\", \"GridColumn\", \"GridColumnEnd\", \"GridColumnGap\", \"GridColumnStart\", \"GridGap\", \"GridRow\", \"GridRowEnd\", \"GridRowGap\", \"GridRowPosition\", \"GridRowSpan\", \"GridRowStart\", \"GridTemplate\", \"GridTemplateAreas\", \"GridTemplateColumns\", \"GridTemplateRows\", \"HangingPunctuation\", \"Height\", \"HyphenateLimitChars\", \"HyphenateLimitLines\", \"HyphenateLimitZone\", \"Hyphens\", \"ImageOrientation\", \"ImageRendering\", \"ImageResolution\", \"ImeMode\", \"InlineSize\", \"Isolation\", \"JustifyContent\", \"JustifySelf\", \"Kerning\", \"LayoutGrid\", \"LayoutGridChar\", \"LayoutGridLine\", \"LayoutGridMode\", \"LayoutGridType\", \"Left\", \"LetterSpacing\", \"LightingColor\", \"LineBreak\", \"LineClamp\", \"LineHeight\", \"ListStyle\", \"ListStyleImage\", \"ListStylePosition\", \"ListStyleType\", \"Margin\", \"MarginBlockEnd\", \"MarginBlockStart\", \"MarginBottom\", \"MarginInlineEnd\", \"MarginInlineStart\", \"MarginLeft\", \"MarginRight\", \"MarginTop\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"MarqueeDirection\", \"MarqueeStyle\", \"Mask\", \"MaskBorder\", \"MaskBorderRepeat\", \"MaskBorderSlice\", \"MaskBorderSource\", \"MaskBorderWidth\", \"MaskClip\", \"MaskComposite\", \"MaskImage\", \"MaskMode\", \"MaskOrigin\", \"MaskPosition\", \"MaskRepeat\", \"MaskSize\", \"MaskType\", \"MaxFontSize\", \"MaxHeight\", \"MaxWidth\", \"MinBlockSize\", \"MinHeight\", \"MinInlineSize\", \"MinWidth\", \"MixBlendMode\", \"ObjectFit\", \"ObjectPosition\", \"OffsetBlockEnd\", \"OffsetBlockStart\", \"OffsetInlineEnd\", \"OffsetInlineStart\", \"Opacity\", \"Order\", \"Orphans\", \"Outline\", \"OutlineColor\", \"OutlineOffset\", \"OutlineStyle\", \"OutlineWidth\", \"OverflowStyle\", \"OverflowWrap\", \"OverflowX\", \"OverflowY\", \"Padding\", \"PaddingBlockEnd\", \"PaddingBlockStart\", \"PaddingBottom\", \"PaddingInlineEnd\", \"PaddingInlineStart\", \"PaddingLeft\", \"PaddingRight\", \"PaddingTop\", \"PageBreakAfter\", \"PageBreakBefore\", \"PageBreakInside\", \"Pause\", \"PauseAfter\", \"PauseBefore\", \"Perspective\", \"PerspectiveOrigin\", \"PointerEvents\", \"Position\", \"PunctuationTrim\", \"Quotes\", \"RegionFragment\", \"Resize\", \"RestAfter\", \"RestBefore\", \"Right\", \"RubyAlign\", \"RubyMerge\", \"RubyPosition\", \"ScrollBehavior\", \"ScrollSnapCoordinate\", \"ScrollSnapDestination\", \"ScrollSnapType\", \"ShapeImageThreshold\", \"ShapeInside\", \"ShapeMargin\", \"ShapeOutside\", \"ShapeRendering\", \"Speak\", \"SpeakAs\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeLinejoin\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TabSize\", \"TableLayout\", \"TextAlign\", \"TextAlignLast\", \"TextAnchor\", \"TextCombineUpright\", \"TextDecoration\", \"TextDecorationColor\", \"TextDecorationLine\", \"TextDecorationLineThrough\", \"TextDecorationNone\", \"TextDecorationOverline\", \"TextDecorationSkip\", \"TextDecorationStyle\", \"TextDecorationUnderline\", \"TextEmphasis\", \"TextEmphasisColor\", \"TextEmphasisPosition\", \"TextEmphasisStyle\", \"TextHeight\", \"TextIndent\", \"TextJustify\", \"TextJustifyTrim\", \"TextKashidaSpace\", \"TextLineThrough\", \"TextLineThroughColor\", \"TextLineThroughMode\", \"TextLineThroughStyle\", \"TextLineThroughWidth\", \"TextOrientation\", \"TextOverflow\", \"TextOverline\", \"TextOverlineColor\", \"TextOverlineMode\", \"TextOverlineStyle\", \"TextOverlineWidth\", \"TextRendering\", \"TextScript\", \"TextShadow\", \"TextTransform\", \"TextUnderlinePosition\", \"TextUnderlineStyle\", \"Top\", \"TouchAction\", \"Transform\", \"TransformBox\", \"TransformOrigin\", \"TransformOriginZ\", \"TransformStyle\", \"Transition\", \"TransitionDelay\", \"TransitionDuration\", \"TransitionProperty\", \"TransitionTimingFunction\", \"UnicodeBidi\", \"UnicodeRange\", \"UserFocus\", \"UserInput\", \"UserSelect\", \"VerticalAlign\", \"Visibility\", \"VoiceBalance\", \"VoiceDuration\", \"VoiceFamily\", \"VoicePitch\", \"VoiceRange\", \"VoiceRate\", \"VoiceStress\", \"VoiceVolume\", \"WhiteSpace\", \"WhiteSpaceTreatment\", \"Widows\", \"Width\", \"WillChange\", \"WordBreak\", \"WordSpacing\", \"WordWrap\", \"WrapFlow\", \"WrapMargin\", \"WrapOption\", \"WritingMode\", \"ZIndex\", \"Zoom\", \"Custom\"];\n    }\n}\n\nexport function CSSProp$reflection() {\n    return union_type(\"Fable.React.Props.CSSProp\", [], CSSProp, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport function stringEnum(case$) {\n    return toString(case$);\n}\n\nexport function CSSProp_Overflow_25F0CD75(overflow, overflowY) {\n    if (overflowY == null) {\n        return [\"overflow\", stringEnum(overflow)];\n    }\n    else {\n        const value = overflowY;\n        return [\"overflow\", (stringEnum(overflow) + \" \") + stringEnum(value)];\n    }\n}\n\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { clear, equals, isArrayLike, isDisposable, toIterator, disposeSafe, getEnumerator } from \"./Util.js\";\r\nimport { toString } from \"./Types.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { Operators_Lock, Operators_NullArg } from \"./FSharp.Core.js\";\r\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\r\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\r\nimport { SR_indexOutOfBounds } from \"./Global.js\";\r\n\r\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\r\n\r\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\r\n\r\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\r\n\r\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\r\n\r\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\r\n\r\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\r\n\r\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\r\n\r\nexport function Enumerator_noReset() {\r\n    throw (new Error(SR_resetNotSupported));\r\n}\r\n\r\nexport function Enumerator_notStarted() {\r\n    throw (new Error(SR_enumerationNotStarted));\r\n}\r\n\r\nexport function Enumerator_alreadyFinished() {\r\n    throw (new Error(SR_enumerationAlreadyFinished));\r\n}\r\n\r\nexport class Enumerator_Seq {\r\n    constructor(f) {\r\n        this.f = f;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        const maxCount = 4;\r\n        let i = 0;\r\n        let str = \"seq [\";\r\n        const e = getEnumerator(xs);\r\n        try {\r\n            while ((i < maxCount) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                if (i > 0) {\r\n                    str = (str + \"; \");\r\n                }\r\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                i = ((i + 1) | 0);\r\n            }\r\n            if (i === maxCount) {\r\n                str = (str + \"; ...\");\r\n            }\r\n            return str + \"]\";\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n    GetEnumerator() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n}\r\n\r\nexport function Enumerator_Seq$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\r\n}\r\n\r\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\r\n    return new Enumerator_Seq(f);\r\n}\r\n\r\nexport class Enumerator_FromFunctions$1 {\r\n    constructor(current, next, dispose) {\r\n        this.current = current;\r\n        this.next = next;\r\n        this.dispose = dispose;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        return __.next();\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        Enumerator_noReset();\r\n    }\r\n    Dispose() {\r\n        const __ = this;\r\n        __.dispose();\r\n    }\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\r\n    return new Enumerator_FromFunctions$1(current, next, dispose);\r\n}\r\n\r\nexport function Enumerator_cast(e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        if (isDisposable(e)) {\r\n            disposeSafe(e);\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_concat(sources) {\r\n    let outerOpt = void 0;\r\n    let innerOpt = void 0;\r\n    let started = false;\r\n    let finished = false;\r\n    let curr = void 0;\r\n    const finish = () => {\r\n        finished = true;\r\n        if (innerOpt != null) {\r\n            const inner = innerOpt;\r\n            try {\r\n                disposeSafe(inner);\r\n            }\r\n            finally {\r\n                innerOpt = (void 0);\r\n            }\r\n        }\r\n        if (outerOpt != null) {\r\n            const outer = outerOpt;\r\n            try {\r\n                disposeSafe(outer);\r\n            }\r\n            finally {\r\n                outerOpt = (void 0);\r\n            }\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        else if (finished) {\r\n            Enumerator_alreadyFinished();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        let copyOfStruct;\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (finished) {\r\n            return false;\r\n        }\r\n        else {\r\n            let res = void 0;\r\n            while (res == null) {\r\n                const matchValue = [outerOpt, innerOpt];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const inner_1 = matchValue[1];\r\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                            res = true;\r\n                        }\r\n                        else {\r\n                            try {\r\n                                disposeSafe(inner_1);\r\n                            }\r\n                            finally {\r\n                                innerOpt = (void 0);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        const outer_1 = matchValue[0];\r\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                            innerOpt = ((copyOfStruct = ie, getEnumerator(copyOfStruct)));\r\n                        }\r\n                        else {\r\n                            finish();\r\n                            res = false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    outerOpt = getEnumerator(sources);\r\n                }\r\n            }\r\n            return value_1(res);\r\n        }\r\n    }, () => {\r\n        if (!finished) {\r\n            finish();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_enumerateThenFinally(f, e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        try {\r\n            disposeSafe(e);\r\n        }\r\n        finally {\r\n            f();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\r\n    let started = false;\r\n    let curr = void 0;\r\n    let state = some(openf());\r\n    const dispose = () => {\r\n        if (state != null) {\r\n            const x_1 = value_1(state);\r\n            try {\r\n                closef(x_1);\r\n            }\r\n            finally {\r\n                state = (void 0);\r\n            }\r\n        }\r\n    };\r\n    const finish = () => {\r\n        try {\r\n            dispose();\r\n        }\r\n        finally {\r\n            curr = (void 0);\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (state != null) {\r\n            const s = value_1(state);\r\n            let matchValue_1;\r\n            try {\r\n                matchValue_1 = compute(s);\r\n            }\r\n            catch (matchValue) {\r\n                finish();\r\n                throw matchValue;\r\n            }\r\n            if (matchValue_1 != null) {\r\n                curr = matchValue_1;\r\n                return true;\r\n            }\r\n            else {\r\n                finish();\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, dispose);\r\n}\r\n\r\nexport function Enumerator_unfold(f, state) {\r\n    let curr = void 0;\r\n    let acc = state;\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (curr != null) {\r\n            const x = curr[0];\r\n            const st = curr[1];\r\n            return x;\r\n        }\r\n        else {\r\n            return Enumerator_notStarted();\r\n        }\r\n    }, () => {\r\n        curr = f(acc);\r\n        if (curr != null) {\r\n            const x_1 = curr[0];\r\n            const st_1 = curr[1];\r\n            acc = st_1;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, () => {\r\n    });\r\n}\r\n\r\nexport function indexNotFound() {\r\n    throw (new Error(SR_keyNotFoundAlt));\r\n}\r\n\r\nexport function checkNonNull(argName, arg) {\r\n    if (arg == null) {\r\n        Operators_NullArg(argName);\r\n    }\r\n}\r\n\r\nexport function mkSeq(f) {\r\n    return Enumerator_Seq_$ctor_673A07F2(f);\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return getEnumerator(xs);\r\n}\r\n\r\nexport function delay(generator) {\r\n    return mkSeq(() => getEnumerator(generator()));\r\n}\r\n\r\nexport function concat(sources) {\r\n    return mkSeq(() => Enumerator_concat(sources));\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    return mkSeq(() => Enumerator_unfold(generator, state));\r\n}\r\n\r\nexport function empty() {\r\n    return delay(() => (new Array(0)));\r\n}\r\n\r\nexport function singleton(x) {\r\n    return delay(() => singleton_1(x));\r\n}\r\n\r\nexport function ofArray(arr) {\r\n    return arr;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    if (xs instanceof FSharpList) {\r\n        return toArray_1(xs);\r\n    }\r\n    else {\r\n        return Array.from(xs);\r\n    }\r\n}\r\n\r\nexport function ofList(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function toList(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return ofArray_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        return ofSeq_1(xs);\r\n    }\r\n}\r\n\r\nexport function generate(create, compute, dispose) {\r\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\r\n}\r\n\r\nexport function generateIndexed(create, compute, dispose) {\r\n    return mkSeq(() => {\r\n        let i = -1;\r\n        return Enumerator_generateWhileSome(create, (x) => {\r\n            i = ((i + 1) | 0);\r\n            return compute(i, x);\r\n        }, dispose);\r\n    });\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return concat([xs, ys]);\r\n}\r\n\r\nexport function cast(xs) {\r\n    return mkSeq(() => {\r\n        checkNonNull(\"source\", xs);\r\n        return Enumerator_cast(getEnumerator(xs));\r\n    });\r\n}\r\n\r\nexport function choose(chooser, xs) {\r\n    return generate(() => ofSeq(xs), (e) => {\r\n        let curr = void 0;\r\n        while ((curr == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return curr;\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let c = 0;\r\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            while (((c === 0) && b1) && b2) {\r\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\r\n                if (c === 0) {\r\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                }\r\n            }\r\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\r\n        }\r\n        finally {\r\n            disposeSafe(e2);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e1);\r\n    }\r\n}\r\n\r\nexport function contains(value, xs, comparer) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function enumerateFromFunctions(create, moveNext, current) {\r\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\r\n        const matchValue = x_1;\r\n        if (isDisposable(matchValue)) {\r\n            disposeSafe(matchValue);\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateThenFinally(source, compensation) {\r\n    const compensation_1 = compensation;\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\r\n        }\r\n        catch (matchValue) {\r\n            compensation_1();\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateUsing(resource, source) {\r\n    const compensation = () => {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            let copyOfStruct = resource;\r\n            disposeSafe(copyOfStruct);\r\n        }\r\n    };\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation, (ofSeq)(source(resource)));\r\n        }\r\n        catch (matchValue_1) {\r\n            compensation();\r\n            throw matchValue_1;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateWhile(guard, xs) {\r\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    return choose((x) => {\r\n        if (f(x)) {\r\n            return some(x);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, xs);\r\n}\r\n\r\nexport function exists(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let found = false;\r\n            while (((!found) && e1[\"System.Collections.IEnumerator.MoveNext\"]()) && e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return found;\r\n        }\r\n        finally {\r\n            disposeSafe(e2);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e1);\r\n    }\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n            else {\r\n                return v;\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (predicate(c)) {\r\n                res = some(c);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function find(predicate, xs) {\r\n    const matchValue = tryFind(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(predicate, xs) {\r\n    return tryFindBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findBack(predicate, xs) {\r\n    const matchValue = tryFindBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (i_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\r\n                        return i;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return void 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0);\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function findIndex(predicate, xs) {\r\n    const matchValue = tryFindIndex(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, xs) {\r\n    return tryFindIndexBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(predicate, xs) {\r\n    const matchValue = tryFindIndexBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let acc = state;\r\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return acc;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let acc = state;\r\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return acc;\r\n        }\r\n        finally {\r\n            disposeSafe(e2);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e1);\r\n    }\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function forAll(predicate, xs) {\r\n    return !exists((x) => (!predicate(x)), xs);\r\n}\r\n\r\nexport function forAll2(predicate, xs, ys) {\r\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryHead_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryHead_2(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function head(xs) {\r\n    const matchValue = tryHead(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function initialize(count, f) {\r\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\r\n}\r\n\r\nexport function initializeInfinite(f) {\r\n    return initialize(2147483647, f);\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length === 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return isEmpty_1(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function tryItem(index, xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryItem_1(index, xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryItem_2(index, xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            const loop = (index_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const index_1 = index_1_mut;\r\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        return void 0;\r\n                    }\r\n                    else if (index_1 === 0) {\r\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    }\r\n                    else {\r\n                        index_1_mut = (index_1 - 1);\r\n                        continue loop;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(index);\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function item(index, xs) {\r\n    const matchValue = tryItem(index, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function tryLast(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    return acc;\r\n                }\r\n                else {\r\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                    continue loop;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function length(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length | 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return length_1(xs) | 0;\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            let count = 0;\r\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                count = ((count + 1) | 0);\r\n            }\r\n            return count | 0;\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            disposeSafe(tupledArg_1[0]);\r\n        }\r\n        finally {\r\n            disposeSafe(tupledArg_1[1]);\r\n        }\r\n    });\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            disposeSafe(tupledArg_1[0]);\r\n        }\r\n        finally {\r\n            disposeSafe(tupledArg_1[1]);\r\n        }\r\n    });\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        const e3 = tupledArg[2];\r\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) && e3[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            disposeSafe(tupledArg_1[0]);\r\n        }\r\n        finally {\r\n            try {\r\n                disposeSafe(tupledArg_1[1]);\r\n            }\r\n            finally {\r\n                disposeSafe(tupledArg_1[2]);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function readOnly(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return map((x) => x, xs);\r\n}\r\n\r\nexport class CachedSeq$1 {\r\n    constructor(cleanup, res) {\r\n        this.cleanup = cleanup;\r\n        this.res = res;\r\n    }\r\n    Dispose() {\r\n        const _ = this;\r\n        _.cleanup();\r\n    }\r\n    GetEnumerator() {\r\n        const _ = this;\r\n        return getEnumerator(_.res);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const _ = this;\r\n        return getEnumerator(_.res);\r\n    }\r\n}\r\n\r\nexport function CachedSeq$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.CachedSeq`1\", [gen0], CachedSeq$1);\r\n}\r\n\r\nexport function CachedSeq$1_$ctor_Z7A8347D4(cleanup, res) {\r\n    return new CachedSeq$1(cleanup, res);\r\n}\r\n\r\nexport function CachedSeq$1__Clear(_) {\r\n    _.cleanup();\r\n}\r\n\r\nexport function cache(source) {\r\n    checkNonNull(\"source\", source);\r\n    const prefix = [];\r\n    let enumeratorR = void 0;\r\n    return CachedSeq$1_$ctor_Z7A8347D4(() => {\r\n        Operators_Lock(prefix, () => {\r\n            clear(prefix);\r\n            let pattern_matching_result, e;\r\n            if (enumeratorR != null) {\r\n                if (value_1(enumeratorR) != null) {\r\n                    pattern_matching_result = 0;\r\n                    e = value_1(enumeratorR);\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n            switch (pattern_matching_result) {\r\n                case 0: {\r\n                    disposeSafe(e);\r\n                    break;\r\n                }\r\n            }\r\n            enumeratorR = (void 0);\r\n        });\r\n    }, unfold((i_1) => Operators_Lock(prefix, () => {\r\n        if (i_1 < prefix.length) {\r\n            return [prefix[i_1], i_1 + 1];\r\n        }\r\n        else {\r\n            if (i_1 >= prefix.length) {\r\n                let optEnumerator_2;\r\n                if (enumeratorR != null) {\r\n                    optEnumerator_2 = value_1(enumeratorR);\r\n                }\r\n                else {\r\n                    const optEnumerator = getEnumerator(source);\r\n                    enumeratorR = some(optEnumerator);\r\n                    optEnumerator_2 = optEnumerator;\r\n                }\r\n                if (optEnumerator_2 == null) {\r\n                }\r\n                else {\r\n                    const enumerator = optEnumerator_2;\r\n                    if (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        void (prefix.push(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                    }\r\n                    else {\r\n                        disposeSafe(enumerator);\r\n                        enumeratorR = some(void 0);\r\n                    }\r\n                }\r\n            }\r\n            return (i_1 < prefix.length) ? [prefix[i_1], i_1 + 1] : (void 0);\r\n        }\r\n    }), 0));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const ysCache = cache(ys);\r\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function tryPick(chooser, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function pick(chooser, xs) {\r\n    const matchValue = tryPick(chooser, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function reduce(folder, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return acc;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else {\r\n            throw (new Error(SR_inputSequenceEmpty));\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function reduceBack(folder, xs) {\r\n    const arr = toArray(xs);\r\n    if (arr.length > 0) {\r\n        return arr.reduceRight(folder);\r\n    }\r\n    else {\r\n        throw (new Error(SR_inputSequenceEmpty));\r\n    }\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return delay(() => ofArray(reverse_1(toArray(xs))));\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    return delay(() => {\r\n        let acc = state;\r\n        return concat([singleton(state), map((x) => {\r\n            acc = folder(acc, x);\r\n            return acc;\r\n        }, xs)]);\r\n    });\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\r\n}\r\n\r\nexport function skip(count, source) {\r\n    return mkSeq(() => {\r\n        const e = ofSeq(source);\r\n        try {\r\n            for (let _ = 1; _ <= count; _++) {\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n                }\r\n            }\r\n            return Enumerator_enumerateThenFinally(() => {\r\n            }, e);\r\n        }\r\n        catch (matchValue) {\r\n            disposeSafe(e);\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function skipWhile(predicate, xs) {\r\n    return delay(() => {\r\n        let skipped = true;\r\n        return filter((x) => {\r\n            if (skipped) {\r\n                skipped = predicate(x);\r\n            }\r\n            return !skipped;\r\n        }, xs);\r\n    });\r\n}\r\n\r\nexport function tail(xs) {\r\n    return skip(1, xs);\r\n}\r\n\r\nexport function take(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if (i < count) {\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() && predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) && e[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    return delay(() => concat(map(mapping, xs)));\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return delay(() => ofArray(map_1(ofArray, splitInto_1(chunks, toArray(xs)))));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return delay(() => ofArray(map_1(ofArray, windowed_1(windowSize, toArray(xs)))));\r\n}\r\n\r\nexport function transpose(xss) {\r\n    return delay(() => ofArray(map_1(ofArray, transpose_1(map_1(toArray, toArray(xss))))));\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    return delay(() => {\r\n        const arr = toArray(xs);\r\n        arr.sort(comparer);\r\n        return ofArray(arr);\r\n    });\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return delay(() => ofArray(map_1(ofArray, chunkBySize_1(chunkSize, toArray(xs)))));\r\n}\r\n\r\nexport function insertAt(index, y, xs) {\r\n    let isDone = false;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if ((isDone ? true : (i < index)) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else if (i === index) {\r\n            isDone = true;\r\n            return some(y);\r\n        }\r\n        else {\r\n            if (!isDone) {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function insertManyAt(index, ys, xs) {\r\n    let status = -1;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        if (i === index) {\r\n            status = 0;\r\n        }\r\n        let inserted;\r\n        if (status === 0) {\r\n            if (e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                inserted = some(e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                status = 1;\r\n                inserted = (void 0);\r\n            }\r\n        }\r\n        else {\r\n            inserted = (void 0);\r\n        }\r\n        if (inserted == null) {\r\n            if (e1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                if (status < 1) {\r\n                    throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n                }\r\n                return void 0;\r\n            }\r\n        }\r\n        else {\r\n            return some(value_1(inserted));\r\n        }\r\n    }, (tupledArg_1) => {\r\n        disposeSafe(tupledArg_1[0]);\r\n        disposeSafe(tupledArg_1[1]);\r\n    });\r\n}\r\n\r\nexport function removeAt(index, xs) {\r\n    let isDone = false;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if ((isDone ? true : (i < index)) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else if ((i === index) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            isDone = true;\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n        else {\r\n            if (!isDone) {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function removeManyAt(index, count, xs) {\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if (i < index) {\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n        }\r\n        else {\r\n            if (i === index) {\r\n                for (let _ = 1; _ <= count; _++) {\r\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"count\"));\r\n                    }\r\n                }\r\n            }\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function updateAt(index, y, xs) {\r\n    let isDone = false;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if ((isDone ? true : (i < index)) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else if ((i === index) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            isDone = true;\r\n            return some(y);\r\n        }\r\n        else {\r\n            if (!isDone) {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\n","import { disposeSafe, structuralHash, equals } from \"./Util.js\";\r\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\r\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\r\n\r\nexport const LanguagePrimitives_GenericEqualityComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport const LanguagePrimitives_GenericEqualityERComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport function LanguagePrimitives_FastGenericComparer() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function Operators_Failure(message) {\r\n    return new Error(message);\r\n}\r\n\r\nexport function Operators_FailurePattern(exn) {\r\n    return exn.message;\r\n}\r\n\r\nexport function Operators_NullArg(x) {\r\n    throw (new Error(x));\r\n}\r\n\r\nexport function Operators_Using(resource, action) {\r\n    try {\r\n        return action(resource);\r\n    }\r\n    finally {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            disposeSafe(resource);\r\n        }\r\n    }\r\n}\r\n\r\nexport function Operators_Lock(_lockObj, action) {\r\n    return action();\r\n}\r\n\r\nexport function ExtraTopLevelOperators_LazyPattern(input) {\r\n    return input.Value;\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\r\n    return format.cont((s) => {\r\n        StringBuilder__Append_Z721C83C5(builder, s);\r\n        return continuation();\r\n    });\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\r\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\r\n    }, builder, format);\r\n}\r\n\r\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","import { FSharpRef } from \"./Types.js\";\nexport function tryParse(str, defValue) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            defValue.contents = v;\n            return true;\n        }\n    }\n    return false;\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(0);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n","\nexport function Browser_Types_Event__Event_get_Value(this$) {\n    return this$.target.value;\n}\n\nexport function Browser_Types_Event__Event_get_Checked(this$) {\n    return this$.target.checked;\n}\n\n","import { Record } from \"../fable-library.3.7.6/Types.js\";\nimport { obj_type, record_type, bool_type, lambda_type, class_type, unit_type } from \"../fable-library.3.7.6/Reflection.js\";\nimport { Component } from \"react\";\nimport * as react from \"react\";\nimport { equalArrays, equals } from \"../fable-library.3.7.6/Util.js\";\n\nexport class LazyProps$1 extends Record {\n    constructor(model, render, equal) {\n        super();\n        this.model = model;\n        this.render = render;\n        this.equal = equal;\n    }\n}\n\nexport function LazyProps$1$reflection(gen0) {\n    return record_type(\"Elmish.React.LazyProps`1\", [gen0], LazyProps$1, () => [[\"model\", gen0], [\"render\", lambda_type(unit_type, class_type(\"Fable.React.ReactElement\"))], [\"equal\", lambda_type(gen0, lambda_type(gen0, bool_type))]]);\n}\n\nexport class Components_LazyView$1 extends Component {\n    constructor(props) {\n        super(props);\n    }\n    shouldComponentUpdate(nextProps, _nextState) {\n        const this$ = this;\n        return !(this$.props).equal((this$.props).model, nextProps.model);\n    }\n    render() {\n        const this$ = this;\n        return (this$.props).render();\n    }\n}\n\nexport function Components_LazyView$1$reflection(gen0) {\n    return class_type(\"Elmish.React.Components.LazyView`1\", [gen0], Components_LazyView$1, class_type(\"Fable.React.Component`2\", [LazyProps$1$reflection(gen0), obj_type], Component));\n}\n\nexport function Components_LazyView$1_$ctor_Z7829D94B(props) {\n    return new Components_LazyView$1(props);\n}\n\nexport function Common_lazyViewWith(equal, view, state) {\n    const props = new LazyProps$1(state, () => view(state), equal);\n    return react.createElement(Components_LazyView$1, props);\n}\n\nexport function Common_lazyView2With(equal, view, state, dispatch) {\n    const props = new LazyProps$1(state, () => view(state, dispatch), equal);\n    return react.createElement(Components_LazyView$1, props);\n}\n\nexport function Common_lazyView3With(equal, view, state1, state2, dispatch) {\n    const props = new LazyProps$1([state1, state2], () => view(state1, state2, dispatch), equal);\n    return react.createElement(Components_LazyView$1, props);\n}\n\nexport function Common_lazyView(view) {\n    return (state) => Common_lazyViewWith(equals, view, state);\n}\n\nexport function Common_lazyView2(view) {\n    return (state) => ((dispatch) => Common_lazyView2With(equals, view, state, dispatch));\n}\n\nexport function Common_lazyView3(view) {\n    return (state1) => ((state2) => ((dispatch) => Common_lazyView3With(equalArrays, view, state1, state2, dispatch)));\n}\n\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.7.6/List.js\";\nimport { singleton as singleton_1 } from \"../fable-library.3.7.6/AsyncBuilder.js\";\nimport { startImmediate, catchAsync } from \"../fable-library.3.7.6/Async.js\";\nimport { Timer_delay } from \"./prelude.fs.js\";\n\nexport function Cmd_exec(onError, dispatch, cmd) {\n    iterate((call) => {\n        try {\n            call(dispatch);\n        }\n        catch (ex) {\n            onError(ex);\n        }\n    }, cmd);\n}\n\nexport function Cmd_none() {\n    return empty();\n}\n\nexport function Cmd_map(f, cmd) {\n    return map((g) => ((arg_1) => {\n        g((arg) => {\n            arg_1(f(arg));\n        });\n    }), cmd);\n}\n\nexport function Cmd_batch(cmds) {\n    return concat(cmds);\n}\n\nexport function Cmd_ofSub(sub) {\n    return singleton(sub);\n}\n\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        try {\n            return dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n            return dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        try {\n            dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n        }\n    });\n}\n\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        try {\n            task(arg);\n        }\n        catch (x) {\n            dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_result(msg) {\n    return singleton((dispatch) => {\n        dispatch(msg);\n    });\n}\n\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 0) {\n                arg_1(ofSuccess(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 1) {\n                arg_1(ofError(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_result(start, task) {\n    return singleton((arg) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg1) => {\n            arg(_arg1);\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsync_start(x) {\n    Timer_delay(0, (_arg1) => {\n        startImmediate(x);\n    });\n}\n\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\n    });\n}\n\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\n    });\n}\n\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        task(arg).catch((arg_2) => {\n            dispatch(ofError(arg_2));\n        });\n    });\n}\n\nexport function Cmd_OfPromise_result(task) {\n    return singleton((dispatch) => {\n        task.then(dispatch);\n    });\n}\n\nexport function Cmd_attemptFunc(task, arg, ofError) {\n    return Cmd_OfFunc_attempt(task, arg, ofError);\n}\n\n","import { compare } from \"./Util.js\";\r\nimport { unfold, delay } from \"./Seq.js\";\r\nimport { op_Addition, fromZero } from \"./BigInt.js\";\r\nimport { op_Addition as op_Addition_1, fromParts } from \"./Decimal.js\";\r\nimport { op_Addition as op_Addition_2, fromBits } from \"./Long.js\";\r\n\r\nexport function makeRangeStepFunction(step, stop, zero, add) {\r\n    const stepComparedWithZero = compare(step, zero) | 0;\r\n    if (stepComparedWithZero === 0) {\r\n        throw (new Error(\"The step of a range cannot be zero\"));\r\n    }\r\n    const stepGreaterThanZero = stepComparedWithZero > 0;\r\n    return (x) => {\r\n        const comparedWithLast = compare(x, stop) | 0;\r\n        return ((stepGreaterThanZero && (comparedWithLast <= 0)) ? true : ((!stepGreaterThanZero) && (comparedWithLast >= 0))) ? [x, add(x, step)] : (void 0);\r\n    };\r\n}\r\n\r\nexport function integralRangeStep(start, step, stop, zero, add) {\r\n    const stepFn = makeRangeStepFunction(step, stop, zero, add);\r\n    return delay(() => unfold(stepFn, start));\r\n}\r\n\r\nexport function rangeBigInt(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromZero(), op_Addition);\r\n}\r\n\r\nexport function rangeDecimal(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromParts(0, 0, 0, false, 0), op_Addition_1);\r\n}\r\n\r\nexport function rangeDouble(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, 0, (x, y) => (x + y));\r\n}\r\n\r\nexport function rangeInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, false), op_Addition_2);\r\n}\r\n\r\nexport function rangeUInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, true), op_Addition_2);\r\n}\r\n\r\nexport function rangeChar(start, stop) {\r\n    const intStop = stop.charCodeAt(0) | 0;\r\n    return delay(() => unfold((c) => {\r\n        if (c <= intStop) {\r\n            return [String.fromCharCode(c), c + 1];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, start.charCodeAt(0)));\r\n}\r\n\r\n","import { Union } from \"../fable-library.3.7.6/Types.js\";\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.7.6/Reflection.js\";\nimport { fill } from \"../fable-library.3.7.6/Array.js\";\nimport { comparePrimitives, max } from \"../fable-library.3.7.6/Util.js\";\nimport { some } from \"../fable-library.3.7.6/Option.js\";\nimport { singleton, collect, take, skip, append, delay } from \"../fable-library.3.7.6/Seq.js\";\nimport { rangeDouble } from \"../fable-library.3.7.6/Range.js\";\n\nexport class RingState$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Writable\", \"ReadWritable\"];\n    }\n}\n\nexport function RingState$1$reflection(gen0) {\n    return union_type(\"Elmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\n}\n\nexport class RingBuffer$1 {\n    constructor(size) {\n        this.state = (new RingState$1(0, fill(new Array(max(comparePrimitives, size, 10)), 0, max(comparePrimitives, size, 10), null), 0));\n    }\n}\n\nexport function RingBuffer$1$reflection(gen0) {\n    return class_type(\"Elmish.RingBuffer`1\", [gen0], RingBuffer$1);\n}\n\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\n    return new RingBuffer$1(size);\n}\n\nexport function RingBuffer$1__Pop(__) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items = matchValue.fields[0];\n        const rix$0027 = ((rix + 1) % items.length) | 0;\n        if (rix$0027 === wix) {\n            __.state = (new RingState$1(0, items, wix));\n        }\n        else {\n            __.state = (new RingState$1(1, items, wix, rix$0027));\n        }\n        return some(items[rix]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RingBuffer$1__Push_2B595(__, item) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix_1 = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items_1 = matchValue.fields[0];\n        items_1[wix_1] = item;\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\n        if (wix$0027 === rix) {\n            __.state = (new RingState$1(1, RingBuffer$1__doubleSize(__, rix, items_1), items_1.length, 0));\n        }\n        else {\n            __.state = (new RingState$1(1, items_1, wix$0027, rix));\n        }\n    }\n    else {\n        const ix = matchValue.fields[1] | 0;\n        const items = matchValue.fields[0];\n        items[ix] = item;\n        const wix = ((ix + 1) % items.length) | 0;\n        __.state = (new RingState$1(1, items, wix, ix));\n    }\n}\n\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeDouble(0, 1, items.length))))))));\n}\n\n","import { Record } from \"../fable-library.3.7.6/Types.js\";\nimport { record_type, class_type, string_type, tuple_type, list_type, lambda_type, unit_type } from \"../fable-library.3.7.6/Reflection.js\";\nimport { Cmd_exec, Cmd_batch, Cmd_none } from \"./cmd.fs.js\";\nimport { Log_toConsole, Log_onError } from \"./prelude.fs.js\";\nimport { curry, partialApply, uncurry } from \"../fable-library.3.7.6/Util.js\";\nimport { ofArray } from \"../fable-library.3.7.6/List.js\";\nimport { RingBuffer$1__Pop, RingBuffer$1__Push_2B595, RingBuffer$1_$ctor_Z524259A4 } from \"./ring.fs.js\";\nimport { value as value_1, some } from \"../fable-library.3.7.6/Option.js\";\nimport { printf, toText } from \"../fable-library.3.7.6/String.js\";\n\nexport class Program$4 extends Record {\n    constructor(init, update, subscribe, view, setState, onError, syncDispatch) {\n        super();\n        this.init = init;\n        this.update = update;\n        this.subscribe = subscribe;\n        this.view = view;\n        this.setState = setState;\n        this.onError = onError;\n        this.syncDispatch = syncDispatch;\n    }\n}\n\nexport function Program$4$reflection(gen0, gen1, gen2, gen3) {\n    return record_type(\"Elmish.Program`4\", [gen0, gen1, gen2, gen3], Program$4, () => [[\"init\", lambda_type(gen0, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type))))], [\"update\", lambda_type(gen2, lambda_type(gen1, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))))], [\"subscribe\", lambda_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))], [\"view\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), gen3))], [\"setState\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), unit_type))], [\"onError\", lambda_type(tuple_type(string_type, class_type(\"System.Exception\")), unit_type)], [\"syncDispatch\", lambda_type(lambda_type(gen2, unit_type), lambda_type(gen2, unit_type))]]);\n}\n\nexport function ProgramModule_mkProgram(init, update, view) {\n    return new Program$4(init, update, (_arg1) => Cmd_none(), view, (model, arg) => {\n        view(model, arg);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_mkSimple(init, update, view) {\n    return new Program$4((arg) => [init(arg), Cmd_none()], (msg, arg_1) => [update(msg, arg_1), Cmd_none()], (_arg1) => Cmd_none(), view, (model, arg_2) => {\n        view(model, arg_2);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_withSubscription(subscribe, program) {\n    return new Program$4(program.init, program.update, (model) => Cmd_batch(ofArray([program.subscribe(model), subscribe(model)])), program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withConsoleTrace(program) {\n    return new Program$4((arg) => {\n        const patternInput = program.init(arg);\n        const initModel = patternInput[0];\n        Log_toConsole(\"Initial state:\", initModel);\n        return [initModel, patternInput[1]];\n    }, (msg, model) => {\n        Log_toConsole(\"New message:\", msg);\n        const patternInput_1 = program.update(msg, model);\n        const newModel = patternInput_1[0];\n        Log_toConsole(\"Updated state:\", newModel);\n        return [newModel, patternInput_1[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withTrace(trace, program) {\n    return new Program$4(program.init, (msg, model) => {\n        const patternInput = program.update(msg, model);\n        const state = patternInput[0];\n        trace(msg, state);\n        return [state, patternInput[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withErrorHandler(onError, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, onError, program.syncDispatch);\n}\n\nexport function ProgramModule_mapErrorHandler(map, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, partialApply(1, map, [program.onError]), program.syncDispatch);\n}\n\nexport function ProgramModule_onError(program) {\n    return program.onError;\n}\n\nexport function ProgramModule_withSetState(setState, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_setState(program) {\n    return curry(2, program.setState);\n}\n\nexport function ProgramModule_view(program) {\n    return curry(2, program.view);\n}\n\nexport function ProgramModule_withSyncDispatch(syncDispatch, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, program.onError, syncDispatch);\n}\n\nexport function ProgramModule_map(mapInit, mapUpdate, mapView, mapSetState, mapSubscribe, program) {\n    const init = partialApply(1, mapInit, [program.init]);\n    const update = partialApply(2, mapUpdate, [curry(2, program.update)]);\n    const view = partialApply(2, mapView, [curry(2, program.view)]);\n    const setState = partialApply(2, mapSetState, [curry(2, program.setState)]);\n    return new Program$4(init, uncurry(2, update), partialApply(1, mapSubscribe, [program.subscribe]), uncurry(2, view), uncurry(2, setState), program.onError, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_runWith(arg, program) {\n    const patternInput = program.init(arg);\n    const model = patternInput[0];\n    const rb = RingBuffer$1_$ctor_Z524259A4(10);\n    let reentered = false;\n    let state = model;\n    const dispatch = (msg) => {\n        if (reentered) {\n            RingBuffer$1__Push_2B595(rb, msg);\n        }\n        else {\n            reentered = true;\n            let nextMsg = some(msg);\n            while (nextMsg != null) {\n                const msg_1 = value_1(nextMsg);\n                try {\n                    const patternInput_1 = program.update(msg_1, state);\n                    const model$0027 = patternInput_1[0];\n                    program.setState(model$0027, syncDispatch);\n                    Cmd_exec((ex) => {\n                        program.onError([toText(printf(\"Error in command while handling: %A\"))(msg_1), ex]);\n                    }, syncDispatch, patternInput_1[1]);\n                    state = model$0027;\n                }\n                catch (ex_1) {\n                    program.onError([toText(printf(\"Unable to process the message: %A\"))(msg_1), ex_1]);\n                }\n                nextMsg = RingBuffer$1__Pop(rb);\n            }\n            reentered = false;\n        }\n    };\n    const syncDispatch = partialApply(1, program.syncDispatch, [dispatch]);\n    program.setState(model, syncDispatch);\n    Cmd_exec((ex_3) => {\n        program.onError([\"Error intitializing:\", ex_3]);\n    }, syncDispatch, Cmd_batch(ofArray([(() => {\n        try {\n            return program.subscribe(model);\n        }\n        catch (ex_2) {\n            program.onError([\"Unable to subscribe:\", ex_2]);\n            return Cmd_none();\n        }\n    })(), patternInput[1]])));\n}\n\nexport function ProgramModule_run(program) {\n    ProgramModule_runWith(void 0, program);\n}\n\n","import { ProgramModule_view, ProgramModule_withSetState } from \"../Fable.Elmish.3.1.0/program.fs.js\";\nimport * as react_dom from \"react-dom\";\nimport { Common_lazyView2With } from \"./common.fs.js\";\nimport { uncurry } from \"../fable-library.3.7.6/Util.js\";\n\nexport function Program_Internal_withReactBatchedUsing(lazyView2With, placeholderId, program) {\n    let lastRequest = void 0;\n    return ProgramModule_withSetState((model, dispatch) => {\n        if (lastRequest != null) {\n            const r = lastRequest;\n            window.cancelAnimationFrame(r);\n        }\n        lastRequest = window.requestAnimationFrame((_arg1) => {\n            react_dom.render(lazyView2With((x) => ((y) => (x === y)), ProgramModule_view(program), model, dispatch), document.getElementById(placeholderId));\n        });\n    }, program);\n}\n\nexport function Program_Internal_withReactSynchronousUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react_dom.render(lazyView2With((x) => ((y) => (x === y)), ProgramModule_view(program), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_Internal_withReactHydrateUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react_dom.hydrate(lazyView2With((x) => ((y) => (x === y)), ProgramModule_view(program), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_withReactBatched(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactSynchronous(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReact(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactUnoptimized(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactHydrate(placeholderId, program) {\n    return Program_Internal_withReactHydrateUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\n","import { Union } from \"./fable_modules/fable-library.3.7.6/Types.js\";\nimport { union_type, float64_type } from \"./fable_modules/fable-library.3.7.6/Reflection.js\";\nimport { SimulationModule_initial, SimulationModule_started, Vector2__get_Y, Vector2__get_X, SimulationModule_minSpeed, SimulationModule_maxSpeed, SimulationModule_minJumpStep, SimulationModule_maxJumpStep, BodyModule_center, SimulationModule_minTraceInterval, SimulationModule_minDragConstant, SimulationModule_initialProjectile, Body, BodyModule_minMass, Settings as Settings_5, Simulation, SimulationModule_withSettings, SimulationModule_simulate } from \"./Physics.js\";\nimport { equalArrays, min, comparePrimitives, max, uncurry } from \"./fable_modules/fable-library.3.7.6/Util.js\";\nimport { width, height, drawTracer, velocityCanvas, trajectoryCanvas, redrawAll, redrawVelocityMarker, redrawBody, maybeDrawTracer } from \"./Graphics.js\";\nimport { toArray, ofArray, singleton } from \"./fable_modules/fable-library.3.7.6/List.js\";\nimport * as react from \"react\";\nimport { Prop, DOMAttr, HTMLAttr } from \"./fable_modules/Fable.React.7.4.3/Fable.React.Props.fs.js\";\nimport { singleton as singleton_1, append, delay, toList } from \"./fable_modules/fable-library.3.7.6/Seq.js\";\nimport { keyValueList } from \"./fable_modules/fable-library.3.7.6/MapUtil.js\";\nimport { parse } from \"./fable_modules/fable-library.3.7.6/Double.js\";\nimport { Browser_Types_Event__Event_get_Value } from \"./fable_modules/Fable.React.7.4.3/Fable.React.Extensions.fs.js\";\nimport { printf, toText } from \"./fable_modules/fable-library.3.7.6/String.js\";\nimport { Common_lazyView3With } from \"./fable_modules/Fable.Elmish.React.3.0.1/common.fs.js\";\nimport { ProgramModule_mkSimple, ProgramModule_withSubscription, ProgramModule_run } from \"./fable_modules/Fable.Elmish.3.1.0/program.fs.js\";\nimport { Cmd_ofSub } from \"./fable_modules/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { Program_withReactBatched } from \"./fable_modules/Fable.Elmish.React.3.0.1/react.fs.js\";\n\nexport class Message extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"SetInitialSpeed\", \"SetInitialAngle\", \"SetInitialX\", \"SetInitialY\", \"SetMass\", \"SetAccelerationGravity\", \"SetDragConstant\", \"ToggleShowTrajectory\", \"ToggleShowVelocity\", \"SetTraceInterval\", \"SetJumpStep\", \"SetSimulationSpeed\", \"StartStop\", \"NextFrame\", \"Jump\", \"Reset\"];\n    }\n}\n\nexport function Message$reflection() {\n    return union_type(\"ProjectilePhysicsSimulation.App.Message\", [], Message, () => [[[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [], [], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [], [[\"Item\", float64_type]], [], []]);\n}\n\nexport function simulateAndDraw(sim, totalTime) {\n    const sim_1 = SimulationModule_simulate(uncurry(3, maybeDrawTracer(sim)), sim, totalTime);\n    redrawBody(sim_1.Projectile);\n    redrawVelocityMarker(sim_1.Projectile);\n    return sim_1;\n}\n\nexport function newPosition(settings, sim) {\n    const sim_2 = SimulationModule_withSettings(settings, sim);\n    redrawAll(sim_2.Projectile);\n    return sim_2;\n}\n\nexport function newVelocity(settings, sim) {\n    const sim_2 = SimulationModule_withSettings(settings, sim);\n    redrawVelocityMarker(sim_2.Projectile);\n    return sim_2;\n}\n\nexport function newAcceleration(settings, sim) {\n    if (sim.Running) {\n        return new Simulation(sim.Projectile, sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, settings);\n    }\n    else {\n        return SimulationModule_withSettings(settings, sim);\n    }\n}\n\nexport function update(message, sim) {\n    let inputRecord_1, inputRecord_2, inputRecord_3, inputRecord_5, inputRecord_6, inputRecord_7, inputRecord_8, inputRecord_9, inputRecord_10, inputRecord_11, inputRecord;\n    switch (message.tag) {\n        case 1: {\n            return newVelocity((inputRecord_1 = sim.Settings, new Settings_5(inputRecord_1.InitialSpeed, message.fields[0], inputRecord_1.InitialPosition, inputRecord_1.AccelerationGravity, inputRecord_1.DragConstant, inputRecord_1.ShowTrajectory, inputRecord_1.ShowVelocityMarker, inputRecord_1.TraceInterval, inputRecord_1.SimulationSpeed, inputRecord_1.JumpStep)), sim);\n        }\n        case 2: {\n            return newPosition((inputRecord_2 = sim.Settings, new Settings_5(inputRecord_2.InitialSpeed, inputRecord_2.InitialAngle, [message.fields[0], sim.Settings.InitialPosition[1]], inputRecord_2.AccelerationGravity, inputRecord_2.DragConstant, inputRecord_2.ShowTrajectory, inputRecord_2.ShowVelocityMarker, inputRecord_2.TraceInterval, inputRecord_2.SimulationSpeed, inputRecord_2.JumpStep)), sim);\n        }\n        case 3: {\n            return newPosition((inputRecord_3 = sim.Settings, new Settings_5(inputRecord_3.InitialSpeed, inputRecord_3.InitialAngle, [sim.Settings.InitialPosition[0], message.fields[0]], inputRecord_3.AccelerationGravity, inputRecord_3.DragConstant, inputRecord_3.ShowTrajectory, inputRecord_3.ShowVelocityMarker, inputRecord_3.TraceInterval, inputRecord_3.SimulationSpeed, inputRecord_3.JumpStep)), sim);\n        }\n        case 4: {\n            let projectile;\n            const inputRecord_4 = sim.Projectile;\n            projectile = (new Body(inputRecord_4.Width, inputRecord_4.Height, max(comparePrimitives, BodyModule_minMass, message.fields[0]), inputRecord_4.Position, inputRecord_4.Velocity, inputRecord_4.Acceleration, inputRecord_4.PrevAcceleration));\n            if (sim.Running) {\n                return new Simulation(projectile, sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, sim.Settings);\n            }\n            else {\n                return new Simulation(SimulationModule_initialProjectile(sim.Settings, projectile), sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, sim.Settings);\n            }\n        }\n        case 5: {\n            return newAcceleration((inputRecord_5 = sim.Settings, new Settings_5(inputRecord_5.InitialSpeed, inputRecord_5.InitialAngle, inputRecord_5.InitialPosition, message.fields[0], inputRecord_5.DragConstant, inputRecord_5.ShowTrajectory, inputRecord_5.ShowVelocityMarker, inputRecord_5.TraceInterval, inputRecord_5.SimulationSpeed, inputRecord_5.JumpStep)), sim);\n        }\n        case 6: {\n            return newAcceleration((inputRecord_6 = sim.Settings, new Settings_5(inputRecord_6.InitialSpeed, inputRecord_6.InitialAngle, inputRecord_6.InitialPosition, inputRecord_6.AccelerationGravity, max(comparePrimitives, SimulationModule_minDragConstant, message.fields[0]), inputRecord_6.ShowTrajectory, inputRecord_6.ShowVelocityMarker, inputRecord_6.TraceInterval, inputRecord_6.SimulationSpeed, inputRecord_6.JumpStep)), sim);\n        }\n        case 7: {\n            trajectoryCanvas.hidden = sim.Settings.ShowTrajectory;\n            return new Simulation(sim.Projectile, sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, (inputRecord_7 = sim.Settings, new Settings_5(inputRecord_7.InitialSpeed, inputRecord_7.InitialAngle, inputRecord_7.InitialPosition, inputRecord_7.AccelerationGravity, inputRecord_7.DragConstant, !sim.Settings.ShowTrajectory, inputRecord_7.ShowVelocityMarker, inputRecord_7.TraceInterval, inputRecord_7.SimulationSpeed, inputRecord_7.JumpStep)));\n        }\n        case 8: {\n            velocityCanvas.hidden = sim.Settings.ShowVelocityMarker;\n            return new Simulation(sim.Projectile, sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, (inputRecord_8 = sim.Settings, new Settings_5(inputRecord_8.InitialSpeed, inputRecord_8.InitialAngle, inputRecord_8.InitialPosition, inputRecord_8.AccelerationGravity, inputRecord_8.DragConstant, inputRecord_8.ShowTrajectory, !sim.Settings.ShowVelocityMarker, inputRecord_8.TraceInterval, inputRecord_8.SimulationSpeed, inputRecord_8.JumpStep)));\n        }\n        case 9: {\n            const trace = max(comparePrimitives, SimulationModule_minTraceInterval, message.fields[0]);\n            if (trace !== sim.Settings.TraceInterval) {\n                return new Simulation(sim.Projectile, sim.Running, sim.Time, ((sim.Time - sim.LastTracer) >= sim.Settings.TraceInterval) ? ((drawTracer(BodyModule_center(sim.Projectile)), sim.Time)) : sim.LastTracer, sim.LeftOverTime, (inputRecord_9 = sim.Settings, new Settings_5(inputRecord_9.InitialSpeed, inputRecord_9.InitialAngle, inputRecord_9.InitialPosition, inputRecord_9.AccelerationGravity, inputRecord_9.DragConstant, inputRecord_9.ShowTrajectory, inputRecord_9.ShowVelocityMarker, trace, inputRecord_9.SimulationSpeed, inputRecord_9.JumpStep)));\n            }\n            else {\n                return sim;\n            }\n        }\n        case 10: {\n            return new Simulation(sim.Projectile, sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, (inputRecord_10 = sim.Settings, new Settings_5(inputRecord_10.InitialSpeed, inputRecord_10.InitialAngle, inputRecord_10.InitialPosition, inputRecord_10.AccelerationGravity, inputRecord_10.DragConstant, inputRecord_10.ShowTrajectory, inputRecord_10.ShowVelocityMarker, inputRecord_10.TraceInterval, inputRecord_10.SimulationSpeed, ((e2_1) => min(comparePrimitives, SimulationModule_maxJumpStep, e2_1))(((e2) => max(comparePrimitives, SimulationModule_minJumpStep, e2))(message.fields[0])))));\n        }\n        case 11: {\n            return new Simulation(sim.Projectile, sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, (inputRecord_11 = sim.Settings, new Settings_5(inputRecord_11.InitialSpeed, inputRecord_11.InitialAngle, inputRecord_11.InitialPosition, inputRecord_11.AccelerationGravity, inputRecord_11.DragConstant, inputRecord_11.ShowTrajectory, inputRecord_11.ShowVelocityMarker, inputRecord_11.TraceInterval, ((e2_1_1) => min(comparePrimitives, SimulationModule_maxSpeed, e2_1_1))(((e2_2) => max(comparePrimitives, SimulationModule_minSpeed, e2_2))(message.fields[0])), inputRecord_11.JumpStep)));\n        }\n        case 12: {\n            if (sim.Running) {\n                return new Simulation(sim.Projectile, false, sim.Time, sim.LastTracer, 0, sim.Settings);\n            }\n            else {\n                return new Simulation(sim.Projectile, true, sim.Time, sim.LastTracer, sim.LeftOverTime, sim.Settings);\n            }\n        }\n        case 13: {\n            if (sim.Running && (sim.Settings.SimulationSpeed > 0)) {\n                return simulateAndDraw(sim, (min(comparePrimitives, 0.1, message.fields[0] / 1000) * sim.Settings.SimulationSpeed) + sim.LeftOverTime);\n            }\n            else {\n                return sim;\n            }\n        }\n        case 14: {\n            return simulateAndDraw(sim, sim.Settings.JumpStep);\n        }\n        case 15: {\n            const projectile_1 = SimulationModule_initialProjectile(sim.Settings, sim.Projectile);\n            redrawAll(projectile_1);\n            return new Simulation(projectile_1, false, 0, 0, 0, sim.Settings);\n        }\n        default: {\n            return newVelocity((inputRecord = sim.Settings, new Settings_5(message.fields[0], inputRecord.InitialAngle, inputRecord.InitialPosition, inputRecord.AccelerationGravity, inputRecord.DragConstant, inputRecord.ShowTrajectory, inputRecord.ShowVelocityMarker, inputRecord.TraceInterval, inputRecord.SimulationSpeed, inputRecord.JumpStep)), sim);\n        }\n    }\n}\n\nexport function unit(unitName) {\n    return singleton(unitName);\n}\n\nexport function withSub(subscript, text) {\n    return ofArray([text, react.createElement(\"sub\", {}, subscript)]);\n}\n\nexport function withSuper(superscript, text) {\n    return ofArray([text, react.createElement(\"sup\", {}, superscript)]);\n}\n\nexport function checkbox(text, message, isChecked, dispatch) {\n    let children;\n    const children_2 = [(children = [react.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: isChecked,\n        onChange: (_arg1) => {\n            dispatch(message);\n        },\n    }), text], react.createElement(\"label\", {\n        className: \"checkbox\",\n    }, ...children))];\n    return react.createElement(\"li\", {}, ...children_2);\n}\n\nexport function controls(running, settings, dispatch) {\n    let props, children_4, unit_1, props_4, children_2, children_10, attributes_1, unit_2, props_12, children_8;\n    const props_18 = [new HTMLAttr(64, \"controls\"), [\"style\", {\n        marginTop: height,\n    }]];\n    const children_14 = [(props = toList(delay(() => {\n        const playpause = running ? \"Pause\" : \"Play\";\n        return append(singleton_1(new HTMLAttr(159, \"button\")), delay(() => append(singleton_1(new HTMLAttr(64, playpause.toLocaleLowerCase())), delay(() => append(singleton_1(new HTMLAttr(158, playpause)), delay(() => singleton_1(new DOMAttr(40, (_arg1) => {\n            dispatch(new Message(12));\n        }))))))));\n    })), react.createElement(\"button\", keyValueList(props, 1))), (children_4 = [\"Speed:\", (unit_1 = unit(\"x\"), (props_4 = [[\"style\", {\n        display: \"inline-block\",\n    }]], (children_2 = toList(delay(() => {\n        let props_2;\n        return append(singleton_1((props_2 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, settings.SimulationSpeed)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e) => {\n            try {\n                dispatch(((arg0_1) => (new Message(11, arg0_1)))(parse(Browser_Types_Event__Event_get_Value(e)) * 1));\n            }\n            catch (matchValue) {\n            }\n        })), delay(() => [new HTMLAttr(119, 0), new HTMLAttr(114, SimulationModule_maxSpeed)])))))))))), react.createElement(\"input\", keyValueList(props_2, 1)))), delay(() => unit_1));\n    })), react.createElement(\"div\", keyValueList(props_4, 1), ...children_2))))], react.createElement(\"label\", {}, ...children_4)), (children_10 = [react.createElement(\"button\", {\n        type: \"button\",\n        className: \"jump\",\n        title: \"Jump\",\n        onClick: (_arg2) => {\n            dispatch(new Message(14));\n        },\n    }), (attributes_1 = [[\"style\", {\n        width: \"3em\",\n        marginLeft: 0,\n        marginTop: \"0.1em\",\n    }], new HTMLAttr(119, 0), new HTMLAttr(114, SimulationModule_maxJumpStep)], (unit_2 = unit(\"s\"), (props_12 = [[\"style\", {\n        display: \"inline-block\",\n    }]], (children_8 = toList(delay(() => {\n        let props_10;\n        return append(singleton_1((props_10 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, settings.JumpStep)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_1) => {\n            try {\n                dispatch(((arg0_3) => (new Message(10, arg0_3)))(parse(Browser_Types_Event__Event_get_Value(e_1)) * 1));\n            }\n            catch (matchValue_1) {\n            }\n        })), delay(() => attributes_1)))))))))), react.createElement(\"input\", keyValueList(props_10, 1)))), delay(() => unit_2));\n    })), react.createElement(\"div\", keyValueList(props_12, 1), ...children_8)))))], react.createElement(\"div\", {}, ...children_10)), react.createElement(\"button\", {\n        type: \"button\",\n        className: \"reset\",\n        title: \"Reset\",\n        onClick: (_arg3) => {\n            dispatch(new Message(15));\n        },\n    })];\n    return react.createElement(\"div\", keyValueList(props_18, 1), ...children_14);\n}\n\nexport function telemetry(time, projectile) {\n    let children_46, children_44, name_7, value_6, children_24, children_20, children_22, name_8, value_7, children_30, children_26, children_28, name_9, value_8, children_36, children_32, children_34, name_10, value_9, children_42, children_38, children_40;\n    const children_48 = [react.createElement(\"summary\", {}, \"Telemetry\"), (children_46 = [(children_44 = [((value) => {\n        let children_2, children_4;\n        const children_6 = [(children_2 = toList(delay(() => append([\"T\"], delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_2)), (children_4 = [toText(printf(\"%.3f\"))(value)], react.createElement(\"td\", {}, ...children_4))];\n        return react.createElement(\"tr\", {}, ...children_6);\n    })(time), ((value_2) => {\n        let children_8, children_10;\n        const children_12 = [(children_8 = toList(delay(() => append([\"X\"], delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_8)), (children_10 = [toText(printf(\"%.3f\"))(value_2)], react.createElement(\"td\", {}, ...children_10))];\n        return react.createElement(\"tr\", {}, ...children_12);\n    })(Vector2__get_X(projectile.Position)), ((value_4) => {\n        let children_14, children_16;\n        const children_18 = [(children_14 = toList(delay(() => append([\"Y\"], delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_14)), (children_16 = [toText(printf(\"%.3f\"))(value_4)], react.createElement(\"td\", {}, ...children_16))];\n        return react.createElement(\"tr\", {}, ...children_18);\n    })(Vector2__get_Y(projectile.Position)), (name_7 = withSub(\"x\", \"V\"), (value_6 = Vector2__get_X(projectile.Velocity), (children_24 = [(children_20 = toList(delay(() => append(name_7, delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_20)), (children_22 = [toText(printf(\"%.3f\"))(value_6)], react.createElement(\"td\", {}, ...children_22))], react.createElement(\"tr\", {}, ...children_24)))), (name_8 = withSub(\"y\", \"V\"), (value_7 = Vector2__get_Y(projectile.Velocity), (children_30 = [(children_26 = toList(delay(() => append(name_8, delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_26)), (children_28 = [toText(printf(\"%.3f\"))(value_7)], react.createElement(\"td\", {}, ...children_28))], react.createElement(\"tr\", {}, ...children_30)))), (name_9 = withSub(\"x\", \"A\"), (value_8 = Vector2__get_X(projectile.Acceleration), (children_36 = [(children_32 = toList(delay(() => append(name_9, delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_32)), (children_34 = [toText(printf(\"%.3f\"))(value_8)], react.createElement(\"td\", {}, ...children_34))], react.createElement(\"tr\", {}, ...children_36)))), (name_10 = withSub(\"y\", \"A\"), (value_9 = Vector2__get_Y(projectile.Acceleration), (children_42 = [(children_38 = toList(delay(() => append(name_10, delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_38)), (children_40 = [toText(printf(\"%.3f\"))(value_9)], react.createElement(\"td\", {}, ...children_40))], react.createElement(\"tr\", {}, ...children_42))))], react.createElement(\"tbody\", {}, ...children_44))], react.createElement(\"table\", {}, ...children_46))];\n    return react.createElement(\"details\", {\n        className: \"telemetry\",\n        open: true,\n    }, ...children_48);\n}\n\nexport function viewSettings(started, mass, settings, dispatch) {\n    let children_6, unit_1, children_4, children_2, props_2, children, children_30, unit_3, children_12, children_10, props_12, children_8, children_28, children_26, children_22, unit_8, props_32, children_24, children_56;\n    const children_58 = [(children_6 = [checkbox(\"Show Velocity Marker\", new Message(8), settings.ShowVelocityMarker, dispatch), checkbox(\"Show Traced Trajectory\", new Message(7), settings.ShowTrajectory, dispatch), (unit_1 = unit(\"s\"), (children_4 = [(children_2 = [\"Trace Trajectory Every:\", (props_2 = [[\"style\", {\n        display: \"inline-block\",\n    }]], (children = toList(delay(() => {\n        let props;\n        return append(singleton_1((props = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, settings.TraceInterval)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e) => {\n            try {\n                dispatch(((arg0) => (new Message(9, arg0)))(parse(Browser_Types_Event__Event_get_Value(e)) * 1));\n            }\n            catch (matchValue) {\n            }\n        })), delay(() => [new HTMLAttr(119, 0)])))))))))), react.createElement(\"input\", keyValueList(props, 1)))), delay(() => unit_1));\n    })), react.createElement(\"div\", keyValueList(props_2, 1), ...children)))], react.createElement(\"label\", {}, ...children_2))], react.createElement(\"li\", {}, ...children_4)))], react.createElement(\"ul\", {}, ...children_6)), (children_30 = [(unit_3 = unit(\"kg\"), (children_12 = [(children_10 = [\"Mass:\", (props_12 = [[\"style\", {\n        display: \"inline-block\",\n    }]], (children_8 = toList(delay(() => {\n        let props_10;\n        return append(singleton_1((props_10 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, mass)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_1) => {\n            try {\n                dispatch(((arg0_1) => (new Message(4, arg0_1)))(parse(Browser_Types_Event__Event_get_Value(e_1)) * 1));\n            }\n            catch (matchValue_1) {\n            }\n        })), delay(() => [new HTMLAttr(119, 0)])))))))))), react.createElement(\"input\", keyValueList(props_10, 1)))), delay(() => unit_3));\n    })), react.createElement(\"div\", keyValueList(props_12, 1), ...children_8)))], react.createElement(\"label\", {}, ...children_10))], react.createElement(\"li\", {}, ...children_12))), ((unit_5) => ((message_4) => ((value_4) => ((dispatch_5) => {\n        let children_16, props_20, children_14;\n        const children_18 = [(children_16 = [\"Gravity:\", (props_20 = [[\"style\", {\n            display: \"inline-block\",\n        }]], (children_14 = toList(delay(() => {\n            let props_18;\n            return append(singleton_1((props_18 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, value_4)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_2) => {\n                try {\n                    dispatch_5(message_4(parse(Browser_Types_Event__Event_get_Value(e_2)) * 1));\n                }\n                catch (matchValue_2) {\n                }\n            })), delay(() => [])))))))))), react.createElement(\"input\", keyValueList(props_18, 1)))), delay(() => unit_5));\n        })), react.createElement(\"div\", keyValueList(props_20, 1), ...children_14)))], react.createElement(\"label\", {}, ...children_16))];\n        return react.createElement(\"li\", {}, ...children_18);\n    }))))(withSuper(\"2\", \"m/s\"))((arg0_2) => (new Message(5, arg0_2)))(settings.AccelerationGravity)(dispatch), (children_28 = [(children_26 = [(children_22 = [react.createElement(\"u\", {\n        className: \"tooltip\",\n    }, \"Combined Drag Constant\"), \":\"], react.createElement(\"span\", {\n        title: \"Combined Drag Constant = fluid density (kg/m^3) * contact area (m^2) * drag coefficient (unitless) / 2\",\n    }, ...children_22)), (unit_8 = unit(\"kg/m\"), (props_32 = [[\"style\", {\n        display: \"inline-block\",\n    }]], (children_24 = toList(delay(() => {\n        let props_30;\n        return append(singleton_1((props_30 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, settings.DragConstant)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_3) => {\n            try {\n                dispatch(((arg0_3) => (new Message(6, arg0_3)))(parse(Browser_Types_Event__Event_get_Value(e_3)) * 1));\n            }\n            catch (matchValue_3) {\n            }\n        })), delay(() => [new HTMLAttr(119, 0)])))))))))), react.createElement(\"input\", keyValueList(props_30, 1)))), delay(() => unit_8));\n    })), react.createElement(\"div\", keyValueList(props_32, 1), ...children_24))))], react.createElement(\"label\", {}, ...children_26))], react.createElement(\"li\", {}, ...children_28))], react.createElement(\"ul\", {}, ...children_30)), (children_56 = toList(delay(() => {\n        let value_8, name_5, unit_9, children_36, children_34, props_42, children_32;\n        return append(singleton_1((value_8 = Vector2__get_X(settings.InitialPosition), (name_5 = (\"Initial \" + \"X\"), (unit_9 = unit(\"m\"), (children_36 = [(children_34 = [name_5 + \":\", (props_42 = [[\"style\", {\n            display: \"inline-block\",\n        }]], (children_32 = toList(delay(() => {\n            let props_40;\n            return append(singleton_1((props_40 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, value_8)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_4) => {\n                try {\n                    dispatch(((arg0_4) => (new Message(2, arg0_4)))(parse(Browser_Types_Event__Event_get_Value(e_4)) * 1));\n                }\n                catch (matchValue_4) {\n                }\n            })), delay(() => [new HTMLAttr(79, started)])))))))))), react.createElement(\"input\", keyValueList(props_40, 1)))), delay(() => unit_9));\n        })), react.createElement(\"div\", keyValueList(props_42, 1), ...children_32)))], react.createElement(\"label\", {}, ...children_34))], react.createElement(\"li\", {}, ...children_36)))))), delay(() => {\n            let value_11, name_7, unit_11, children_42, children_40, props_50, children_38;\n            return append(singleton_1((value_11 = Vector2__get_Y(settings.InitialPosition), (name_7 = (\"Initial \" + \"Y\"), (unit_11 = unit(\"m\"), (children_42 = [(children_40 = [name_7 + \":\", (props_50 = [[\"style\", {\n                display: \"inline-block\",\n            }]], (children_38 = toList(delay(() => {\n                let props_48;\n                return append(singleton_1((props_48 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, value_11)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_5) => {\n                    try {\n                        dispatch(((arg0_5) => (new Message(3, arg0_5)))(parse(Browser_Types_Event__Event_get_Value(e_5)) * 1));\n                    }\n                    catch (matchValue_5) {\n                    }\n                })), delay(() => [new HTMLAttr(79, started)])))))))))), react.createElement(\"input\", keyValueList(props_48, 1)))), delay(() => unit_11));\n            })), react.createElement(\"div\", keyValueList(props_50, 1), ...children_38)))], react.createElement(\"label\", {}, ...children_40))], react.createElement(\"li\", {}, ...children_42)))))), delay(() => {\n                let name_9, unit_13, children_48, children_46, props_58, children_44;\n                return append(singleton_1((name_9 = (\"Initial \" + \"Speed\"), (unit_13 = unit(\"m/s\"), (children_48 = [(children_46 = [name_9 + \":\", (props_58 = [[\"style\", {\n                    display: \"inline-block\",\n                }]], (children_44 = toList(delay(() => {\n                    let props_56;\n                    return append(singleton_1((props_56 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, settings.InitialSpeed)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_6) => {\n                        try {\n                            dispatch(((arg0_6) => (new Message(0, arg0_6)))(parse(Browser_Types_Event__Event_get_Value(e_6)) * 1));\n                        }\n                        catch (matchValue_6) {\n                        }\n                    })), delay(() => [new HTMLAttr(79, started)])))))))))), react.createElement(\"input\", keyValueList(props_56, 1)))), delay(() => unit_13));\n                })), react.createElement(\"div\", keyValueList(props_58, 1), ...children_44)))], react.createElement(\"label\", {}, ...children_46))], react.createElement(\"li\", {}, ...children_48))))), delay(() => {\n                    let name_11, unit_15, children_54, children_52, props_66, children_50;\n                    return singleton_1((name_11 = (\"Initial \" + \"Angle\"), (unit_15 = unit(\"deg\"), (children_54 = [(children_52 = [name_11 + \":\", (props_66 = [[\"style\", {\n                        display: \"inline-block\",\n                    }]], (children_50 = toList(delay(() => {\n                        let props_64;\n                        return append(singleton_1((props_64 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, settings.InitialAngle)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_7) => {\n                            try {\n                                dispatch(((arg0_7) => (new Message(1, arg0_7)))(parse(Browser_Types_Event__Event_get_Value(e_7)) * 1));\n                            }\n                            catch (matchValue_7) {\n                            }\n                        })), delay(() => [new HTMLAttr(79, started)])))))))))), react.createElement(\"input\", keyValueList(props_64, 1)))), delay(() => unit_15));\n                    })), react.createElement(\"div\", keyValueList(props_66, 1), ...children_50)))], react.createElement(\"label\", {}, ...children_52))], react.createElement(\"li\", {}, ...children_54)))));\n                }));\n            }));\n        }));\n    })), react.createElement(\"ul\", {}, ...children_56))];\n    return react.createElement(\"div\", {\n        className: \"settings\",\n        key: \"settings\",\n    }, ...children_58);\n}\n\nexport function view(sim, dispatch) {\n    let props, children;\n    return toArray(ofArray([(props = [new HTMLAttr(64, \"simulation\"), new Prop(0, \"simulation\"), [\"style\", {\n        width: width,\n    }]], (children = [Common_lazyView3With((tupledArg, tupledArg_1) => ((tupledArg[0] === tupledArg_1[0]) && (tupledArg[1] === tupledArg_1[1])), controls, sim.Running, sim.Settings, dispatch), telemetry(sim.Time, sim.Projectile)], react.createElement(\"div\", keyValueList(props, 1), ...children))), Common_lazyView3With((tupledArg_2, tupledArg_3) => (equalArrays(tupledArg_2[0], tupledArg_3[0]) && (tupledArg_2[1] === tupledArg_3[1])), (tupledArg_4, settings_1, dispatch_2) => viewSettings(tupledArg_4[0], tupledArg_4[1], settings_1, dispatch_2), [SimulationModule_started(sim), sim.Projectile.Mass], sim.Settings, dispatch)]));\n}\n\nexport function init() {\n    redrawAll(SimulationModule_initial.Projectile);\n    return SimulationModule_initial;\n}\n\nexport function loop(dispatch, last, t) {\n    dispatch(new Message(13, (t - last) * 1));\n    window.requestAnimationFrame((t_1) => {\n        loop(dispatch, t, t_1);\n    });\n}\n\nProgramModule_run(ProgramModule_withSubscription((_arg1) => Cmd_ofSub((d) => {\n    loop(d, 0, 0);\n}), Program_withReactBatched(\"elmish-app\", ProgramModule_mkSimple(init, update, view))));\n\n","import { some } from \"../fable-library.3.7.6/Option.js\";\nimport Timer from \"../fable-library.3.7.6/Timer.js\";\nimport { add } from \"../fable-library.3.7.6/Observable.js\";\n\nexport function Log_onError(text, ex) {\n    console.error(some(text), ex);\n}\n\nexport function Log_toConsole(text, o) {\n    console.log(some(text), o);\n}\n\nexport function Timer_delay(interval, callback) {\n    let t;\n    let returnVal = new Timer(interval);\n    returnVal.AutoReset = false;\n    t = returnVal;\n    add(callback, t.Elapsed());\n    t.Enabled = true;\n    t.Start();\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkprojectile_physics_simulation\"] = self[\"webpackChunkprojectile_physics_simulation\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [216], () => (__webpack_require__(893)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(885)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","x","Array","isArray","ArrayBuffer","isView","Dispose","sameConstructor","y","Object","getPrototypeOf","constructor","Enumerator","iter","this","current","cur","next","value","done","Error","o","GetEnumerator","Symbol","iterator","en","hasNext","undefined","padWithZeros","i","length","str","toString","date","date1","offset","kind","getTimezoneOffset","ObjectRef","static","idMap","has","set","count","get","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","s","h","len","charCodeAt","stringHash","GetHashCode","isHashable","arrayHash","Date","getTime","dateHash","values","map","v","id","eq","equalArraysWith","Equals","isEquatable","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","compareArrays","comp","j","compareArraysWith","compare","CompareTo","isComparable","key","compareObjects","min","comparer","max","WeakMap","CURRIED","arity","f","uncurried","args","res","_curry","arg","concat","callStack","self","seqToString","cons","entries","k","join","name","String","cases","tag","toJSON","fields","fieldStr","withParens","indexOf","unionToString","splice","other","recordToJSON","recordToString","recordGetHashCode","thisNames","recordEquals","result","recordCompareTo","FSharpRef","contentsOrGetter","setter","getter","contents","Vector2__get_X","this$","Vector2__get_Y","Body","Width","Height","Mass","Position","Velocity","Acceleration","PrevAcceleration","super","BodyModule_center","body","Settings","InitialSpeed","InitialAngle","InitialPosition","AccelerationGravity","DragConstant","ShowTrajectory","ShowVelocityMarker","TraceInterval","SimulationSpeed","JumpStep","Simulation","Projectile","Running","Time","LastTracer","LeftOverTime","timeStep","SimulationModule_started","sim","SimulationModule_accclerationDrag","constant","velocity","mass","_arg2","_arg1","_arg1_2","scalar","_arg1_1","vector","Math","sqrt","Vector2Module_magnitude","Vector2Module_normalizeUnsafe","SimulationModule_acceleration","settings","gravity","SimulationModule_move","time","newAcceleration","_arg2_1","_arg1_4","_arg2_4","_arg1_11","_arg1_10","scalar_5","_arg1_9","_arg2_3","_arg2_2","scalar_3","_arg1_5","_arg1_7","scalar_4","_arg1_6","_arg1_8","scalar_6","deltaPosition","_arg1_3","scalar_1","scalar_2","SimulationModule_initialProjectile","projectile","magnitude","degrees","cos","sin","SimulationModule_withSettings","SimulationModule_initial","projectileLength","phi","width","window","screen","availWidth","height","availHeight","setupCanvas","canvas","document","getElementById","context","getContext","translate","patternInput$004024","trajectoryContext","trajectoryCanvas","patternInput$004025$002D1","bodyContext","patternInput$004026$002D2","velocityContext","velocityCanvas","drawTracer","point","beginPath","arc","closePath","fill","fillStyle","strokeStyle","lastBody","lastVelocityMaker","redrawBody","clearRect","clearBody","fillRect","drawBody","redrawVelocityMarker","c","abs","clearVelocityMarker","moveTo","lineTo","stroke","drawVelocityMarker","redrawAll","resetTrajectory","dateOffsetToString","isMinus","minutes","dateToHalfUTCString","half","toISOString","substring","dateToStringWithCustomFormat","format","utc","replace","match","rep","Number","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","isNaN","symbol","sd","toPrecision","dp","toExponential","toHex","fsFormatRegExp","printf","input","cont","lastIndex","strParts","matches","strIdx","exec","matchIndex","index","push","createPrinter","toText","continuePrint","formatReplacement","flags","padLength","precision","sign","toLowerCase","isLessThan","multiply","parseInt","toFixed","toUpperCase","_provider","_a","_b","_c","d","dateWithOffset","dateToISOStringWithOffset","dateToStringWithOffset","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","dateToStringWithKind","zeroFlag","minusFlag","ch","padLeft","_strParts","_matches","_result","padArg","slice","_padLength","isRight","target","targetIndex","start","head","tail","xs","from","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","matchValue","xt","yt","i_mut","h_mut","t","_key","ListEnumerator$1","it","__","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","FSharpList__get_IsEmpty","FSharpList__get_Head","FSharpList__get_Tail","folder","state","acc","action","unitVar0","ofArray","tail_1","ofArrayWithTail","Prop","DOMAttr","HTMLAttr","Some","Enumerator_notStarted","Enumerator_alreadyFinished","Enumerator_Seq","e","Enumerator_FromFunctions$1","dispose","Enumerator_noReset","Enumerator_FromFunctions$1_$ctor_58C54629","Enumerator_generateWhileSome","openf","compute","closef","curr","started","x_1","finish","matchValue_1","mkSeq","Enumerator_Seq_$ctor_673A07F2","argName","Operators_NullArg","generator","sources","outerOpt","innerOpt","finished","inner","outer","copyOfStruct","inner_1","outer_1","Enumerator_concat","ar","Helpers_allocateArrayFromCons","toList","xs_3","root","node","enumerator","xs_5","t_2","ofSeq","ys","mapping","create","e_1","source","_","Enumerator_enumerateThenFinally","dashify","separator","m","charAt","keyValueList","caseRule","obj","definedCaseRule","fail","kvPair","assign","changeCase","defValue","test","Browser_Types_Event__Event_get_Value","LazyProps$1","model","render","equal","Components_LazyView$1","Component","props","shouldComponentUpdate","nextProps","_nextState","Common_lazyView3With","view","state1","state2","dispatch","Cmd_exec","onError","cmd","call","ex","Cmd_batch","cmds","lists","forEach","xs_6","integralRangeStep","step","stop","zero","add","stepFn","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","makeRangeStepFunction","st_1","Enumerator_unfold","RingState$1","RingBuffer$1","size","RingBuffer$1__Pop","wix","rix","items","rix$0027","RingBuffer$1__Push_2B595","item","wix_1","items_1","wix$0027","ix","Program$4","init","update","subscribe","setState","syncDispatch","program","Message","simulateAndDraw","totalTime","sim_1","otherSideEffects","timeToSimulate","numSteps","floor","patternInput","simulatedTime","newTime","SimulationModule_simulate","timeSinceLastTracer","tracerCount","nextTracerTime","alpha","a","delta","lerpDelta","maybeDrawTracer","newPosition","sim_2","newVelocity","unit","unitName","withSub","subscript","text","message","isChecked","children","children_2","type","checked","onChange","className","controls","running","children_4","unit_1","props_4","children_10","attributes_1","unit_2","props_12","children_8","props_18","marginTop","children_14","playpause","toLocaleLowerCase","display","props_2","arg0_1","title","onClick","marginLeft","props_10","arg0_3","_arg3","telemetry","children_46","children_44","name_7","value_6","children_24","children_20","children_22","name_8","value_7","children_30","children_26","children_28","name_9","value_8","children_36","children_32","children_34","name_10","value_9","children_42","children_38","children_40","children_48","children_6","value_2","children_12","value_4","children_16","children_18","open","last","requestAnimationFrame","t_1","rb","reentered","msg","nextMsg","msg_1","patternInput_1","model$0027","ex_1","ex_3","ex_2","ProgramModule_runWith","ProgramModule_run","ProgramModule_withSubscription","inputRecord_1","inputRecord_2","inputRecord_3","inputRecord_5","inputRecord_6","inputRecord_7","inputRecord_8","inputRecord_9","inputRecord_10","inputRecord_11","inputRecord","inputRecord_4","hidden","trace","projectile_1","FSharpList__get_Length","toArray","tupledArg","tupledArg_1","tupledArg_2","tupledArg_3","tupledArg_4","settings_1","dispatch_2","unit_3","unit_8","props_32","children_56","children_58","arg0","unit_5","message_4","dispatch_5","props_20","e_2","matchValue_2","arg0_2","props_30","e_3","matchValue_3","name_5","unit_9","props_42","props_40","e_4","arg0_4","matchValue_4","value_11","unit_11","props_50","props_48","e_5","arg0_5","matchValue_5","unit_13","props_58","props_56","e_6","arg0_6","matchValue_6","name_11","unit_15","children_54","children_52","props_66","children_50","props_64","e_7","arg0_7","matchValue_7","viewSettings","arg_1","arg_2","console","error","lazyView2With","placeholderId","lastRequest","r","cancelAnimationFrame","Program_Internal_withReactBatchedUsing","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}