{"mappings":"AAIO,SAASA,EAAYC,GACxB,OAAOC,MAAMC,QAAQF,IAAMG,YAAYC,OAAOJ,GAWlD,SAASK,EAAWL,GAChB,MAAgC,mBAAlBA,EAAEM,YAEb,SAASC,EAAaP,GACzB,OAAY,MAALA,GAAkC,mBAAdA,EAAEQ,QAE1B,SAASC,EAAYT,GACpBO,EAAaP,IACbA,EAAEQ,UAGH,SAASE,EAAgBV,EAAGW,GAC/B,OAAOC,OAAOC,eAAeb,GAAGc,cAAgBF,OAAOC,eAAeF,GAAGG,YAEtE,MAAMC,EACTD,YAAYE,GACRC,KAAKD,KAAOA,EAEhB,yDACI,OAAOC,KAAKC,QAEhB,+CACI,OAAOD,KAAKC,QAEhB,4CACI,MAAMC,EAAMF,KAAKD,KAAKI,OAEtB,OADAH,KAAKC,QAAUC,EAAIE,OACXF,EAAIG,KAEhB,yCACI,MAAM,IAAIC,MAAM,gCAEpBf,YAIG,SAASgB,EAAcC,GAC1B,MAAkC,mBAApBA,EAAEC,cACVD,EAAEC,gBACF,IAAIX,EAAWU,EAAEE,OAAOC,aAE3B,SAASC,EAAWC,GACvB,MAAO,CACH,CAACH,OAAOC,YAAc,OAAOX,MAC7BG,OACI,MAAMW,EAAUD,EAAG,6CAEnB,MAAO,CAAER,MAAOS,EAASV,MADTU,EAAUD,EAAG,qDAAkDE,KA+DpF,SAASC,EAAaC,EAAGC,GAC5B,IAAIC,EAAMF,EAAEG,SAAS,IACrB,KAAOD,EAAID,OAASA,GAChBC,EAAM,IAAMA,EAEhB,OAAOA,EAYJ,SAASE,EAAWC,GACvB,MAAMC,EAAQD,EACd,MAA+B,iBAAjBC,EAAMC,OACdD,EAAMC,OACS,IAAdF,EAAKG,KACF,GAA+B,IAA3BH,EAAKI,oBAMhB,SAASC,EAAcV,EAAGW,GAE7B,OADAX,EAAIA,EAAI,GAAc,MAATW,GAA2B,KAAVA,EAAe,WAAaX,EAAI,EAAIA,GACzDG,SAASQ,GAEf,MAAMC,EACTC,UAAUtB,GAIN,OAHKqB,EAAUE,MAAMC,IAAIxB,IACrBqB,EAAUE,MAAME,IAAIzB,IAAKqB,EAAUK,OAEhCL,EAAUE,MAAMI,IAAI3B,IAK5B,SAAS4B,EAAWC,GACvB,IAAIpB,EAAI,EACJqB,EAAI,KACR,MAAMC,EAAMF,EAAEnB,OACd,KAAOD,EAAIsB,GACPD,EAAS,GAAJA,EAAUD,EAAEG,WAAWvB,KAEhC,OAAOqB,EAEJ,SAASG,EAAW1D,GACvB,OAAW,WAAJA,EAAiB,EAGrB,SAAS2D,EAAiBC,GAC7B,OAAsB,IAAlBA,EAAOzB,OACA,EAEJyB,EAAOC,QAAO,CAACC,EAAIC,KACbD,GAAM,GAAKA,EAAMC,IAwC3B,SAASC,EAAehE,GAC3B,GAAS,MAALA,EACA,OAAO,EAEX,cAAeA,GACX,IAAK,UACD,OAAOA,EAAI,EAAI,EACnB,IAAK,SACD,OAAO0D,EAAW1D,GACtB,IAAK,SACD,OAAOqD,EAAWrD,GACtB,QACI,GAAIK,EAAWL,GACX,OAAOA,EAAEM,cAER,GAAIP,EAAYC,GACjB,OAxBT,SAAmBA,GACtB,MAAMwD,EAAMxD,EAAEmC,OACRyB,EAAS,IAAI3D,MAAMuD,GACzB,IAAK,IAAItB,EAAI,EAAGA,EAAIsB,EAAKtB,IACrB0B,EAAO1B,GAAK8B,EAAehE,EAAEkC,IAEjC,OAAOyB,EAAiBC,GAkBLK,CAAUjE,GAEhB,GAAIA,aAAakE,KAClB,OA9BT,SAAkBlE,GACrB,OAAOA,EAAEmE,UA6BUC,CAASpE,GAEf,GAAIY,OAAOC,eAAeb,GAAGc,cAAgBF,OAAQ,CAGtD,OAAO+C,EADQ/C,OAAOyD,OAAOrE,GAAGsE,KAAKC,GAAMP,EAAeO,MAK1D,OAAOb,EAAWZ,EAAU0B,GAAGxE,KAcxC,SAASyE,EAAgBzE,EAAGW,EAAG+D,GAClC,GAAS,MAAL1E,EACA,OAAY,MAALW,EAEX,GAAS,MAALA,EACA,OAAO,EAEX,GAAIX,EAAEmC,SAAWxB,EAAEwB,OACf,OAAO,EAEX,IAAK,IAAID,EAAI,EAAGA,EAAIlC,EAAEmC,OAAQD,IAC1B,IAAKwC,EAAG1E,EAAEkC,GAAIvB,EAAEuB,IACZ,OAAO,EAGf,OAAO,EAEJ,SAASyC,EAAY3E,EAAGW,GAC3B,OAAO8D,EAAgBzE,EAAGW,EAAGiE,GAiB1B,SAASA,EAAO5E,EAAGW,GACtB,OAAIX,IAAMW,IAGI,MAALX,EACO,MAALW,EAEG,MAALA,IAGa,iBAANX,IA3SpB,SAAqBA,GACjB,MAA2B,mBAAbA,EAAE6E,OA6SPC,CAAY9E,GACVA,EAAE6E,OAAOlE,GAEXZ,EAAYC,GACVD,EAAYY,IAAMgE,EAAY3E,EAAGW,GAEnCX,aAAakE,KACVvD,aAAauD,MAAgC,IAAvBa,EAAa/E,EAAGW,GAGvCC,OAAOC,eAAeb,GAAGc,cAAgBF,QAtCxD,SAAsBZ,EAAGW,GACrB,MAAMqE,EAAQpE,OAAOqE,KAAKjF,GACpBkF,EAAQtE,OAAOqE,KAAKtE,GAC1B,GAAIqE,EAAM7C,SAAW+C,EAAM/C,OACvB,OAAO,EAEX6C,EAAMG,OACND,EAAMC,OACN,IAAK,IAAIjD,EAAI,EAAGA,EAAI8C,EAAM7C,OAAQD,IAC9B,GAAI8C,EAAM9C,KAAOgD,EAAMhD,KAAO0C,EAAO5E,EAAEgF,EAAM9C,IAAKvB,EAAEuE,EAAMhD,KACtD,OAAO,EAGf,OAAO,EAyBuDkD,CAAapF,EAAGW,MAG3E,SAASoE,EAAa/E,EAAGW,GAC5B,IAAI0E,EACAC,EAUJ,MARI,WAAYtF,GAAK,WAAYW,GAC7B0E,EAAQrF,EAAEmE,UACVmB,EAAQ3E,EAAEwD,YAGVkB,EAAQrF,EAAEmE,UAAY7B,EAAWtC,GACjCsF,EAAQ3E,EAAEwD,UAAY7B,EAAW3B,IAE9B0E,IAAUC,EAAQ,EAAKD,EAAQC,GAAQ,EAAK,EAEhD,SAASC,EAAkBvF,EAAGW,GACjC,OAAOX,IAAMW,EAAI,EAAKX,EAAIW,GAAI,EAAK,EAoBhC,SAAS6E,EAAcxF,EAAGW,GAC7B,OAnBG,SAA2BX,EAAGW,EAAG8E,GACpC,GAAS,MAALzF,EACA,OAAY,MAALW,EAAY,EAAI,EAE3B,GAAS,MAALA,EACA,OAAO,EAEX,GAAIX,EAAEmC,SAAWxB,EAAEwB,OACf,OAAOnC,EAAEmC,OAASxB,EAAEwB,QAAS,EAAK,EAEtC,IAAK,IAAID,EAAI,EAAGwD,EAAI,EAAGxD,EAAIlC,EAAEmC,OAAQD,IAEjC,GADAwD,EAAID,EAAKzF,EAAEkC,GAAIvB,EAAEuB,IACP,IAANwD,EACA,OAAOA,EAGf,OAAO,EAGAC,CAAkB3F,EAAGW,EAAGiF,GAwB5B,SAASA,EAAQ5F,EAAGW,GACvB,OAAIX,IAAMW,EACC,EAEG,MAALX,EACO,MAALW,EAAY,GAAI,EAEb,MAALA,EACE,EAEW,iBAANX,EACLA,EAAIW,GAAI,EAAK,EArY5B,SAAsBX,GAClB,MAA8B,mBAAhBA,EAAE6F,UAsYPC,CAAa9F,GACXA,EAAE6F,UAAUlF,GAEdZ,EAAYC,GACVD,EAAYY,GAAK6E,EAAcxF,EAAGW,IAAK,EAEzCX,aAAakE,KACXvD,aAAauD,KAAOa,EAAa/E,EAAGW,IAAK,EAGzCC,OAAOC,eAAeb,GAAGc,cAAgBF,OA7CxD,SAAwBZ,EAAGW,GACvB,MAAMqE,EAAQpE,OAAOqE,KAAKjF,GACpBkF,EAAQtE,OAAOqE,KAAKtE,GAC1B,GAAIqE,EAAM7C,SAAW+C,EAAM/C,OACvB,OAAO6C,EAAM7C,OAAS+C,EAAM/C,QAAS,EAAK,EAE9C6C,EAAMG,OACND,EAAMC,OACN,IAAK,IAAIjD,EAAI,EAAGwD,EAAI,EAAGxD,EAAI8C,EAAM7C,OAAQD,IAAK,CAC1C,MAAM6D,EAAMf,EAAM9C,GAClB,GAAI6D,IAAQb,EAAMhD,GACd,OAAO6D,EAAMb,EAAMhD,IAAK,EAAK,EAI7B,GADAwD,EAAIE,EAAQ5F,EAAE+F,GAAMpF,EAAEoF,IACZ,IAANL,EACA,OAAOA,EAInB,OAAO,EAyBsDM,CAAehG,EAAGW,IAAK,EAGjF,SAASsF,EAAIC,EAAUlG,EAAGW,GAC7B,OAAOuF,EAASlG,EAAGW,GAAK,EAAIX,EAAIW,EAE7B,SAASwF,EAAID,EAAUlG,EAAGW,GAC7B,OAAOuF,EAASlG,EAAGW,GAAK,EAAIX,EAAIW,EA7PpCmC,EAAUE,MAAQ,IAAIoD,QACtBtD,EAAUK,MAAQ,EAyUlB,MAAMkD,EAAU1E,OAAO,WAChB,SAAS2E,EAAQC,EAAOC,GAE3B,GAAS,MAALA,GAAaA,EAAErE,OAAS,EACxB,OAAOqE,EAEX,MAAMC,EAAY,IAAIC,KAClB,IAAIC,EAAMH,EACV,IAAK,IAAItE,EAAI,EAAGA,EAAIqE,EAAOrE,IACvByE,EAAMA,EAAID,EAAKxE,IAEnB,OAAOyE,GAGX,OADAF,EAAUJ,GAAWG,EACdC,EAEX,SAASG,EAAOF,EAAMH,EAAOC,GACzB,OAAQK,GAAkB,IAAVN,EACVC,KAAKE,EAAKI,OAAO,CAACD,KAGlBD,EAAOF,EAAKI,OAAO,CAACD,IAAON,EAAQ,EAAGC,GAEzC,SAASO,EAAMR,EAAOC,GACzB,OAAS,MAALA,GAA0B,IAAbA,EAAErE,OACRqE,EAEFH,KAAWG,EACTA,EAAEH,GAGFO,EAAO,GAAIL,EAAOC,GAQ1B,SAASQ,EAAaT,EAAOC,EAAGE,GACnC,GAAS,MAALF,EAAJ,CAGK,GAAIH,KAAWG,EAAG,CACnBA,EAAIA,EAAEH,GACN,IAAK,IAAInE,EAAI,EAAGA,EAAIwE,EAAKvE,OAAQD,IAC7BsE,EAAIA,EAAEE,EAAKxE,IAEf,OAAOsE,EAGP,OAAOI,EAAOF,EAAMH,EAAOC,IC/gB5B,SAASS,EAASjH,EAAGkH,EAAY,GACpC,GAAS,MAALlH,GAA0B,iBAANA,EAAgB,CACpC,GAA0B,mBAAfA,EAAEqC,SACT,OAAOrC,EAAEqC,WAER,GAAIV,OAAOC,YAAY5B,EACxB,OAxBL,SAAqBmH,GACxB,IAAIhE,EAAQ,EACRf,EAAM,IACV,IAAK,MAAMpC,KAAKmH,EAAM,CAClB,GAAc,IAAVhE,EACAf,GAAO6E,EAASjH,OAEf,CAAA,GAAc,MAAVmD,EAAe,CACpBf,GAAO,QACP,MAGAA,GAAO,KAAO6E,EAASjH,GAE3BmD,IAEJ,OAAOf,EAAM,IAQEgF,CAAYpH,GAElB,CACD,MAAMqH,EAAOzG,OAAOC,eAAeb,GAAGc,YACtC,OAAOuG,IAASzG,QAAUsG,EAAY,GAEhC,KAAOtG,OAAO0G,QAAQtH,GAAGsE,KAAI,EAAEiD,EAAGhD,KAAOgD,EAAI,MAAQN,EAAS1C,EAAG2C,EAAY,KAAIM,KAAK,QAAU,KAChGH,EAAKI,MAGnB,OAAOC,OAAO1H,GAmBX,MAAM2H,EACLF,WACA,OAAOxG,KAAK2G,QAAQ3G,KAAK4G,KAE7BC,SACI,OAA8B,IAAvB7G,KAAK8G,OAAO5F,OAAelB,KAAKwG,KAAO,CAACxG,KAAKwG,MAAMX,OAAO7F,KAAK8G,QAE1E1F,WACI,OAzBD,SAAuBoF,EAAMM,GAChC,GAAsB,IAAlBA,EAAO5F,OACP,OAAOsF,EAEN,CACD,IAAIO,EAAW,GACXC,GAAa,EAQjB,OAPsB,IAAlBF,EAAO5F,QACP6F,EAAWf,EAASc,EAAO,IAC3BE,EAAaD,EAASE,QAAQ,MAAQ,GAGtCF,EAAWD,EAAOzD,KAAKtE,GAAMiH,EAASjH,KAAIwH,KAAK,MAE5CC,GAAQQ,EAAa,KAAO,KAAOD,GAAYC,EAAa,IAAM,KAWlEE,CAAclH,KAAKwG,KAAMxG,KAAK8G,QAEzCzH,cACI,MAAMsD,EAAS3C,KAAK8G,OAAOzD,KAAKtE,GAAMgE,EAAehE,KAErD,OADA4D,EAAOwE,OAAO,EAAG,EAAG1E,EAAWzC,KAAK4G,MAC7BlE,EAAiBC,GAE5BiB,OAAOwD,GACH,OAAIpH,OAASoH,KAGH3H,EAAgBO,KAAMoH,KAGvBpH,KAAK4G,MAAQQ,EAAMR,KACjBlD,EAAY1D,KAAK8G,OAAQM,EAAMN,SAM9ClC,UAAUwC,GACN,OAAIpH,OAASoH,EACF,EAED3H,EAAgBO,KAAMoH,GAGvBpH,KAAK4G,MAAQQ,EAAMR,IACjBrC,EAAcvE,KAAK8G,OAAQM,EAAMN,QAGjC9G,KAAK4G,IAAMQ,EAAMR,KAAM,EAAK,GAN5B,GAUnB,SAASS,EAAanB,GAClB,MAAM1F,EAAI,GACJwD,EAAOrE,OAAOqE,KAAKkC,GACzB,IAAK,IAAIjF,EAAI,EAAGA,EAAI+C,EAAK9C,OAAQD,IAC7BT,EAAEwD,EAAK/C,IAAMiF,EAAKlC,EAAK/C,IAE3B,OAAOT,EAEX,SAAS8G,EAAepB,GACpB,MAAO,KAAOvG,OAAO0G,QAAQH,GAAM7C,KAAI,EAAEiD,EAAGhD,KAAOgD,EAAI,MAAQN,EAAS1C,KAAIiD,KAAK,QAAU,KAE/F,SAASgB,EAAkBrB,GAEvB,OAAOxD,EADQ/C,OAAOyD,OAAO8C,GAAM7C,KAAKC,GAAMP,EAAeO,MAGjE,SAASkE,EAAatB,EAAMkB,GACxB,GAAIlB,IAASkB,EACT,OAAO,EAEN,GAAK3H,EAAgByG,EAAMkB,GAG3B,CACD,MAAMK,EAAY9H,OAAOqE,KAAKkC,GAC9B,IAAK,IAAIjF,EAAI,EAAGA,EAAIwG,EAAUvG,OAAQD,IAClC,IAAK0C,EAAOuC,EAAKuB,EAAUxG,IAAKmG,EAAMK,EAAUxG,KAC5C,OAAO,EAGf,OAAO,EATP,OAAO,EAYf,SAASyG,EAAgBxB,EAAMkB,GAC3B,GAAIlB,IAASkB,EACT,OAAO,EAEN,GAAK3H,EAAgByG,EAAMkB,GAG3B,CACD,MAAMK,EAAY9H,OAAOqE,KAAKkC,GAC9B,IAAK,IAAIjF,EAAI,EAAGA,EAAIwG,EAAUvG,OAAQD,IAAK,CACvC,MAAM0G,EAAShD,EAAQuB,EAAKuB,EAAUxG,IAAKmG,EAAMK,EAAUxG,KAC3D,GAAe,IAAX0G,EACA,OAAOA,EAGf,OAAO,EAVP,OAAO,EAaR,MAAMC,EACTf,SAAW,OAAOQ,EAAarH,MAC/BoB,WAAa,OAAOkG,EAAetH,MACnCX,cAAgB,OAAOkI,EAAkBvH,MACzC4D,OAAOwD,GAAS,OAAOI,EAAaxH,KAAMoH,GAC1CxC,UAAUwC,GAAS,OAAOM,EAAgB1H,KAAMoH,IAE7C,MAAMS,EACThI,YAAYiI,EAAkBC,GACJ,mBAAXA,GACP/H,KAAKgI,OAASF,EACd9H,KAAK+H,OAASA,IAGd/H,KAAKgI,OAAS,IAAMF,EACpB9H,KAAK+H,OAAUzE,IAAQwE,EAAmBxE,IAG9C2E,eACA,OAAOjI,KAAKgI,SAEZC,aAAS3E,GACTtD,KAAK+H,OAAOzE,IAKb,MAAM4E,EACTrI,YAAYsI,GACRnI,KAAKmI,QAAUA,GAMhB,SAASC,EAAuBC,GACnC,OAJwBtJ,EAILsJ,aAHCH,GAAanJ,aAAauB,MAGtB+H,EAAI,IAAI/H,MAAMmG,OAAO4B,IAJ1C,IAAqBtJ,ECpLrB,MAAMuJ,EAAS5H,OAAO,WACtB,SAAS6H,EAAUxJ,GACtB,MAAoB,iBAANA,IAAmBA,MAAAA,OAA6B,EAASA,EAAEuJ,IAUtE,SAASE,EAASzJ,EAAGW,GACxB,MAAiB,iBAANX,EACAA,EAAIW,EAGJX,EAAEuJ,KAAUG,SAAS/I,GAG7B,SAASgJ,EAAQ3J,EAAG4J,GACvB,MAAiB,iBAAN5J,EACAA,EAAE6J,QAAQD,GAGV5J,EAAEuJ,KAAUM,QAAQD,GAG5B,SAASE,EAAY9J,EAAG+J,GAC3B,MAAiB,iBAAN/J,EACAA,EAAEgK,YAAYD,GAGd/J,EAAEuJ,KAAUS,YAAYD,GAGhC,SAASE,EAAcjK,EAAG4J,GAC7B,MAAiB,iBAAN5J,EACAA,EAAEkK,cAAcN,GAGhB5J,EAAEuJ,KAAUW,cAAcN,GAGlC,SAASO,EAAMnK,GAClB,MAAiB,iBAANA,GACCoK,OAAOpK,KAAO,GAAGqC,SAAS,IAG3BrC,EAAEuJ,KAAUc,QC5C3B,IAAIC,EAAI,CACJhK,cAAgB,OAAOqD,EAAiB,CAAC1C,KAAKqC,EAAGrC,KAAKqI,GAAGxC,OAAO7F,KAAKsJ,KACrE1F,OAAO7E,GAAK,OAAQiB,KAAKuJ,IAAIxK,IAC7B6F,UAAU7F,GAAK,OAAOiB,KAAKuJ,IAAIxK,IAC/BuJ,CAACA,KACG,MAAMkB,EAAQxJ,KACd,MAAO,CACHyI,SAAU/I,GAAK8J,EAAMC,IAAI/J,GACzBqJ,YAAaD,GAAMU,EAAMT,YAAYD,GACrCG,cAAeN,GAAMa,EAAMP,cAAcN,GACzCC,QAASD,GAAMa,EAAMZ,QAAQD,GAC7BS,MAAO,KAAOD,OAAOK,KAAW,GAAGpI,SAAS,OAkDuIsI,EAAO,uCA2DtM,SAASC,EAAM5K,EAAG6K,GACd,IAAIvB,EAAGpH,EAAG4I,EACV,IAAKH,EAAQI,KAAKF,GACd,MAAMtJ,MAAMyJ,2BAqBhB,IAlBAhL,EAAEsD,EAAmB,KAAfuH,EAAEI,OAAO,IAAaJ,EAAIA,EAAEK,MAAM,IAAI,GAAM,GAE7C5B,EAAIuB,EAAE3C,QAAQ,OAAQ,IACvB2C,EAAIA,EAAEM,QAAQ,IAAK,MAElBjJ,EAAI2I,EAAEO,OAAM,OAAU,GAEnB9B,EAAI,IACJA,EAAIpH,GACRoH,IAAMuB,EAAEK,MAAMhJ,EAAI,GAClB2I,EAAIA,EAAEQ,UAAU,EAAGnJ,IAEdoH,EAAI,IAETA,EAAIuB,EAAE1I,QAEV2I,EAAKD,EAAE1I,OAEFD,EAAI,EAAGA,EAAIoH,GAAKpH,EAAI4I,GAAqB,KAAfD,EAAEI,OAAO/I,MAClCA,EAIN,GAAIA,GAAK4I,EAEL9K,EAAEuK,EAAI,CAACvK,EAAEsJ,EAAI,QAMb,IAHAtJ,EAAEsJ,EAAIA,EAAIpH,EAAI,EACdlC,EAAEuK,EAAI,GAEDjB,EAAI,EAAGpH,EAAI4I,GACZ9K,EAAEuK,EAAEjB,MAAQuB,EAAEI,OAAO/I,KAQ7B,OADAlC,EAAIsL,EAAMtL,EAAGuL,EAAIC,GAAK,EAAGD,EAAIE,IAWjC,SAASH,EAAMtL,EAAG+J,EAAI2B,EAAIC,GACtB,IAAIC,EAAK5L,EAAEuK,EAGX,GAvHmL,YAqH/KmB,IACAA,EAAKH,EAAIE,IACF,IAAPC,GAAmB,IAAPA,GAAmB,IAAPA,GAAmB,IAAPA,EACpC,MAAMnK,MAxHyFyJ,kCA0HnG,GAAIjB,EAAK,EACL4B,EACW,IAAPD,IAAaC,KAAUC,EAAG,KAAc,IAAP7B,IAAoB,IAAP2B,GAAYE,EAAG,IAAM,GACxD,IAAPF,IAAaE,EAAG,GAAK,GAAe,IAAVA,EAAG,KAAaD,GA7H6H,YA6HrHC,EAAG,MAC7DA,EAAGzJ,OAAS,EACRwJ,GAEA3L,EAAEsJ,EAAItJ,EAAEsJ,EAAIS,EAAK,EACjB6B,EAAG,GAAK,GAIRA,EAAG,GAAK5L,EAAEsJ,EAAI,OAGjB,GAAIS,EAAK6B,EAAGzJ,OAAQ,CAErB,MAAM0J,EAASD,EAAGE,WAAU,CAACC,EAAKC,IAAQA,GAAOjC,GAAMgC,EAAM,IAAK,EASlE,GARAJ,EACW,IAAPD,GAAYE,EAAG7B,IAAO,GACX,IAAP2B,IAAaE,EAAG7B,GAAM,GAAgB,IAAX6B,EAAG7B,KACzB4B,GA/IkK,YA+I1JC,EAAG7B,EAAK,IAAiC,EAAb6B,EAAG7B,EAAK,MAC1C,IAAP2B,IAAaC,IAASE,GAE9BD,EAAGzJ,OAAS4H,IAER4B,EAEA,OAASC,EAAG7B,GAAM,GACd6B,EAAG7B,GAAM,EACJA,QACC/J,EAAEsJ,EACJsC,EAAGK,QAAQ,IAKvB,IAAKlC,EAAK6B,EAAGzJ,QAASyJ,IAAK7B,IACvB6B,EAAGM,MAEX,OAAOlM,EAMX,SAASmM,EAAUnM,EAAGoM,EAAeC,GACjC,IAAI/C,EAAItJ,EAAEsJ,EAAGhG,EAAItD,EAAEuK,EAAE/C,KAAK,IAAKqD,EAAIvH,EAAEnB,OAErC,GAAIiK,EACA9I,EAAIA,EAAE2H,OAAO,IAAMJ,EAAI,EAAI,IAAMvH,EAAE4H,MAAM,GAAK,KAAO5B,EAAI,EAAI,IAAM,MAAQA,OAG1E,GAAIA,EAAI,EAAG,CACZ,OAASA,GACLhG,EAAI,IAAMA,EACdA,EAAI,KAAOA,OAEV,GAAIgG,EAAI,EACT,KAAMA,EAAIuB,EACN,IAAKvB,GAAKuB,EAAGvB,KACThG,GAAK,SAEJgG,EAAIuB,IACTvH,EAAIA,EAAE4H,MAAM,EAAG5B,GAAK,IAAMhG,EAAE4H,MAAM5B,SAGjCuB,EAAI,IACTvH,EAAIA,EAAE2H,OAAO,GAAK,IAAM3H,EAAE4H,MAAM,IAEpC,OAAOlL,EAAEsD,EAAI,GAAK+I,EAAY,IAAM/I,EAAIA,EAM5CgH,EAAEgC,IAAM,WACJ,IAAItM,EAAI,IAAIiB,KAAKH,YAAYG,MAE7B,OADAjB,EAAEsD,EAAI,EACCtD,GAOXsK,EAAEE,IAAM,SAAU7J,GACd,IAAI4L,EAAOhB,EAAMtK,KAAKH,YAAad,EAAI,IAAIuL,EAAItK,MAAuB2K,GAAhBjL,EAAI,IAAI4K,EAAI5K,GAASX,EAAEuK,GAAGiC,EAAK7L,EAAE4J,EAAGrI,EAAIlC,EAAEsD,EAAGoC,EAAI/E,EAAE2C,EAAGiE,EAAIvH,EAAEsJ,EAAGmD,EAAI9L,EAAE2I,EAE3H,IAAKsC,EAAG,KAAOY,EAAG,GACd,OAAQZ,EAAG,GAAuB1J,EAAjBsK,EAAG,IAAU9G,EAAL,EAE7B,GAAIxD,GAAKwD,EACL,OAAOxD,EAGX,GAFAqK,EAAQrK,EAAI,EAERqF,GAAKkF,EACL,OAAOlF,EAAIkF,EAAIF,EAAQ,GAAI,EAG/B,IADA7G,EAAIgH,KAAKC,IAAIf,EAAGzJ,OAAQqK,EAAGrK,QACtBD,EAAI,EAAGA,EAAIwD,EAAGxD,IAGf,IAFAqF,EAAIrF,EAAI0J,EAAGzJ,OAASyJ,EAAG1J,GAAK,KAC5BuK,EAAIvK,EAAIsK,EAAGrK,OAASqK,EAAGtK,GAAK,GAExB,OAAOqF,EAAIkF,EAAIF,EAAQ,GAAI,EAEnC,OAAO,GAcXjC,EAAEsC,IAAM,SAAUjM,GACd,IAAI4K,EAAMtK,KAAKH,YAAad,EAAI,IAAIuL,EAAItK,MAAuB4L,GAAhBlM,EAAI,IAAI4K,EAAI5K,GAAQX,EAAEuK,GACrEuC,EAAInM,EAAE4J,EACNhD,EAAIvH,EAAEsD,GAAK3C,EAAE2C,EAAI,GAAI,EAAIsG,EAAK2B,EAAIC,GAClC,GAAI5B,MAASA,GAAMA,EAAK,GAAKA,EA7QxB,IA8QD,MAAMrI,MAvPgDyJ,mCA0P1D,IAAK8B,EAAE,GACH,MAAMvL,MA3PkIwL,6BA8P5I,IAAKF,EAAE,GAGH,OAFAlM,EAAE2C,EAAIiE,EACN5G,EAAE4J,EAAI,CAAC5J,EAAE2I,EAAI,GACN3I,EAEX,IAAIqM,EAAIC,EAAIpC,EAAGL,EAAK0C,EAAIC,EAAKL,EAAE5B,QAASkC,EAAKJ,EAAKF,EAAE3K,OAAQkL,EAAKR,EAAE1K,OAAQmL,EAAIT,EAAE3B,MAAM,EAAG8B,GAC1FO,EAAKD,EAAEnL,OAAQqL,EAAI7M,EACnB8M,EAAKD,EAAEjD,EAAI,GAAImD,EAAK,EAAGC,EAAI/D,GAAM4D,EAAElE,EAAItJ,EAAEsJ,EAAI3I,EAAE2I,GAAK,EAMpD,IALAkE,EAAElK,EAAIiE,EACNA,EAAIoG,EAAI,EAAI,EAAIA,EAEhBR,EAAGlB,QAAQ,GAEJsB,IAAOP,GACVM,EAAEM,KAAK,GACX,EAAG,CAEC,IAAK/C,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAErB,GAAImC,IAAOO,EAAKD,EAAEnL,QACdqI,EAAMwC,EAAKO,EAAK,GAAI,OAGpB,IAAKL,GAAK,EAAI1C,EAAM,IAAK0C,EAAKF,GAC1B,GAAIF,EAAEI,IAAOI,EAAEJ,GAAK,CAChB1C,EAAMsC,EAAEI,GAAMI,EAAEJ,GAAM,GAAI,EAC1B,MAKZ,KAAI1C,EAAM,GAiBN,MAdA,IAAKyC,EAAKM,GAAMP,EAAKF,EAAIK,EAAII,GAAK,CAC9B,GAAID,IAAIC,GAAMN,EAAGM,GAAK,CAElB,IADAL,EAAKK,EACEL,IAAOI,IAAIJ,IACdI,EAAEJ,GAAM,IACVI,EAAEJ,GACJI,EAAEC,IAAO,GAEbD,EAAEC,IAAON,EAAGM,GAEhB,MAAQD,EAAE,IACNA,EAAEO,QAOdJ,EAAGC,KAAQlD,EAAMK,IAAMA,EAEnByC,EAAE,IAAM9C,EACR8C,EAAEC,GAAMV,EAAEO,IAAO,EAEjBE,EAAI,CAACT,EAAEO,WACLA,IAAOC,GAxTkK,YAwT5JC,EAAE,KAAqB/F,KAW9C,OATKkG,EAAG,IAAY,GAANC,IAEVD,EAAGI,QACHL,EAAElE,IACFqE,KAGAD,EAAKC,GACLrC,EAAMkC,EAAGG,EAAGpC,EAAIE,GAlU+J,YAkU3J6B,EAAE,IACnBE,GAKXlD,EAAE5F,GAAK,SAAU/D,GACb,OAAuB,IAAhBM,KAAKuJ,IAAI7J,IAMpB2J,EAAEwD,GAAK,SAAUnN,GACb,OAAOM,KAAKuJ,IAAI7J,GAAK,GAMzB2J,EAAEyD,IAAM,SAAUpN,GACd,OAAOM,KAAKuJ,IAAI7J,IAAK,GAKzB2J,EAAE0D,GAAK,SAAUrN,GACb,OAAOM,KAAKuJ,IAAI7J,GAAK,GAMzB2J,EAAE2D,IAAM,SAAUtN,GACd,OAAOM,KAAKuJ,IAAI7J,GAAK,GAKzB2J,EAAE4D,MAAQ5D,EAAE6D,IAAM,SAAUxN,GACxB,IAAIuB,EAAGwD,EAAG0I,EAAGC,EAAM9C,EAAMtK,KAAKH,YAAad,EAAI,IAAIuL,EAAItK,MAAuB4L,GAAhBlM,EAAI,IAAI4K,EAAI5K,GAAQX,EAAEsD,GAAGwJ,EAAInM,EAAE2C,EAE7F,GAAIuJ,GAAKC,EAEL,OADAnM,EAAE2C,GAAKwJ,EACA9M,EAAEsO,KAAK3N,GAElB,IAAIiL,EAAK5L,EAAEuK,EAAEW,QAASqD,EAAKvO,EAAEsJ,EAAGkD,EAAK7L,EAAE4J,EAAGiE,EAAK7N,EAAE2I,EAEjD,IAAKsC,EAAG,KAAOY,EAAG,GAUd,OATIA,EAAG,GACH7L,EAAE2C,GAAKwJ,EAEFlB,EAAG,GACRjL,EAAI,IAAI4K,EAAIvL,GAGZW,EAAE2C,EAAI,EAEH3C,EAGX,GAAIkM,EAAI0B,EAAKC,EAAI,CAUb,KATIH,EAAOxB,EAAI,IACXA,GAAKA,EACLuB,EAAIxC,IAGJ4C,EAAKD,EACLH,EAAI5B,GAER4B,EAAEK,UACG3B,EAAID,EAAGC,KACRsB,EAAER,KAAK,GACXQ,EAAEK,eAKF,IADA/I,IAAM2I,EAAOzC,EAAGzJ,OAASqK,EAAGrK,QAAUyJ,EAAKY,GAAIrK,OAC1C0K,EAAIC,EAAI,EAAGA,EAAIpH,EAAGoH,IACnB,GAAIlB,EAAGkB,IAAMN,EAAGM,GAAI,CAChBuB,EAAOzC,EAAGkB,GAAKN,EAAGM,GAClB,MAeZ,GAVIuB,IACAD,EAAIxC,EACJA,EAAKY,EACLA,EAAK4B,EACLzN,EAAE2C,GAAK3C,EAAE2C,IAMRwJ,GAAKpH,EAAI8G,EAAGrK,SAAWD,EAAI0J,EAAGzJ,SAAW,EAC1C,KAAO2K,KACHlB,EAAG1J,KAAO,EAElB,IAAK4K,EAAI5K,EAAGwD,EAAImH,GAAI,CAChB,GAAIjB,IAAKlG,GAAK8G,EAAG9G,GAAI,CACjB,IAAKxD,EAAIwD,EAAGxD,IAAM0J,IAAK1J,IACnB0J,EAAG1J,GAAK,IACV0J,EAAG1J,GACL0J,EAAGlG,IAAM,GAEbkG,EAAGlG,IAAM8G,EAAG9G,GAGhB,KAAmB,IAAZkG,IAAKkB,IACRlB,EAAGM,MAEP,KAAiB,IAAVN,EAAG,IACNA,EAAGiC,UACDW,EAUN,OARK5C,EAAG,KAEJjL,EAAE2C,EAAI,EAENsI,EAAK,CAAC4C,EAAK,IAEf7N,EAAE4J,EAAIqB,EACNjL,EAAE2I,EAAIkF,EACC7N,GAKX2J,EAAEoE,IAAM,SAAU/N,GACd,IAAIgO,EAAMpD,EAAMtK,KAAKH,YAAad,EAAI,IAAIuL,EAAItK,MAAuB4L,GAAhBlM,EAAI,IAAI4K,EAAI5K,GAAQX,EAAEsD,GAAGwJ,EAAInM,EAAE2C,EACpF,IAAK3C,EAAE4J,EAAE,GACL,MAAMhJ,MAvckIwL,6BA6c5I,OAJA/M,EAAEsD,EAAI3C,EAAE2C,EAAI,EACZqL,EAAmB,GAAZhO,EAAE6J,IAAIxK,GACbA,EAAEsD,EAAIuJ,EACNlM,EAAE2C,EAAIwJ,EACF6B,EACO,IAAIpD,EAAIvL,IACnB6M,EAAItB,EAAIC,GACRsB,EAAIvB,EAAIE,GACRF,EAAIC,GAAKD,EAAIE,GAAK,EAClBzL,EAAIA,EAAE4M,IAAIjM,GACV4K,EAAIC,GAAKqB,EACTtB,EAAIE,GAAKqB,EACF7L,KAAKiN,MAAMlO,EAAE4O,MAAMjO,MAK9B2J,EAAEgE,KAAOhE,EAAEuE,IAAM,SAAUlO,GACvB,IAAI2I,EAAG/B,EAAG6G,EAAG7C,EAAMtK,KAAKH,YAAad,EAAI,IAAIuL,EAAItK,MAAON,EAAI,IAAI4K,EAAI5K,GAEpE,GAAIX,EAAEsD,GAAK3C,EAAE2C,EAET,OADA3C,EAAE2C,GAAK3C,EAAE2C,EACFtD,EAAEkO,MAAMvN,GAEnB,IAAI4N,EAAKvO,EAAEsJ,EAAGsC,EAAK5L,EAAEuK,EAAGiE,EAAK7N,EAAE2I,EAAGkD,EAAK7L,EAAE4J,EAEzC,IAAKqB,EAAG,KAAOY,EAAG,GASd,OARKA,EAAG,KACAZ,EAAG,GACHjL,EAAI,IAAI4K,EAAIvL,GAGZW,EAAE2C,EAAItD,EAAEsD,GAGT3C,EAKX,GAHAiL,EAAKA,EAAGV,QAGJ5B,EAAIiF,EAAKC,EAAI,CAUb,IATIlF,EAAI,GACJkF,EAAKD,EACLH,EAAI5B,IAGJlD,GAAKA,EACL8E,EAAIxC,GAERwC,EAAEK,UACKnF,KACH8E,EAAER,KAAK,GACXQ,EAAEK,UAUN,IAPI7C,EAAGzJ,OAASqK,EAAGrK,OAAS,IACxBiM,EAAI5B,EACJA,EAAKZ,EACLA,EAAKwC,GAET9E,EAAIkD,EAAGrK,OAEFoF,EAAI,EAAG+B,EAAGsC,EAAGtC,IAAM,GACpB/B,GAAKqE,IAAKtC,GAAKsC,EAAGtC,GAAKkD,EAAGlD,GAAK/B,GAAK,GAAK,EAO7C,IALIA,IACAqE,EAAGK,QAAQ1E,KACTiH,GAGDlF,EAAIsC,EAAGzJ,OAAoB,IAAZyJ,IAAKtC,IACrBsC,EAAGM,MAGP,OAFAvL,EAAE4J,EAAIqB,EACNjL,EAAE2I,EAAIkF,EACC7N,GASX2J,EAAEwE,IAAM,SAAUjE,GACd,IAAIU,EAAMtK,KAAKH,YAAad,EAAI,IAAIuL,EAAItK,MAAON,EAAI,IAAI4K,EAAI,KAAMwD,EAAM,IAAIxD,EAAI,KAAMgB,EAAQ1B,EAAI,EACjG,GAAIA,MAAQA,GAAKA,GAnjBT,KAmjB2BA,EAnjB3B,IAojBJ,MAAMtJ,MAAMyJ,6BAIhB,IAFIuB,IACA1B,GAAKA,GAEG,EAAJA,IACAlK,EAAIA,EAAEiO,MAAM5O,IAChB6K,IAAM,GAGN7K,EAAIA,EAAE4O,MAAM5O,GAEhB,OAAOuM,EAAQwC,EAAInC,IAAIjM,GAAKA,GAShC2J,EAAE0E,KAAO,SAAUjF,EAAI2B,GACnB,GAAI3B,MAASA,GAAMA,EAAK,GAAKA,EA5kBxB,IA6kBD,MAAMxI,MAAMyJ,8BAEhB,OAAOM,EAAM,IAAIrK,KAAKH,YAAYG,MAAO8I,EAAI2B,IAWjDpB,EAAE2E,MAAQ,SAAUrF,EAAI8B,GACpB,GApkBmL,YAokB/K9B,EACAA,EAAK,OACJ,GAAIA,MAASA,GAAMA,GA7lBnB,KA6lBmCA,EA7lBnC,IA8lBD,MAAMrI,MAvkBgDyJ,mCAykB1D,OAAOM,EAAM,IAAIrK,KAAKH,YAAYG,MAAO2I,EAAK3I,KAAKqI,EAAI,EAAGoC,IAM9DpB,EAAE4E,KAAO,WACL,IAAI5B,EAAG/C,EAAG6D,EAAG7C,EAAMtK,KAAKH,YAAad,EAAI,IAAIuL,EAAItK,MAAOqC,EAAItD,EAAEsD,EAAGgG,EAAItJ,EAAEsJ,EAAG6F,EAAO,IAAI5D,EAAI,OAEzF,IAAKvL,EAAEuK,EAAE,GACL,OAAO,IAAIgB,EAAIvL,GAEnB,GAAIsD,EAAI,EACJ,MAAM/B,MAAMwL,2BAMN,KAHVzJ,EAAIoJ,KAAKwC,KAAKlP,EAAI,MAGHsD,IAAM,EAAA,IACjBiH,EAAIvK,EAAEuK,EAAE/C,KAAK,KACLrF,OAASmH,EAAI,IACjBiB,GAAK,KAETjB,IAAMA,EAAI,GAAK,EAAI,IAAMA,EAAI,GAAS,EAAJA,GAClCgE,EAAI,IAAI/B,IAFRjI,EAAIoJ,KAAKwC,KAAK3E,KAEI,EAAA,EAAQ,MAAQjH,EAAIA,EAAE4G,iBAAiBgB,MAAM,EAAG5H,EAAE4E,QAAQ,KAAO,IAAMoB,IAGzFgE,EAAI,IAAI/B,EAAIjI,EAAI,IAEpBgG,EAAIgE,EAAEhE,GAAKiC,EAAIC,IAAM,GAErB,GACI4C,EAAId,EACJA,EAAI6B,EAAKP,MAAMR,EAAEE,KAAKtO,EAAE4M,IAAIwB,WACvBA,EAAE7D,EAAEW,MAAM,EAAG5B,GAAG9B,KAAK,MAAQ8F,EAAE/C,EAAEW,MAAM,EAAG5B,GAAG9B,KAAK,KAC3D,OAAO8D,EAAMgC,GAAI/B,EAAIC,IAAM,GAAK8B,EAAEhE,EAAI,EAAGiC,EAAIE,KAKjDnB,EAAEsE,MAAQtE,EAAEI,IAAM,SAAU/J,GACxB,IAAI4J,EAAGgB,EAAMtK,KAAKH,YAAad,EAAI,IAAIuL,EAAItK,MAAuB2K,GAAhBjL,EAAI,IAAI4K,EAAI5K,GAASX,EAAEuK,GAAGiC,EAAK7L,EAAE4J,EAAGsC,EAAIjB,EAAGzJ,OAAQ2K,EAAIN,EAAGrK,OAAQD,EAAIlC,EAAEsJ,EAAG5D,EAAI/E,EAAE2I,EAInI,GAFA3I,EAAE2C,EAAItD,EAAEsD,GAAK3C,EAAE2C,EAAI,GAAI,GAElBsI,EAAG,KAAOY,EAAG,GAEd,OADA7L,EAAE4J,EAAI,CAAC5J,EAAE2I,EAAI,GACN3I,EAcX,IAXAA,EAAE2I,EAAIpH,EAAIwD,EAENmH,EAAIC,IACJvC,EAAIqB,EACJA,EAAKY,EACLA,EAAKjC,EACL7E,EAAImH,EACJA,EAAIC,EACJA,EAAIpH,GAGH6E,EAAI,IAAItK,MAAMyF,EAAImH,EAAIC,GAAIpH,KAC3B6E,EAAE7E,GAAK,EAGX,IAAKxD,EAAI4K,EAAG5K,KAAM,CAGd,IAFA4K,EAAI,EAECpH,EAAImH,EAAI3K,EAAGwD,EAAIxD,GAEhB4K,EAAIvC,EAAE7E,GAAK8G,EAAGtK,GAAK0J,EAAGlG,EAAIxD,EAAI,GAAK4K,EACnCvC,EAAE7E,KAAOoH,EAAI,GAEbA,EAAIA,EAAI,GAAK,EAEjBvC,EAAE7E,GAAKoH,EAQX,IALIA,IACEnM,EAAE2I,EAEJiB,EAAEsD,QAED3L,EAAIqI,EAAEpI,QAASoI,IAAIrI,IACpBqI,EAAE2B,MAEN,OADAvL,EAAE4J,EAAIA,EACC5J,GASX2J,EAAEJ,cAAgB,SAAUN,EAAI8B,GAC5B,IAAI1L,EAAIiB,KAAM4J,EAAI7K,EAAEuK,EAAE,GACtB,GA3qBmL,YA2qB/KX,EAAkB,CAClB,GAAIA,MAASA,GAAMA,EAAK,GAAKA,EAnsB5B,IAosBG,MAAMrI,MA7qB4CyJ,mCAgrBtD,IADAhL,EAAIsL,EAAM,IAAItL,EAAEc,YAAYd,KAAM4J,EAAI8B,GAC/B1L,EAAEuK,EAAEpI,OAASyH,GAChB5J,EAAEuK,EAAEqD,KAAK,GAEjB,OAAOzB,EAAUnM,GAAG,IAAQ6K,IAYhCP,EAAET,QAAU,SAAUD,EAAI8B,GACtB,IAAI1L,EAAIiB,KAAM4J,EAAI7K,EAAEuK,EAAE,GACtB,GAjsBmL,YAisB/KX,EAAkB,CAClB,GAAIA,MAASA,GAAMA,EAAK,GAAKA,EAztB5B,IA0tBG,MAAMrI,MAnsB4CyJ,mCAusBtD,IAAKpB,EAAKA,GAFV5J,EAAIsL,EAAM,IAAItL,EAAEc,YAAYd,GAAI4J,EAAK5J,EAAEsJ,EAAI,EAAGoC,IAE7BpC,EAAI,EAAGtJ,EAAEuK,EAAEpI,OAASyH,GACjC5J,EAAEuK,EAAEqD,KAAK,GAEjB,OAAOzB,EAAUnM,GAAG,IAAS6K,IAQjCP,EAAExC,OAASwC,EAAEjI,SAAW,WACpB,IAAIrC,EAAIiB,KAAMsK,EAAMvL,EAAEc,YACtB,OAAOqL,EAAUnM,EAAGA,EAAEsJ,GAAKiC,EAAI6D,IAAMpP,EAAEsJ,GAAKiC,EAAI8D,KAAMrP,EAAEuK,EAAE,KAK9DD,EAAEgF,SAAW,WACT,IAAIzE,EAAIT,OAAO+B,EAAUlL,MAAM,GAAM,IACrC,IAAgC,IAA5BA,KAAKH,YAAYyO,SAAoBtO,KAAKyD,GAAGmG,EAAExI,YAC/C,MAAMd,MAAMwL,iCAEhB,OAAOlC,GAWXP,EAAEN,YAAc,SAAUD,EAAI2B,GAC1B,IAAI1L,EAAIiB,KAAMsK,EAAMvL,EAAEc,YAAa+J,EAAI7K,EAAEuK,EAAE,GAC3C,GA3uBmL,YA2uB/KR,EAAkB,CAClB,GAAIA,MAASA,GAAMA,EAAK,GAAKA,EAnwB5B,IAowBG,MAAMxI,MAAMyJ,8BAGhB,IADAhL,EAAIsL,EAAM,IAAIC,EAAIvL,GAAI+J,EAAI2B,GACnB1L,EAAEuK,EAAEpI,OAAS4H,GAChB/J,EAAEuK,EAAEqD,KAAK,GAEjB,OAAOzB,EAAUnM,EAAG+J,GAAM/J,EAAEsJ,GAAKtJ,EAAEsJ,GAAKiC,EAAI6D,IAAMpP,EAAEsJ,GAAKiC,EAAI8D,KAAMxE,IAQvEP,EAAEkF,QAAU,WACR,IAAIxP,EAAIiB,KAAMsK,EAAMvL,EAAEc,YACtB,IAAmB,IAAfyK,EAAIgE,OACJ,MAAMhO,MAAMwL,+BAEhB,OAAOZ,EAAUnM,EAAGA,EAAEsJ,GAAKiC,EAAI6D,IAAMpP,EAAEsJ,GAAKiC,EAAI8D,IAAI,IAGjD,IAAI9D,EA/vBX,SAASkE,IAOL,SAASlE,EAAIV,GACT,IAAI7K,EAAIiB,KAER,KAAMjB,aAAauL,GACf,OAf2K,YAepKV,EAAkB4E,IAAU,IAAIlE,EAAIV,GAE/C,GAAIA,aAAaU,EACbvL,EAAEsD,EAAIuH,EAAEvH,EACRtD,EAAEsJ,EAAIuB,EAAEvB,EACRtJ,EAAEuK,EAAIM,EAAEN,EAAEW,QAyBtB,SAAmBwE,GAEf,GAAIA,EAAEnF,EAAEpI,OAAS,IAAMuN,EAAEnF,EAAE,GAAI,CAC3B,IAAIrI,EAAIwN,EAAEnF,EAAEuB,WAAU9L,GAAKA,IAC3B0P,EAAEnF,EAAImF,EAAEnF,EAAEW,MAAMhJ,GAChBwN,EAAEpG,EAAIoG,EAAEpG,EAAIpH,GA7BRyN,CAAU3P,OAET,CACD,GAAiB,iBAAN6K,EAAgB,CACvB,IAAmB,IAAfU,EAAIgE,OACJ,MAAMK,UAAU5E,2BAGpBH,EAAU,IAANA,GAAW,EAAIA,EAAI,EAAI,KAAOnD,OAAOmD,GAE7CD,EAAM5K,EAAG6K,GAIb7K,EAAEc,YAAcyK,EAQpB,OANAA,EAAIsE,UAAYvF,EAChBiB,EAAIC,GAxEC,GAyELD,EAAIE,GAhEH,EAiEDF,EAAI6D,IAvDH,GAwDD7D,EAAI8D,GAlDH,GAmDD9D,EAAIgE,OA7CC,MA8CEhE,EAwtBMkE,GAEjBK,GAAevE,ECp0BS,IAAIuE,GAAQ,GACb,IAAIA,GAAQ,GACP,IAAIA,IAAQ,GACZ,IAAIA,GAAQ,iCACZ,IAAIA,GAAQ,kCCNjC,IAAIC,GAgHJ,SAASC,GAAuBhQ,GACnC,OAAa,aAANA,EAAoBA,GAAKA,GAhHnC,SAAU+P,GAWPA,EAAaA,EAAgC,kBAAI,KAAO,oBAX3D,CAsBEA,KAAiBA,GAAe,KCjBnC,IAAIE,GAAO,KACX,IACIA,GAAO,IAAIC,YAAYC,SAAS,IAAID,YAAYE,OAAO,IAAIC,WAAW,CAClE,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,MACznC,IAAIC,QAEb,MAAOhH,IAaA,SAASiH,GAAKC,EAAKC,EAAMC,GAK5BzP,KAAKuP,IAAY,EAANA,EAKXvP,KAAKwP,KAAc,EAAPA,EAKZxP,KAAKyP,WAAaA,EAoDf,SAASC,GAAOC,GACnB,OAAsC,KAA9BA,GAAOA,EAAgB,YAnDnCL,GAAKV,UAAUvP,YAAc,WACzB,IAAIwD,EAAK7C,KAAKyP,SAAW,EAAI,EAG7B,OAFA5M,GAAOA,GAAM,GAAKA,EAAM7C,KAAKwP,KAC7B3M,GAAOA,GAAM,GAAKA,EAAM7C,KAAKuP,IACtB1M,GAEXyM,GAAKV,UAAUhL,OAAS,SAAU7E,GAAK,OAAO6Q,GAAO5P,KAAMjB,IAC3DuQ,GAAKV,UAAUhK,UAAY,SAAU7F,GAAK,OAAO8Q,GAAQ7P,KAAMjB,IAC/DuQ,GAAKV,UAAUxN,SAAW,SAAUQ,GAAS,OAAOkO,GAAS9P,KAAM4B,IACnE0N,GAAKV,UAAU/H,OAAS,WAAc,OAAOiJ,GAAS9P,OACtDsP,GAAKV,UAAUtG,GAAU,WACrB,MAAMvJ,EAAIiB,KACV,MAAO,CACHyI,SAAU/I,GAAKqQ,GAAShR,EAAGW,GAC3BqJ,YAAaD,GAAMrC,OAAO1H,IAAM,GAAGgK,YAAYD,GAAIkH,OAAO,GAC1D/G,cAAeN,GAAMlC,OAAO1H,IAAM,GAAGkK,cAAcN,GAAIqH,OAAO,GAC9DpH,QAASD,GAAMlC,OAAO1H,IAAM,GAAG6J,QAAQD,GAAIqH,OAAO,GAClD5G,MAAO,IAAM0G,GAAS/Q,EAAE0Q,SAAW1Q,EAAIkR,GAAUC,GAAQnR,IAAI,GAAO,MAyB5EuQ,GAAKV,UAAUuB,WACfxQ,OAAOyQ,eAAed,GAAKV,UAAW,aAAc,CAAExO,OAAO,IAsB7D,IAAIiQ,GAAY,GAMZC,GAAa,GAOV,SAASC,GAAQnQ,EAAOqP,GAC3B,IAAIE,EAAKa,EAAWC,EACpB,OAAIhB,GAEIgB,EAAS,IADbrQ,KAAW,IACgBA,EAAQ,OAC/BoQ,EAAYF,GAAWlQ,IAEZoQ,GAEfb,EAAMe,GAAStQ,GAAgB,EAARA,GAAa,GAAI,EAAK,GAAG,GAC5CqQ,IACAH,GAAWlQ,GAASuP,GACjBA,IAIHc,GAAS,MADbrQ,GAAS,IACqBA,EAAQ,OAClCoQ,EAAYH,GAAUjQ,IAEXoQ,GAEfb,EAAMe,GAAStQ,EAAOA,EAAQ,GAAI,EAAK,GAAG,GACtCqQ,IACAJ,GAAUjQ,GAASuP,GAChBA,GAiBR,SAASgB,GAAWvQ,EAAOqP,GAC9B,GAAImB,MAAMxQ,GACN,OAAOqP,EAAWoB,GAAQC,GAC9B,GAAIrB,EAAU,CACV,GAAIrP,EAAQ,EACR,OAAOyQ,GACX,GAAIzQ,GAAS2Q,GACT,OAAOC,OAEV,CACD,GAAI5Q,IAAU6Q,GACV,OAAOC,GACX,GAAI9Q,EAAQ,GAAK6Q,GACb,OAAOE,GAEf,OAAI/Q,EAAQ,EACDgR,GAAOT,IAAYvQ,EAAOqP,IAC9BiB,GAAUtQ,EAAQiR,GAAkB,EAAIjR,EAAQiR,GAAkB,EAAG5B,GAiBzE,SAASiB,GAASY,EAASC,EAAU9B,GACxC,OAAO,IAAIH,GAAKgC,EAASC,EAAU9B,GAmBvC,IAAI+B,GAAU/F,KAAKoC,IAQZ,SAAS4D,GAAWtQ,EAAKsO,EAAU7N,GACtC,GAAmB,IAAfT,EAAID,OACJ,MAAMZ,MAAM,gBAChB,GAAY,QAARa,GAAyB,aAARA,GAA8B,cAARA,GAA+B,cAARA,EAC9D,OAAO2P,GAUX,GATwB,iBAAbrB,GAEP7N,EAAQ6N,EACJA,GAAW,GAGfA,IAAaA,GAEjB7N,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAM8P,WAAW,SACrB,IAAIhF,EAAIvL,EAAI8F,QAAQ,KACpB,GAAIyF,EAAI,EACJ,MAAMpM,MAAM,mBACX,GAAU,IAANoM,EACL,OAAO0E,GAAOK,GAAWtQ,EAAIiJ,UAAU,GAAIqF,EAAU7N,IAMzD,IAFA,IAAI+P,EAAehB,GAAWa,GAAQ5P,EAAO,IACzC+F,EAASmJ,GACJ7P,EAAI,EAAGA,EAAIE,EAAID,OAAQD,GAAK,EAAG,CACpC,IAAI2Q,EAAOnG,KAAKoG,IAAI,EAAG1Q,EAAID,OAASD,GAAIb,EAAQ0R,SAAS3Q,EAAIiJ,UAAUnJ,EAAGA,EAAI2Q,GAAOhQ,GACrF,GAAIgQ,EAAO,EAEPjK,EAASoK,GAAIhC,GAASpI,EADVgJ,GAAWa,GAAQ5P,EAAOgQ,KACAjB,GAAWvQ,SAIjDuH,EAASoK,GADTpK,EAASoI,GAASpI,EAAQgK,GACLhB,GAAWvQ,IAIxC,OADAuH,EAAO8H,SAAWA,EACX9H,EAkBJ,SAASqK,GAAUC,EAAKxC,GAC3B,MAAmB,iBAARwC,EACAtB,GAAWsB,EAAKxC,GACR,iBAARwC,EACAR,GAAWQ,EAAKxC,GAEpBiB,GAASuB,EAAI1C,IAAK0C,EAAIzC,KAA0B,kBAAbC,EAAyBA,EAAWwC,EAAIxC,UAiBtF,IAYI4B,GAAiBa,WAMjBnB,GAAiBM,GAAiBA,GAMlCJ,GAAiBF,GAAiB,EAMlCoB,GAAa5B,GAxBI,UA6BVO,GAAOP,GAAQ,GAUfM,GAAQN,GAAQ,GAAG,GAUnB6B,GAAM7B,GAAQ,GAUd8B,GAAO9B,GAAQ,GAAG,GAUlB+B,GAAU/B,IAAQ,GAUlBY,GAAYT,IAAS,EAAgB,YAAgB,GAUrDM,GAAqBN,IAAS,GAAgB,GAAgB,GAU9DQ,GAAYR,GAAS,GAAG,YAAgB,GAgB5C,SAAS6B,GAAMC,GAClB,OAAOA,EAAM/C,SAAW+C,EAAMjD,MAAQ,EAAIiD,EAAMjD,IAQ7C,SAASkD,GAASD,GACrB,OAAIA,EAAM/C,UACG+C,EAAMhD,OAAS,GAAK6B,IAAmBmB,EAAMjD,MAAQ,GAC3DiD,EAAMhD,KAAO6B,IAAkBmB,EAAMjD,MAAQ,GAWjD,SAASO,GAAS0C,EAAO5Q,GAE5B,IADAA,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAM8P,WAAW,SACrB,GAAIgB,GAAOF,GACP,MAAO,IACX,GAAIG,GAAWH,GAAQ,CACnB,GAAI5C,GAAO4C,EAAOtB,IAAY,CAG1B,IAAI0B,EAAYjC,GAAW/O,GAAQ+J,EAAMkH,GAAOL,EAAOI,GAAYE,EAAOC,GAAShD,GAASpE,EAAKiH,GAAYJ,GAC7G,OAAO1C,GAASnE,EAAK/J,GAAS2Q,GAAMO,GAAM1R,SAASQ,GAGnD,MAAO,IAAMkO,GAASsB,GAAOoB,GAAQ5Q,GAM7C,IAFA,IAAI+P,EAAehB,GAAWa,GAAQ5P,EAAO,GAAI4Q,EAAM/C,UAAWuD,EAAMR,EACpE7K,EAAS,KACA,CACT,IAAIsL,EAASJ,GAAOG,EAAKrB,GAAoFuB,GAA5DX,GAAMQ,GAASC,EAAKjD,GAASkD,EAAQtB,OAAoB,GAAmBvQ,SAASQ,GAEtI,GAAI8Q,GADJM,EAAMC,GAEF,OAAOC,EAASvL,EAEhB,KAAOuL,EAAOhS,OAAS,GACnBgS,EAAS,IAAMA,EACnBvL,EAAS,GAAKuL,EAASvL,GA6D5B,SAAS+K,GAAOF,GACnB,OAAsB,IAAfA,EAAMhD,MAA4B,IAAdgD,EAAMjD,IAa9B,SAASoD,GAAWH,GACvB,OAAQA,EAAM/C,UAAY+C,EAAMhD,KAAO,EAiBpC,SAAS2D,GAAMX,GAClB,OAA2B,IAAP,EAAZA,EAAMjD,KAkBX,SAASK,GAAO4C,EAAOpL,GAG1B,OAFKsI,GAAOtI,KACRA,EAAQ4K,GAAU5K,KAClBoL,EAAM/C,WAAarI,EAAMqI,UAAa+C,EAAMhD,OAAS,IAAQ,GAAMpI,EAAMoI,OAAS,IAAQ,KAEvFgD,EAAMhD,OAASpI,EAAMoI,MAAQgD,EAAMjD,MAAQnI,EAAMmI,KAwCrD,SAAS6D,GAASZ,EAAOpL,GAC5B,OAAOyI,GAAQ2C,EAAuBpL,GAAS,EAwC5C,SAASiM,GAAYb,EAAOpL,GAC/B,OAAOyI,GAAQ2C,EAAuBpL,GAAS,EAgB5C,SAASkM,GAAmBd,EAAOpL,GACtC,OAAOyI,GAAQ2C,EAAuBpL,IAAU,EAwB7C,SAASyI,GAAQ2C,EAAOpL,GAG3B,GAFKsI,GAAOtI,KACRA,EAAQ4K,GAAU5K,IAClBwI,GAAO4C,EAAOpL,GACd,OAAO,EACX,IAAImM,EAAUZ,GAAWH,GAAQgB,EAAWb,GAAWvL,GACvD,OAAImM,IAAYC,GACL,GACND,GAAWC,EACL,EAENhB,EAAM/C,SAGHrI,EAAMoI,OAAS,EAAMgD,EAAMhD,OAAS,GAAOpI,EAAMoI,OAASgD,EAAMhD,MAASpI,EAAMmI,MAAQ,EAAMiD,EAAMjD,MAAQ,GAAM,EAAK,EAFnHoD,GAAWI,GAASP,EAAOpL,KAAU,EAAK,EAkBlD,SAASgK,GAAOoB,GACnB,OAAKA,EAAM/C,UAAYG,GAAO4C,EAAOtB,IAC1BA,GACJa,GAAI0B,GAAIjB,GAAQJ,IAepB,SAASL,GAAIS,EAAOkB,GAClBhE,GAAOgE,KACRA,EAAS1B,GAAU0B,IAEvB,IAAIC,EAAMnB,EAAMhD,OAAS,GACrBoE,EAAmB,MAAbpB,EAAMhD,KACZqE,EAAMrB,EAAMjD,MAAQ,GACpBuE,EAAkB,MAAZtB,EAAMjD,IACZwE,EAAML,EAAOlE,OAAS,GACtBwE,EAAoB,MAAdN,EAAOlE,KACbyE,EAAMP,EAAOnE,MAAQ,GAErB2E,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAYrC,OAVAD,IADAC,GAAOP,GAFgB,MAAbJ,EAAOnE,QAGF,GAGf4E,IADAC,GAAOP,EAAMI,KACE,GAGfC,IADAC,GAAOP,EAAMI,KACE,GAEfE,GAAOP,EAAMI,EAENrD,IANP0D,GAAO,QAMiB,IATxBC,GAAO,QAQPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C3B,EAAM/C,UASzD,SAASsD,GAASP,EAAO8B,GAG5B,OAFK5E,GAAO4E,KACRA,EAAatC,GAAUsC,IACpBvC,GAAIS,EAAOpB,GAAOkD,IAgBtB,SAASvE,GAASyC,EAAO+B,GAC5B,GAAI7B,GAAOF,GACP,OAAOA,EAAM/C,SAAWoB,GAAQC,GAIpC,GAHKpB,GAAO6E,KACRA,EAAavC,GAAUuC,IAEvBvF,GAEA,OAAO0B,GADG1B,GAAKvF,IAAI+I,EAAMjD,IAAKiD,EAAMhD,KAAM+E,EAAWhF,IAAKgF,EAAW/E,MAChDR,GAAKwF,WAAYhC,EAAM/C,UAEhD,GAAIiD,GAAO6B,GACP,OAAO/B,EAAM/C,SAAWoB,GAAQC,GACpC,GAAIlB,GAAO4C,EAAOtB,IACd,OAAOiC,GAAMoB,GAAcrD,GAAYJ,GAC3C,GAAIlB,GAAO2E,EAAYrD,IACnB,OAAOiC,GAAMX,GAAStB,GAAYJ,GACtC,GAAI6B,GAAWH,GACX,OAAIG,GAAW4B,GACJxE,GAASqB,GAAOoB,GAAQpB,GAAOmD,IAE/BnD,GAAOrB,GAASqB,GAAOoB,GAAQ+B,IAEzC,GAAI5B,GAAW4B,GAChB,OAAOnD,GAAOrB,GAASyC,EAAOpB,GAAOmD,KAEzC,GAAInB,GAASZ,EAAOL,KAAeiB,GAASmB,EAAYpC,IACpD,OAAOxB,GAAW8B,GAASD,GAASC,GAAS8B,GAAa/B,EAAM/C,UAGpE,IAAIkE,EAAMnB,EAAMhD,OAAS,GACrBoE,EAAmB,MAAbpB,EAAMhD,KACZqE,EAAMrB,EAAMjD,MAAQ,GACpBuE,EAAkB,MAAZtB,EAAMjD,IACZwE,EAAMQ,EAAW/E,OAAS,GAC1BwE,EAAwB,MAAlBO,EAAW/E,KACjByE,EAAMM,EAAWhF,MAAQ,GACzBkF,EAAuB,MAAjBF,EAAWhF,IACjB2E,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAqBrC,OAnBAD,IADAC,GAAOP,EAAMW,KACE,GAGfN,IADAC,GAAOP,EAAMY,KACE,GACfL,GAAO,MAEPD,IADAC,GAAON,EAAMG,KACE,GAGfC,IADAC,GAAOP,EAAMa,KACE,GACfN,GAAO,MAEPD,IADAC,GAAON,EAAMI,KACE,GACfE,GAAO,MAEPD,IADAC,GAAOL,EAAME,KACE,GAEfE,GAAOP,EAAMc,EAAMb,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE1CrD,IAZP0D,GAAO,QAYiB,IAlBxBC,GAAO,QAiBPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C3B,EAAM/C,UAiBzD,SAASoD,GAAOL,EAAOkC,GAG1B,GAFKhF,GAAOgF,KACRA,EAAU1C,GAAU0C,IACpBhC,GAAOgC,GACP,MAAMpU,MAAM,oBAYZ,IAKAqU,EAAQ3B,EAAKtN,EAfjB,GAAIsJ,GAIA,OAAKwD,EAAM/C,WACQ,aAAf+C,EAAMhD,OACU,IAAhBkF,EAAQnF,MAA+B,IAAjBmF,EAAQlF,KAK3BkB,IADI8B,EAAM/C,SAAWT,GAAK4F,MAAQ5F,GAAK6F,OAAOrC,EAAMjD,IAAKiD,EAAMhD,KAAMkF,EAAQnF,IAAKmF,EAAQlF,MAC5ER,GAAKwF,WAAYhC,EAAM/C,UAHjC+C,EAKf,GAAIE,GAAOF,GACP,OAAOA,EAAM/C,SAAWoB,GAAQC,GAEpC,GAAK0B,EAAM/C,SAiCN,CAKD,GAFKiF,EAAQjF,WACTiF,EA0RL,SAAoBlC,GACvB,OAAIA,EAAM/C,SACC+C,EACJ9B,GAAS8B,EAAMjD,IAAKiD,EAAMhD,MAAM,GA7RrBsF,CAAWJ,IACrBrB,GAAYqB,EAASlC,GACrB,OAAO3B,GACX,GAAIwC,GAAYqB,EAASK,GAAmBvC,EAAO,IAC/C,OAAOH,GACX3M,EAAMmL,OA1CW,CAGjB,GAAIjB,GAAO4C,EAAOtB,IACd,OAAItB,GAAO8E,EAAStC,KAAQxC,GAAO8E,EAASpC,IACjCpB,GACFtB,GAAO8E,EAASxD,IACdkB,GAKHxC,GADJ+E,EAASK,GAAUnC,GADJoC,GAAWzC,EAAO,GACGkC,GAAU,GAC3B5D,IACR6B,GAAW+B,GAAWtC,GAAME,GAInC5M,EAAMqM,GAAI4C,EAAQ9B,GADlBG,EAAMD,GAASP,EAAOzC,GAAS2E,EAASC,IACVD,IAKrC,GAAI9E,GAAO8E,EAASxD,IACrB,OAAOsB,EAAM/C,SAAWoB,GAAQC,GACpC,GAAI6B,GAAWH,GACX,OAAIG,GAAW+B,GACJ7B,GAAOzB,GAAOoB,GAAQpB,GAAOsD,IACjCtD,GAAOyB,GAAOzB,GAAOoB,GAAQkC,IAEnC,GAAI/B,GAAW+B,GAChB,OAAOtD,GAAOyB,GAAOL,EAAOpB,GAAOsD,KACvChP,EAAMoL,GAmBV,IADAkC,EAAMR,EACCc,GAAmBN,EAAK0B,IAAU,CAGrCC,EAASlJ,KAAKC,IAAI,EAAGD,KAAKyJ,MAAMzC,GAASO,GAAOP,GAASiC,KAOzD,IAJA,IAAIS,EAAO1J,KAAK2J,KAAK3J,KAAK4J,IAAIV,GAAUlJ,KAAK6J,KAAMC,EAASJ,GAAQ,GAAM,EAAI3D,GAAQ,EAAG2D,EAAO,IAGhGK,EAAY7E,GAAWgE,GAASc,EAAY1F,GAASyF,EAAWd,GACzD/B,GAAW8C,IAAcpC,GAAYoC,EAAWzC,IAGnDyC,EAAY1F,GADZyF,EAAY7E,GADZgE,GAAUY,EACqB/C,EAAM/C,UACLiF,GAIhChC,GAAO8C,KACPA,EAAYpD,IAChB1M,EAAMqM,GAAIrM,EAAK8P,GACfxC,EAAMD,GAASC,EAAKyC,GAExB,OAAO/P,EA8CJ,SAAS+N,GAAIjB,GAChB,OAAO9B,IAAU8B,EAAMjD,KAAMiD,EAAMhD,KAAMgD,EAAM/C,UA6C5C,SAASuF,GAAUxC,EAAOkD,GAG7B,OAFIhG,GAAOgG,KACPA,EAAUnD,GAAMmD,IACI,IAAnBA,GAAW,IACLlD,EACFkD,EAAU,GACRhF,GAAS8B,EAAMjD,KAAOmG,EAAUlD,EAAMhD,MAAQkG,EAAYlD,EAAMjD,MAAS,GAAKmG,EAAWlD,EAAM/C,UAE/FiB,GAAS,EAAG8B,EAAMjD,KAAQmG,EAAU,GAAKlD,EAAM/C,UAgBvD,SAASwF,GAAWzC,EAAOkD,GAG9B,OAFIhG,GAAOgG,KACPA,EAAUnD,GAAMmD,IACI,IAAnBA,GAAW,IACLlD,EACFkD,EAAU,GACRhF,GAAU8B,EAAMjD,MAAQmG,EAAYlD,EAAMhD,MAAS,GAAKkG,EAAWlD,EAAMhD,MAAQkG,EAASlD,EAAM/C,UAEhGiB,GAAS8B,EAAMhD,MAASkG,EAAU,GAAKlD,EAAMhD,MAAQ,EAAI,GAAI,EAAIgD,EAAM/C,UAgB/E,SAASsF,GAAmBvC,EAAOkD,GAItC,GAHIhG,GAAOgG,KACPA,EAAUnD,GAAMmD,IAEJ,KADhBA,GAAW,IAEP,OAAOlD,EAEP,IAAIhD,EAAOgD,EAAMhD,KACjB,OAAIkG,EAAU,GAEHhF,GADG8B,EAAMjD,MACSmG,EAAYlG,GAAS,GAAKkG,EAAWlG,IAASkG,EAASlD,EAAM/C,UAG/EiB,GADU,KAAZgF,EACWlG,EAEAA,IAAUkG,EAAU,GAFd,EAAGlD,EAAM/C,UA0GpC,SAASS,GAAQsC,EAAOmD,GAC3B,OAAOA,EAQJ,SAAmBnD,GACtB,IAAIoD,EAAKpD,EAAMhD,KAAMqG,EAAKrD,EAAMjD,IAChC,MAAO,CACE,IAALsG,EACAA,IAAO,EAAI,IACXA,IAAO,GAAK,IACZA,IAAO,GACF,IAALD,EACAA,IAAO,EAAI,IACXA,IAAO,GAAK,IACZA,IAAO,IAlBCE,CAAUtD,GA2BnB,SAAmBA,GACtB,IAAIoD,EAAKpD,EAAMhD,KAAMqG,EAAKrD,EAAMjD,IAChC,MAAO,CACHqG,IAAO,GACPA,IAAO,GAAK,IACZA,IAAO,EAAI,IACN,IAALA,EACAC,IAAO,GACPA,IAAO,GAAK,IACZA,IAAO,EAAI,IACN,IAALA,GArC2BE,CAAUvD,GAgDtC,SAASvC,GAAU+F,EAAOvG,EAAUkG,GACvC,OAAOA,EASJ,SAAqBK,EAAOvG,GAC/B,OAAO,IAAIH,GAAK0G,EAAM,GAClBA,EAAM,IAAM,EACZA,EAAM,IAAM,GACZA,EAAM,IAAM,GAAIA,EAAM,GACtBA,EAAM,IAAM,EACZA,EAAM,IAAM,GACZA,EAAM,IAAM,GAAIvG,GAhBRwG,CAAYD,EAAOvG,GAyB5B,SAAqBuG,EAAOvG,GAC/B,OAAO,IAAIH,GAAK0G,EAAM,IAAM,GACxBA,EAAM,IAAM,GACZA,EAAM,IAAM,EACZA,EAAM,GAAIA,EAAM,IAAM,GACtBA,EAAM,IAAM,GACZA,EAAM,IAAM,EACZA,EAAM,GAAIvG,GAhC6ByG,CAAYF,EAAOvG,GC1wC3D,MAEM0G,GAAcpE,GAEdqE,GAAcrG,GACdsG,GAAcxD,GACdyD,GD+9BN,SAAgB9D,EAAOkC,GAI1B,OAHKhF,GAAOgF,KACRA,EAAU1C,GAAU0C,IAEpB1F,GAEO0B,IADI8B,EAAM/C,SAAWT,GAAKuH,MAAQvH,GAAKwH,OAAOhE,EAAMjD,IAAKiD,EAAMhD,KAAMkF,EAAQnF,IAAKmF,EAAQlF,MAC5ER,GAAKwF,WAAYhC,EAAM/C,UAEzCsD,GAASP,EAAOzC,GAAS8C,GAAOL,EAAOkC,GAAUA,KCt+B/C+B,GAAmBrF,GAInBsF,GDkgCN,SAAalE,EAAOpL,GAGvB,OAFKsI,GAAOtI,KACRA,EAAQ4K,GAAU5K,IACfsJ,GAAS8B,EAAMjD,IAAMnI,EAAMmI,IAAKiD,EAAMhD,KAAOpI,EAAMoI,KAAMgD,EAAM/C,WC1/B7DkH,GAAU9G,GAEV+G,GAAWlG,GAKXmG,GAAQtE,GAkCd,SAASuE,GAAY1W,EAAOqP,EAAUhO,GACzC,IAAI1C,EAAIqB,EACJ2W,EAAK,EACT,OAAQtV,GACJ,KAAK,EACD1C,EAAIqB,GAAS,IAAM,GACnB2W,EAAKhY,EACL,MACJ,KAAK,EACDA,EAAIqB,GAAS,KAAO,GACpB,MACJ,KAAK,EACDrB,EAAIqB,GAAS,IAAM,GACnB2W,EAAKhY,EACL,MACJ,KAAK,EACDA,EAAIqB,GAAS,KAAO,GACpB,MACJ,KAAK,EACDrB,EAAIqB,GAAS,EACb2W,EAAKhY,EACL,MACJ,KAAK,EACDA,EAAIqB,IAAU,EAGtB,OAAOsQ,GAAiB3R,EAAGgY,GAAM,GAAItH,GCzElC,MAAMuH,GACTnX,YAAYoX,EAAUC,EAAUC,EAAWC,EAAQtQ,EAAQH,EAAO0Q,GAC9DrX,KAAKiX,SAAWA,EAChBjX,KAAKkX,SAAWA,EAChBlX,KAAKmX,UAAYA,EACjBnX,KAAKoX,OAASA,EACdpX,KAAK8G,OAASA,EACd9G,KAAK2G,MAAQA,EACb3G,KAAKqX,UAAYA,EAErBjW,WACI,OAAOkW,GAAStX,MAEpBX,cACI,OAAOkY,GAAYvX,MAEvB4D,OAAOwD,GACH,OAAOoQ,GAAOxX,KAAMoH,IAQrB,SAASqQ,GAAYtK,GACxB,OAAqB,MAAdA,EAAE+J,SAAmB/J,EAAE+J,SAAW,GAEtC,SAASK,GAAYpK,GAGxB,OAAOzK,EAAiB,CAFHN,EAAW+K,EAAE8J,aAChBQ,GAAYtK,GAAG9J,IAAIkU,MAGlC,SAASC,GAAOE,EAAIC,GACvB,MAAoB,KAAhBD,EAAGT,SACoB,KAAhBU,EAAGV,UACHzT,EAAgBoU,GAAkBF,GAAKE,GAAkBD,IAAK,EAAEE,EAAIC,IAAMC,EAAIC,KAAQH,IAAOE,GAAMP,GAAOM,EAAIE,KAG9GN,EAAGT,WAAaU,EAAGV,UACnBzT,EAAgBiU,GAAYC,GAAKD,GAAYE,GAAKH,IA8CzC,IAAIR,GAAS,iBACZ,IAAIA,GAAS,8BACb,IAAIA,GAAS,eACX,IAAIA,GAAS,iBACf,IAAIA,GAAS,kBACb,IAAIA,GAAS,gBACZ,IAAIA,GAAS,eACb,IAAIA,GAAS,gBACZ,IAAIA,GAAS,iBACd,IAAIA,GAAS,gBACZ,IAAIA,GAAS,iBACZ,IAAIA,GAAS,iBACb,IAAIA,GAAS,iBACb,IAAIA,GAAS,kBAmBlC,SAASM,GAASnK,GACrB,MAAM8K,EAAWC,GAAe/K,GAChC,OAAgB,MAAZ8K,EACOX,GAASW,GAAY,KAET,MAAd9K,EAAE+J,UAA0C,IAAtB/J,EAAE+J,SAAShW,OAC/BiM,EAAE8J,SAGF9J,EAAE8J,SAAW,IAAM9J,EAAE+J,SAAS7T,KAAKtE,GAAMuY,GAASvY,KAAIwH,KAAK,KAAO,IAgB1E,SAAS2R,GAAe/K,GAC3B,IAAIgL,EACJ,MAAsB,OAAfhL,EAAE8J,UAA4F,KAAhD,QAArBkB,EAAKhL,EAAE+J,gBAA6B,IAAPiB,OAAgB,EAASA,EAAGjX,QAAgBiM,EAAE+J,SAAS,QAAKnW,EAiItH,SAAS6W,GAAkBzK,GAC9B,GAAgB,MAAZA,EAAErG,OACF,OAAOqG,EAAErG,SAGT,MAAM,IAAIxG,MAAM,GAAG6M,EAAE8J,qCCxRJmB,SAAAA,GAAAA,EAAiBC,GAA2B,MAAA,CAA5CD,EAAAA,GAAiBC,EAAAA,GAAoCD,EAArDA,GAAiBC,EAA2B,IAE5CC,SAAAA,GAAAA,EAAiBC,GAAmB,OAAAD,EAApCA,GAAiBC,EAAAA,GAAjBD,EAAAA,GAAiBC,EAAmB,GACpCC,SAAAA,GAAAA,EAAQC,GAA2B,MAAA,CAAAD,EAA3BC,EAAAA,GAAwCD,EAAxCC,EAA2B,IACnCC,SAAAA,GAAAA,EAAiBF,GAAkB,MAAA,CAAAA,EAAnCE,EAAAA,GAAgDF,EAAhDE,EAAmC,IACnCC,SAAAA,GAAAA,EAAiBH,GAAkB,MAAA,CAAnCG,EAAAA,GAAwCH,EAAQG,EAAhDA,GAAqDH,GAoBxDI,SAAAA,GAAAA,GAAS,OAAAC,GAAAD,EAFdA,SAAAA,GAAsB,OAAAnN,KAAAwC,KAAM6K,GAAAF,EAASA,IAEdG,CAAUH,IAQzC5Y,SAAAA,GAAAA,GAhBO,OAgBYA,EAhBZ,GAiBPA,SAAAA,GAAAA,GAhBO,OAgBYA,EAhBZ,iLAiCHgZ,SAAAA,GAAAA,GAEN,MAAA,CAAmB,GAAbA,EAAAA,MAAsBC,GAAAD,EAAAA,UACR,GAAdA,EAAAA,OAAuBE,GAAAF,EAD7BG,0bAuCOC,SAAAA,GAAAA,GAAM,OAAAA,EAAAA,KAAW,EASCC,SAAAA,GAAAA,EAAwBC,EAAwBC,GAC5E,OAAAV,GAAAC,IAACO,EAAYG,GAAAF,EAAWA,GA1ErB3V,EADSiV,EA2E2CU,EA5FtC,CAAA,EAAQ,IAAR,CAAA,EAAQ,GAoBpBG,GAAgBb,IAwE8CW,GA3EvDX,IAAAA,EA6EGc,SAAAA,GAAAA,EAASV,GAErB,OAXqBW,EAWRD,EAAAA,oBAXgC,EAAAtB,EAUhDwB,GAAiBF,EAAAA,aAAsBV,EAAAA,SAAcA,EAClDa,OAX6CzB,GAAAA,EAAAA,GAAgCuB,GAAxDA,IAAAA,EAAwBvB,EAcjCY,SAAAA,GAAAA,EAAMc,EAAgBC,GACjCC,MAAAA,EAAgBC,GAAAnB,GAAAE,EAAAA,SAAgBc,GAAOhB,GAAAA,GAAA,EAAM,EAAME,EAAAA,cAAqBc,EAAOA,IACnF,MAAA,CAAA,IAAAI,GAAAlB,EAAAA,MAAAA,EAAAA,OAAAA,EAAAA,KACeiB,GAAAjB,EAAAA,SAAgBgB,GAChBC,GAAAjB,EAAAA,SAAgBmB,GAAArB,GAAA,EAAM,GAhHhBsB,EAgHuBC,GAAAvB,GAAA,EAAMiB,GAAkBO,GAAA,EAAMtB,EAAAA,eAhHpCuB,EAgHwDvB,EAAAA,iBAhH7B,CAA5CoB,EAAAA,GAAiBG,EAAAA,GAAoCH,EAArDA,GAAiBG,EAA2B,MAgHsDT,IACpGC,EACIf,EAAAA,cACvBgB,GAnHqBI,IAAAA,EAAiBG,EAuIlBb,SAAAA,GAAAA,EAASc,GAC7B,OAAA,IAAAN,GAAAM,EAAAA,MAAAA,EAAAA,OAAAA,EAAAA,KACed,EAAAA,iBA9HOe,EA+HoBf,EAAAA,aA/HEgB,EA+HoBhB,EAAAA,aA7H7D,CAAAe,EAAYhP,KAAAkP,IAAe,kBAAVD,EAA2B,KAC5CD,EAAYhP,KAAAmP,IAAe,kBAAVF,EAA2B,OA6H5BG,GAAanB,EAASc,GAlIxB,CAAA,EAAQ,IAEHC,IAAAA,EAAsBC,EAmI7BhB,SAAAA,GAAAA,EAASN,GACxB,OAAA,IAAA0B,GAEiBC,GAAkBrB,EAASN,EAAAA,YAF5CA,EAAAA,QAAAA,EAAAA,KAAAA,EAAAA,WAAAA,EAAAA,aACeM,GC3JD,MAAAsB,IAAC,EAAMvP,KAAAwC,KAAK,IAAO,EACzBgN,GAAAC,OAAAC,OAAAC,WAA2BC,GAC1BC,GAA4B,IAA5BJ,OAAAC,OAAAI,YAEWhY,SAAAA,GAAAA,GAClBiY,MAAAA,EAASC,SAAAC,eAAwBnY,GACrCiY,EAAAA,MAAgBG,GAChBH,EAAAA,OAAiBI,GAMbC,MAAAA,EAAUL,EAAVK,WAAAA,MAGJL,OAFAK,EAAAA,UAAkB,EAAKD,IACvBC,EAAAA,MAAc,GAAK,GACnBL,CAAAA,EAAQK,GAEgC,MAAAC,GAAAC,GAAY,oBAAlDC,GAAAC,GAAA,GAAAC,GAAAD,GAAA,GAC0BE,GAAAJ,GAAY,cAAtCK,GAAAH,GAAA,GACkCI,IADlCJ,GAAA,GACkCF,GAAY,mBAA9CO,GAAAL,GAAA,GAAAM,GAAAN,GAAA,GAYYO,SAAAA,GAAAA,GACdR,GAAAS,YACAC,GAAAA,IACQC,GAAAH,GACAtD,GAAAsD,GACN,IACA,EACA,mBACFR,GAAAY,YACAZ,GAAAa,OA6BkBrC,SAAAA,GAAAA,GAzCDqB,IAAAA,GAAAA,EA0CXa,IAzCNb,UAAkB,EAAK,EAAKA,EAAAA,OAAAA,MAAsBA,EAAlDL,OAAAI,QA0CAkB,GAAcC,GAAYvC,IAYfA,SAAAA,GAAAA,GACXwC,GAAAA,SACQL,GAAAnC,EAAAA,UACAtB,GAAAsB,EAAAA,UACAA,EAAAA,MACAA,EAJRyC,QAOsBzC,SAAAA,GAAAA,GAClBlR,MAAAA,EAAIyT,GAAYvC,GAChBlX,EAAIkX,EAAJlX,SACJ4Z,GAAAA,UACEP,GAAMrT,GAAamC,KAAAJ,IAAIsR,GAAArZ,IAAO,EAC9B4V,GAAM5P,GAAamC,KAAAJ,IAAI6N,GAAA5V,IAAO,EACvB,EAAMmI,KAAAJ,IAAIsR,GAAArZ,IAAO,EACjB,EAAMmI,KAAAJ,IAAI6N,GAAA5V,IAAO,GAELkX,SAAAA,GAAAA,GACrB8B,GAAAG,YACInT,MAAAA,EAAIyT,GAAYvC,GACpB0C,GAAAA,OAA6BP,GAAArT,GAAW4P,GAAA5P,IACxC4T,GAAAA,OACQP,GAAArT,GAAYqT,GAAAnC,EAAAA,UACZtB,GAAA5P,GAAY4P,GAAAsB,EAFpB2C,WAGAb,GAAAM,YACAN,GAAAc,SAImBC,SAAAA,GAAAA,EAAK7C,IApCZA,SAAAA,GACZwC,GAAAA,UACEL,GAAMnC,EAAAA,UAAwB,EACxBtB,GAAAsB,EAAAA,UAAwB,EACxBA,EAAAA,MAAmB,EACnBA,EAAAA,OAAoB,GAgC5B8C,CAAUD,GACVE,GAAoBF,GACpBG,GAAShD,GACTiD,GAAmBjD,GA/FrBkC,GAAAA,UAAwC,QACxCM,GAAAA,UAAkC,OAClCE,GAAAA,YAAwC,MC9BjC,MAAMQ,GACT7d,YAAY8d,GACR3d,KAAKI,MAAQud,EAEjB9W,SACI,OAAO7G,KAAKI,MAGhBgB,WACI,OAAOqF,OAAOzG,KAAKI,OAEvBf,cACI,OAAO0D,EAAe/C,KAAKI,OAE/BwD,OAAOwD,GACH,OAAa,MAATA,GAIOzD,EAAO3D,KAAKI,MAAOgH,aAAiBsW,GAAOtW,EAAMhH,MAAQgH,GAGxExC,UAAUwC,GACN,OAAa,MAATA,EACO,EAGAzC,EAAQ3E,KAAKI,MAAOgH,aAAiBsW,GAAOtW,EAAMhH,MAAQgH,IAItE,SAASwW,GAAK7e,GACjB,OAAY,MAALA,GAAaA,aAAa2e,GAAO,IAAIA,GAAK3e,GAAKA,EAEnD,SAAS4e,GAAM5e,GAClB,GAAS,MAALA,EACA,MAAM,IAAIuB,MAAM,uBAGhB,OAAOvB,aAAa2e,GAAO3e,EAAEqB,MAAQrB,EC9BtC,SAAS8e,GAAmBrc,GAC/B,MAAMsc,EAAUtc,EAAS,EAGnBuc,GAFNvc,EAASiK,KAAKJ,IAAI7J,IAEQ,KAAW,IACrC,OAAQsc,EAAU,IAAM,KACpB9c,KAHaQ,EAAS,MAGF,GAAK,IACzBR,EAAa+c,EAAS,GAEvB,SAASC,GAAoBC,EAAM/P,GACtC,MAAM/M,EAAM8c,EAAKC,cACjB,MAAgB,UAAThQ,EACD/M,EAAIiJ,UAAU,EAAGjJ,EAAI8F,QAAQ,MAC7B9F,EAAIiJ,UAAUjJ,EAAI8F,QAAQ,KAAO,EAAG9F,EAAID,OAAS,GAuB3D,SAASid,GAA6BF,EAAMG,EAAQC,GAChD,OAAOD,EAAOlU,QAAO,YAAcoU,IAC/B,IAAIC,EAAMpV,OAAOqV,IACjB,OAAQF,EAAMlU,UAAU,EAAG,IACvB,IAAK,IACD,MAAM1K,EAAI2e,EAAMJ,EAAKQ,iBAAmBR,EAAKS,cAC7CH,EAAMD,EAAMpd,OAAS,EAAIxB,EAAI,IAAMA,EACnC,MACJ,IAAK,IACD6e,GAAOF,EAAMJ,EAAKU,cAAgBV,EAAKW,YAAc,EACrD,MACJ,IAAK,IACDL,EAAMF,EAAMJ,EAAKY,aAAeZ,EAAKa,UACrC,MACJ,IAAK,IACDP,EAAMF,EAAMJ,EAAKc,cAAgBd,EAAKe,WACtC,MACJ,IAAK,IACD,MAAM1c,EAAI+b,EAAMJ,EAAKc,cAAgBd,EAAKe,WAC1CT,EAAMjc,EAAI,GAAKA,EAAI,GAAKA,EACxB,MACJ,IAAK,IACDic,EAAMF,EAAMJ,EAAKgB,gBAAkBhB,EAAKiB,aACxC,MACJ,IAAK,IACDX,EAAMF,EAAMJ,EAAKkB,gBAAkBlB,EAAKmB,aACxC,MACJ,IAAK,IACDb,EAAMF,EAAMJ,EAAKoB,qBAAuBpB,EAAKqB,kBAGrD,OAAInW,OAAOyH,MAAM2N,GACND,EAGCC,EAAM,IAAMD,EAAMpd,OAAS,EAAK,IAAMqd,EAAM,GAAKA,KAIrE,SAASgB,GAAuBtB,EAAMG,GAClC,IAAIjG,EAAIqH,EAAIC,EACZ,MAAMC,EAAI,IAAIzc,KAAKgb,EAAK/a,WAAoC,QAAtBiV,EAAK8F,EAAKzc,cAA2B,IAAP2W,EAAgBA,EAAK,IACzF,GAAsB,iBAAXiG,EACP,OAAOsB,EAAExB,cAAchU,QAAO,QAAU,IAAIA,QAAO,eAAiB,KAAO2T,GAA2C,QAAtB2B,EAAKvB,EAAKzc,cAA2B,IAAPge,EAAgBA,EAAK,GAElJ,GAAsB,IAAlBpB,EAAOld,OAYZ,OAAOid,GAA6BuB,EAAGtB,GAAQ,GAX/C,OAAQA,GACJ,IAAK,IACL,IAAK,IAAK,OAAOJ,GAAoB0B,EAAG,SACxC,IAAK,IACL,IAAK,IAAK,OAAO1B,GAAoB0B,EAAG,UACxC,IAAK,IACL,IAAK,IAAK,OAxDtB,SAAmCC,EAAgBne,GAC/C,MAAML,EAAMwe,EAAezB,cAC3B,OAAO/c,EAAIiJ,UAAU,EAAGjJ,EAAID,OAAS,GAAK2c,GAAmBrc,GAsDpCoe,CAA0BF,EAA2B,QAAtBD,EAAKxB,EAAKzc,cAA2B,IAAPie,EAAgBA,EAAK,GACnG,QAAS,MAAM,IAAInf,MAAM,mCAOrC,SAASuf,GAAqB5B,EAAMG,GAChC,MAAMC,EAAoB,IAAdJ,EAAKxc,KACjB,GAAsB,iBAAX2c,EACP,OAAOC,EAAMJ,EAAK6B,cAAgB7B,EAAK8B,iBAEtC,GAAsB,IAAlB3B,EAAOld,OAgBZ,OAAOid,GAA6BF,EAAMG,EAAQC,GAflD,OAAQD,GACJ,IAAK,IACL,IAAK,IACD,OAAOC,EAAML,GAAoBC,EAAM,SAAWA,EAAK+B,qBAC3D,IAAK,IACL,IAAK,IACD,OAAO3B,EAAML,GAAoBC,EAAM,UAAYA,EAAKgC,qBAC5D,IAAK,IACL,IAAK,IACD,OAhGhB,SAAyBP,EAAGrB,GACxB,GAAIA,EACA,OAAOqB,EAAExB,cAER,CAED,MAAMgC,EAAwB,MAAVR,EAAEje,MAAiC,IAAXie,EAAEje,KAC9C,OAAOT,EAAa0e,EAAEhB,cAAe,GAAK,IACtC1d,EAAa0e,EAAEd,WAAa,EAAG,GAAK,IACpC5d,EAAa0e,EAAEZ,UAAW,GAAK,IAC/B9d,EAAa0e,EAAEV,WAAY,GAAK,IAChChe,EAAa0e,EAAER,aAAc,GAAK,IAClCle,EAAa0e,EAAEN,aAAc,GAAK,IAClCpe,EAAa0e,EAAEJ,kBAAmB,IACjCY,EAAcrC,IAA2C,IAAxB6B,EAAEhe,qBAAgC,KAkFzDye,CAAgBlC,EAAMI,GACjC,QACI,MAAM,IAAI/d,MAAM,mCAOzB,SAAS8f,GAASnC,EAAMG,EAAQiC,GACnC,OAAsB,MAAfpC,EAAKzc,OACN+d,GAAuBtB,EAAMG,GAC7ByB,GAAqB5B,EAAMG,GClIrC,MAAMkC,GAAc,gDAGpB,SAASC,GAAWxhB,EAAGW,GACnB,OXJG,SAAiBX,EAAGW,GACvB,MAAiB,iBAANX,EACAA,EAAIW,GAAI,EAAMX,EAAIW,EAAI,EAAI,EAG1BX,EAAE6F,UAAUlF,GWDhB8gB,CAAezhB,EAAGW,GAAK,EAiF3B,SAAS+gB,GAAOC,GACnB,MAAO,OACHA,EACAC,MAiJiBxf,EAjJFuf,EAkJXC,IACJL,GAAeM,UAAY,EAC3B,MAAMC,EAAW,GACXC,EAAU,GAChB,IAAIC,EAAS,EACTzC,EAAQgC,GAAeU,KAAK7f,GAChC,KAAOmd,GAAO,CAGV,MAAM2C,EAAa3C,EAAM4C,OAAS5C,EAAM,IAAM,IAAIpd,OAClD2f,EAASlU,KAAKxL,EAAIiJ,UAAU2W,EAAQE,GAAY/W,QAAO,MAAQ,MAC/D4W,EAAQnU,KAAK2R,GACbyC,EAAST,GAAeM,UAExBN,GAAeM,WAAa,EAC5BtC,EAAQgC,GAAeU,KAAK7f,GAEhC,OAAwB,IAApB0f,EAAS3f,OACFyf,EAAKxf,EAAI+I,QAAO,MAAQ,OAG/B2W,EAASlU,KAAKxL,EAAIiJ,UAAU2W,GAAQ7W,QAAO,MAAQ,MAC5CiX,GAAcR,EAAME,EAAUC,OAvB1C,IAAkB3f,EAzHzB,SAASigB,GAAcT,EAAM/a,GACzB,MAAsB,iBAARA,EAAmB+a,EAAK/a,GAAOA,EAAI+a,KAAKA,GASnD,SAASU,GAAOzb,GACnB,OAAOwb,IAAeriB,GAAMA,GAAG6G,GAOnC,SAAS0b,GAAkB/C,EAAKgD,EAAOC,EAAWC,EAAWC,GACzD,IAAIC,EAAO,GAGX,GAFAJ,EAAQA,GAAS,GACjBG,EAASA,GAAU,GACfnZ,EAAUgW,GAgBV,OAf6B,MAAzBmD,EAAOE,gBACHrB,GAAWhC,EAAK,IAChBA,EAAM/V,EAAS+V,GAAK,GACpBoD,EAAO,KAGHJ,EAAMta,QAAQ,MAAQ,EACtB0a,EAAO,IAEFJ,EAAMta,QAAQ,MAAQ,IAC3B0a,EAAO,MAInBF,EAAyB,MAAbA,EAAoB,KAAO3P,SAAS2P,EAAW,IACnDC,GACJ,IAAK,IACL,IAAK,IAEDnD,EAAM7V,EAAQ6V,EADdkD,EAAyB,MAAbA,EAAoBA,EAAY,GAE5C,MACJ,IAAK,IACL,IAAK,IACDlD,EAAmB,MAAbkD,EAAoB5Y,EAAY0V,EAAKkD,GAAa5Y,EAAY0V,GACpE,MACJ,IAAK,IACL,IAAK,IACDA,EAAmB,MAAbkD,EAAoBzY,EAAcuV,EAAKkD,GAAazY,EAAcuV,GACxE,MACJ,IAAK,IACDA,EAAMrV,EAAMqV,GACZ,MACJ,IAAK,IACDA,EAAMrV,EAAMqV,GAAKsD,cACjB,MACJ,QACItD,EAAM9X,OAAO8X,QAKrBA,EADKA,aAAetb,KACdmd,GAAa7B,GAGbvY,EAASuY,GAGnB,GADAiD,EAAiC,iBAAdA,EAAyBA,EAAY1P,SAAS0P,EAAW,IACvE5Q,MAAM4Q,GAaPjD,EAAMoD,EAAOpD,MAbM,CACnB,MAAMuD,EAAWP,EAAMta,QAAQ,MAAQ,EACjC8a,EAAYR,EAAMta,QAAQ,MAAQ,EAClC+a,EAAKD,IAAcD,EAAW,IAAM,IAGtCvD,EAFO,MAAPyD,EAEML,GADNpD,EAAM0D,GAAQ1D,EAAKiD,EAAYG,EAAKzgB,OAAQ8gB,EAAID,IAI1CE,GAAQN,EAAOpD,EAAKiD,EAAWQ,EAAID,GAMjD,OAAOxD,EAEX,SAAS4C,GAAcR,EAAMuB,EAAWC,EAAUC,EAAU,GAAIC,GAAS,GACrE,MAAO,IAAI5c,KAEP,IAAIkC,EAASya,EACb,MAAMvB,EAAWqB,EAAUjY,QACrB6W,EAAUqB,EAASlY,QACzB,IAAK,MAAMrE,KAAOH,EAAM,CACpB,MAAM,CAAA,CAAK8b,EAAOe,EAAYb,EAAWC,GAAUZ,EAAQ,GAC3D,IAAIU,EAAYc,EAChB,GAAID,GAAU,EACVb,EAAYa,EACZA,GAAS,OAER,GAAkB,MAAdb,EAAmB,CACxB,GAAI5b,EAAM,EACN,MAAM,IAAItF,MAAM,gCAEpB+hB,EAASzc,EACT,SAEJ+B,GAAUkZ,EAAS,GACnBlZ,GAAU2Z,GAAkB1b,EAAK2b,EAAOC,EAAWC,EAAWC,GAC9Db,EAAS1Z,OAAO,EAAG,GACnB2Z,EAAQ3Z,OAAO,EAAG,GAEtB,OAAuB,IAAnB2Z,EAAQ5f,QACRyG,GAAUkZ,EAAS,GACZF,EAAKhZ,IAGLwZ,GAAcR,EAAME,EAAUC,EAASnZ,EAAQ0a,IAkJ3D,SAASE,GAAKC,EAAWC,GAC5B,OAAIzjB,MAAMC,QAAQwjB,GACPA,EAAGlc,KAAKic,GAGRxjB,MAAM0jB,KAAKD,GAAIlc,KAAKic,GA4B5B,SAASP,GAAQ9gB,EAAKoB,EAAKyf,EAAIW,GAClCX,EAAKA,GAAM,IACXzf,GAAYpB,EAAID,OAChB,IAAK,IAAID,EAAI,EAAGA,EAAIsB,EAAKtB,IACrBE,EAAMwhB,EAAUxhB,EAAM6gB,EAAKA,EAAK7gB,EAEpC,OAAOA,EC9ZJ,SAASyhB,GAA8Bxc,EAAM7D,GAChD,MAAsB,mBAAV6D,EACD,IAAIA,EAAK7D,GAGT,IAAIvD,MAAMuD,GA6BlB,SAASsgB,GAAKC,EAAQC,EAAa7gB,EAAO9B,GAC7C,MAAM4iB,EAAsB,EAAdD,EACd,OAAOD,EAAOjG,KAAKzc,EAAO4iB,EAAQA,EAAQ9gB,GA4MvC,SAAS+gB,GAAW/gB,EAAOghB,EAAa9c,GAC3C,GAAIlE,EAAQ,EACR,MAAO,IAAI5B,MAAM,0DAErB,MAAMqH,EAASib,GAA8Bxc,EAAMlE,GACnD,IAAK,IAAIjB,EAAI,EAAGA,GAAMiB,EAAQ,EAAIjB,IAC9B0G,EAAO1G,GAAKiiB,EAAYjiB,GAE5B,OAAO0G,ECpPJ,MAAMwb,WAAmBvb,EAC5B/H,YAAYujB,EAAMC,GACdC,QACAtjB,KAAKujB,KAAOH,EACZpjB,KAAKwjB,KAAOH,EAEhBjiB,WAEI,MAAQ,IAAMmhB,GAAK,KADRviB,MACqB,IAEpC4D,OAAOwD,GACH,MAAMqb,EAAKziB,KACX,GAAIyiB,IAAOrb,EACP,OAAO,EAkCP,MA/Ba,EAACqc,EAAUC,KACpBC,EACA,OAAa,CACT,MAAMC,EAAOH,EAAUI,EAAOH,EACxBI,EAAa,CAACF,EAAKJ,KAAMK,EAAKL,MACpC,GAAqB,MAAjBM,EAAW,GAAY,CACvB,GAAqB,MAAjBA,EAAW,GAAY,CACvB,MAAMC,EAAKD,EAAW,GAChBE,EAAKF,EAAW,GACtB,GAAIngB,EAAOigB,EAAKL,KAAMM,EAAKN,MAAO,CAC9BE,EAAWM,EACXL,EAAWM,EACX,SAASL,EAGT,OAAO,EAIX,OAAO,EAGV,OAAqB,MAAjBG,EAAW,KASrBH,CAAKlB,EAAIrb,GAGxB/H,cAyBI,OAAwB,EAvBX,EAAC4kB,EAAOC,EAAOT,KAExB,OAAa,CACT,MAAMxiB,EAAIgjB,EAAO3hB,EAAI4hB,EAAON,EAAOH,EAC7BK,EAAaF,EAAKJ,KACxB,GAAkB,MAAdM,EAaA,OAAW,EAAJxhB,EAbX,CACI,MAAM6K,EAAI2W,EACV,GAAI7iB,EAAI,GACJ,OAAW,EAAJqB,EAGP2hB,EAAShjB,EAAI,EACbijB,GAAW5hB,GAAK,GAAKS,EAAe6gB,EAAKL,MAAU,IAAMtiB,EACzDwiB,EAAWtW,KAUpBwW,CAAK,EAAG,EAxBJ3jB,MA0Bf6G,OAAOsd,GAEH,OAAOnlB,MAAM0jB,KADC1iB,MAGlB4E,UAAUwC,GAkCN,OAAyB,EAhCZ,EAACqc,EAAUC,KACpBC,EACA,OAAa,CACT,MAAMC,EAAOH,EAAUI,EAAOH,EACxBI,EAAa,CAACF,EAAKJ,KAAMK,EAAKL,MACpC,GAAqB,MAAjBM,EAAW,GAAY,CACvB,GAAqB,MAAjBA,EAAW,GAAY,CACvB,MAAMC,EAAKD,EAAW,GAChBE,EAAKF,EAAW,GAChBxa,EAAoC,EAAhC3E,EAAQif,EAAKL,KAAMM,EAAKN,MAClC,GAAU,IAANja,EAAS,CACTma,EAAWM,EACXL,EAAWM,EACX,SAASL,EAGT,OAAW,EAAJra,EAIX,OAAO,EAGV,OAAqB,MAAjBwa,EAAW,IACT,EAGA,IAKZH,CAjCI3jB,KAiCKoH,GAEpB3G,gBAEI,OAuDD,SAAyCgiB,GAC5C,OAAO,IAAI2B,GAAiB3B,GAxDjB4B,CADIrkB,MAGf,CAACU,OAAOC,YACJ,OAAOC,EAAWZ,KAAKS,iBAE3B,iDAEI,OAAOF,EADIP,OASZ,MAAMokB,GACTvkB,YAAY4iB,GACRziB,KAAKyiB,GAAKA,EACVziB,KAAKskB,GAAKtkB,KAAKyiB,GACfziB,KAAKC,QAAU,KAEnB,yDAEI,OADWD,KACDC,QAEd,+CAEI,OADWD,KACDC,QAEd,4CACI,MAAMskB,EAAKvkB,KACL8jB,EAAaS,EAAGD,GAAGd,KACzB,GAAkB,MAAdM,EAAoB,CACpB,MAAM3W,EAAI2W,EAGV,OAFAS,EAAGtkB,QAAUskB,EAAGD,GAAGf,KACnBgB,EAAGD,GAAKnX,GACD,EAGP,OAAO,EAGf,yCACI,MAAMoX,EAAKvkB,KACXukB,EAAGD,GAAKC,EAAG9B,GACX8B,EAAGtkB,QAAU,KAEjBV,YAYG,SAASilB,KACZ,OAAO,IAAIrB,GAAW,UAAM,GAGzB,SAASsB,GAAyB1lB,EAAG0jB,GACxC,OAAO,IAAIU,GAAWpkB,EAAG0jB,GAGtB,SAASiC,GAAwBjC,GACpC,OAAkB,MAAXA,EAAGe,KAGP,SAASmB,GAAuBlC,GAiBnC,OAAqB,EAhBR,EAACwB,EAAOR,KAEjB,OAAa,CACT,MAAMxiB,EAAIgjB,EACJH,EADkBL,EACAD,KACxB,GAAkB,MAAdM,EAMA,OAAW,EAAJ7iB,EALPgjB,EAAShjB,EAAI,EACbwiB,EAAWK,IAShBH,CAAK,EAAGlB,GAGZ,SAASmC,GAAqBnC,GAEjC,GAAkB,MADCA,EAAGe,KAElB,OAAOf,EAAGc,KAGV,MAAO,IAAIjjB,MAAOukB,gDAInB,SAASC,GAAqBrC,GACjC,MAAMqB,EAAarB,EAAGe,KACtB,GAAkB,MAAdM,EACA,OAAOA,EAGP,MAAO,IAAIxjB,MAAOukB,gDA6BnB,SAASE,KACZ,OAAOP,KAGJ,SAASQ,GAAKjmB,EAAG0jB,GACpB,OAAOgC,GAAyB1lB,EAAG0jB,GAGhC,SAASwC,GAAUlmB,GACtB,OAAO0lB,GAAyB1lB,EAAGylB,MAGhC,SAASU,GAAQzC,GACpB,OAAOiC,GAAwBjC,GAO5B,SAASW,GAAKX,GACjB,OAAOmC,GAAqBnC,GAYzB,SAASY,GAAKZ,GACjB,OAAOqC,GAAqBrC,GAoEzB,SAAS0C,GAAQ1C,GACpB,MAAMlgB,EAAmC,EAA7BoiB,GAAuBlC,GAC7B/c,EAAMmd,GAAK,IAAI7jB,MAAMuD,GAAM,EAAGA,EAAK,MAezC,MAda,EAAC0hB,EAAOR,KAEjB,OAAa,CACT,MAAMxiB,EAAIgjB,EAAOL,EAAOH,EACxB,GAAKiB,GAAwBd,GAM7B,MALIle,EAAIzE,GAAK2jB,GAAqBhB,GAC9BK,EAAShjB,EAAI,EACbwiB,EAAWqB,GAAqBlB,KAM5CD,CAAK,EAAGlB,GACD/c,EAGJ,SAAS0f,GAAKC,EAAQC,EAAO7C,GAChC,IAAI8C,EAAMD,EACN1B,EAAOnB,EACX,MAAQiC,GAAwBd,IAC5B2B,EAAMF,EAAOE,EAAKX,GAAqBhB,IACvCA,EAAOkB,GAAqBlB,GAEhC,OAAO2B,EAwEJ,SAASC,GAAQC,EAAQhD,GAC5B2C,IAAK,CAACM,EAAU3mB,KACZ0mB,EAAO1mB,UACR,EAAQ0jB,GA2BR,SAASkD,GAAgBlD,EAAImD,GAChC,IAAIlgB,EAAMkgB,EACV,IAAK,IAAI3kB,EAAIwhB,EAAGvhB,OAAS,EAAGD,GAAK,EAAGA,IAChCyE,EAAM+e,GAAyBhC,EAAGxhB,GAAIyE,GAE1C,OAAOA,EAGJ,SAASmgB,GAAQpD,GACpB,OAAOkD,GAAgBlD,EAAI+B,MAGxB,SAASsB,GAAMrD,GAClB,IAAIsD,EAAM5Y,EACV,GAAIrO,EAAY2jB,GACZ,OAAOoD,GAAQpD,GAEd,GAAIA,aAAcU,GACnB,OAAOV,EAEN,CACD,MAAMuD,EAAOxB,KACb,IAAIyB,EAAOD,EACX,MAAME,EAAa3lB,EAAckiB,GACjC,IACI,KAAOyD,EAAW,8CAA8C,CAC5D,MAAMnnB,EAAImnB,EAAW,0DACZH,EAAOE,EAAO9Y,EAAK,IAAIgW,GAAWpkB,OAAG,GAAWgnB,EAAKvC,KAAOrW,EAArE8Y,EAAwE9Y,GAE/E,QAEG3N,EAAY0mB,GAEhB,MAAMC,EAAOF,EACPG,EAAM5B,KAEZ,OADA2B,EAAK3C,KAAO4C,EACLtB,GAAqBkB,ICvf7B,SAASK,KACZ,MAAO,IAAI/lB,MAjByB,+CAoBjC,SAASgmB,KACZ,MAAO,IAAIhmB,MAvB8B,iCA0BtC,MAAMimB,GACT1mB,YAAY0F,GACRvF,KAAKuF,EAAIA,EAEbnE,WAGI,IAAIH,EAAI,EACJE,EAAM,QACV,MAAMkH,EAAI9H,EAJCP,MAKX,IACI,KAAQiB,EALK,GAKYoH,EAAE,8CACnBpH,EAAI,IACJE,GAAa,MAEjBA,GAAa6E,EAASqC,EAAE,2DACxBpH,EAAMA,EAAI,EAAK,EAKnB,OAfa,IAYTA,IACAE,GAAa,SAEVA,EAAM,IAChB,QAEG3B,EAAY6I,IAGpB5H,gBAEI,OADUT,KACDuF,IAEb,CAAC7E,OAAOC,YACJ,OAAOC,EAAWZ,KAAKS,iBAE3B,iDAEI,OADUT,KACDuF,KAYV,MAAMihB,GACT3mB,YAAYI,EAASE,EAAMsmB,GACvBzmB,KAAKC,QAAUA,EACfD,KAAKG,KAAOA,EACZH,KAAKymB,QAAUA,EAEnB,yDAEI,OADWzmB,KACDC,UAEd,+CAEI,OADWD,KACDC,UAEd,4CAEI,OADWD,KACDG,OAEd,0CA9EG,WACH,MAAO,IAAIG,MAHqB,8CAiF5BomB,GAEJnnB,UACeS,KACRymB,WAQJ,SAASE,GAA0C1mB,EAASE,EAAMsmB,GACrE,OAAO,IAAID,GAA2BvmB,EAASE,EAAMsmB,GAwGlD,SAASG,GAAgCrhB,EAAG8C,GAC/C,OAAOse,IAA0C,IAAMte,EAAE,4DAA2D,IAAMA,EAAE,+CAA8C,KACtK,IACI7I,EAAY6I,GACf,QAEG9C,QAKL,SAASshB,GAA6BC,EAAOC,EAASC,GACzD,IACIC,EADAC,GAAU,EAEV5B,EAAQ1H,GAAKkJ,KACjB,MAAML,EAAU,KACZ,GAAa,MAATnB,EAAe,CACf,MAAM6B,EAAMxJ,GAAQ2H,GACpB,IACI0B,EAAOG,GACV,QAEG7B,OAAS,KAIf8B,EAAS,KACX,IACIX,IACH,QAEGQ,OAAQ,IAGhB,OAAON,IAA0C,KACxCO,GACDb,KAEQ,MAARY,EACOtJ,GAAQsJ,GAGRX,QAEZ,KAIC,GAHKY,IACDA,GAAU,GAED,MAAT5B,EAAe,CACf,MAAMjjB,EAAIsb,GAAQ2H,GAClB,IAAI+B,EACJ,IACIA,EAAeN,EAAQ1kB,GAE3B,MAAOyhB,GAEH,MADAsD,IACMtD,EAEV,OAAoB,MAAhBuD,GACAJ,EAAOI,GACA,IAGPD,KACO,GAIX,OAAO,IAEZX,GAkCA,SAASa,GAAaC,EAAS3hB,GACvB,MAAPA,GCtRD,SAA2B7G,GAC9B,MAAO,IAAIuB,MAAMvB,GDsRbyoB,CAAkBD,GAInB,SAASE,GAAMliB,GAClB,OA3PG,SAAuCA,GAC1C,OAAO,IAAIghB,GAAehhB,GA0PnBmiB,CAA8BniB,GAGlC,SAASoiB,GAAMlF,GAElB,OADA6E,GAAa,SAAU7E,GAChBliB,EAAckiB,GAGlB,SAASmF,GAAMC,GAClB,OAAOJ,IAAM,IAAMlnB,EAAcsnB,OAG9B,SAASC,GAAOC,GACnB,OAAON,IAAM,IAzNV,SAA2BM,GAC9B,IAAIC,EACAC,EAGAhB,EAFAC,GAAU,EACVgB,GAAW,EAEf,MAAMd,EAAS,KAEX,GADAc,GAAW,EACK,MAAZD,EAAkB,CAClB,MAAME,EAAQF,EACd,IACIzoB,EAAY2oB,GACf,QAEGF,OAAY,GAGpB,GAAgB,MAAZD,EAAkB,CAClB,MAAMI,EAAQJ,EACd,IACIxoB,EAAY4oB,GACf,QAEGJ,OAAY,KAIxB,OAAOrB,IAA0C,KACxCO,EAGIgB,GACL5B,KAHAD,KAKQ,MAARY,EACOtJ,GAAQsJ,GAGRX,QAEZ,KACC,IAAI+B,EAIJ,GAHKnB,IACDA,GAAU,GAEVgB,EACA,OAAO,EAEN,CACD,IAAIxiB,EACJ,KAAc,MAAPA,GAAa,CAChB,MAAMoe,EAAa,CAACkE,EAAUC,GAC9B,GAAqB,MAAjBnE,EAAW,GACX,GAAqB,MAAjBA,EAAW,GAAY,CACvB,MAAMwE,EAAUxE,EAAW,GAC3B,GAAIwE,EAAQ,6CACRrB,EAAOrJ,GAAK0K,EAAQ,2DACpB5iB,GAAM,OAGN,IACIlG,EAAY8oB,GACf,QAEGL,OAAY,OAInB,CACD,MAAMM,EAAUzE,EAAW,GACvByE,EAAQ,8CAEKF,EADFE,EAAQ,0DACnBN,EAAgC1nB,EAAc8nB,KAG9CjB,IACA1hB,GAAM,QAKdsiB,EAAWznB,EAAcwnB,GAGjC,OAAOpK,GAAQjY,OAEpB,KACMwiB,GACDd,OAiIWoB,CAAkBT,KAGlC,SAASU,GAAOZ,EAAWvC,GAC9B,OAAOmC,IAAM,IAvDV,SAA2BliB,EAAG+f,GACjC,IAAI2B,EACA1B,EAAMD,EACV,OAAOqB,IAA0C,KAC7C,GAAY,MAARM,EAAc,CACd,MAAMloB,EAAIkoB,EAAK,GAEf,OADWA,EAAK,GACTloB,EAGP,OAAOsnB,QAEZ,KAEC,GADAY,EAAO1hB,EAAEggB,GACG,MAAR0B,EAAc,CACFA,EAAK,GAAjB,MACMyB,EAAOzB,EAAK,GAElB,OADA1B,EAAMmD,GACC,EAGP,OAAO,KAEZ,SAgCgBC,CAAkBd,EAAWvC,KAO7C,SAASsD,GAAU7pB,GACtB,OAAO6oB,IAAM,IFrHV,SAAmBxnB,EAAOgG,GAC7B,MAAMyiB,EAAKjG,GAA8Bxc,EAAM,GAE/C,OADAyiB,EAAG,GAAKzoB,EACDyoB,EEkHYC,CAAY/pB,KAoB5B,SAASgqB,GAAOtG,GACnB,OAAI3jB,EAAY2jB,GACLoD,GAAUpD,GAEZA,aAAcU,GACZV,EAGAqD,GAAQrD,GAIhB,SAASuG,GAASC,EAAQlC,EAASN,GACtC,OAAOgB,IAAM,IAAMZ,GAA6BoC,EAAQlC,EAASN,KAG9D,SAASyC,GAAgBD,EAAQlC,EAASN,GAC7C,OAAOgB,IAAM,KACT,IAAIxmB,GAAI,EACR,OAAO4lB,GAA6BoC,GAASlqB,IACzCkC,EAAMA,EAAI,EAAK,EACR8lB,EAAQ9lB,EAAGlC,KACnB0nB,MAIJ,SAAS0C,GAAO1G,EAAI2G,GACvB,OAAOtB,GAAO,CAACrF,EAAI2G,IA4RhB,SAASC,GAAKhE,EAAQC,EAAO7C,GAChC,MAAMpa,EAAIsf,GAAMlF,GAChB,IACI,IAAI8C,EAAMD,EACV,KAAOjd,EAAE,8CACLkd,EAAMF,EAAOE,EAAKld,EAAE,2DAExB,OAAOkd,EACV,QAEG/lB,EAAY6I,IA6Nb,SAASihB,GAAIC,EAAS9G,GACzB,OAAOuG,IAAS,IAAMrB,GAAMlF,KAAMpa,GAAOA,EAAE,6CAA+CuV,GAAK2L,EAAQlhB,EAAE,iEAA+D,IAAWmhB,IAC/KhqB,EAAYgqB,MAmFf9oB,OAAOC,SAsLL,SAAS8oB,GAAKvnB,EAAOwnB,GACxB,OAAOjC,IAAM,KACT,MAAMpf,EAAIsf,GAAM+B,GAChB,IACI,IAAK,IAAIC,EAAI,EAAGA,GAAKznB,EAAOynB,IACxB,IAAKthB,EAAE,6CACH,MAAO,IAAI/H,MAAOspB,uFAG1B,OAAOhD,IAAgC,QACpCve,GAEP,MAAOyb,GAEH,MADAtkB,EAAY6I,GACNyb,ME7qCX,MAAM+F,GACThqB,YAAYiqB,GAAY,GACpB9pB,KAAK+pB,IAAM,EACX/pB,KAAKgqB,WAAaF,EAClB9pB,KAAKiqB,WAAa,IAAIC,IAEtBC,kBACA,OAAOnqB,KAAKgqB,WAEhBI,SACI,IAAKpqB,KAAKgqB,WAAY,CAClBhqB,KAAKgqB,YAAa,EAClB,IAAK,MAAM,CAAGK,KAAarqB,KAAKiqB,WAC5BI,KAIZC,YAAY/kB,GACR,MAAMhC,EAAKvD,KAAK+pB,IAEhB,OADA/pB,KAAKiqB,WAAWhoB,IAAIjC,KAAK+pB,MAAOxkB,GACzBhC,EAEXgnB,eAAehnB,GACX,OAAOvD,KAAKiqB,WAAWO,OAAOjnB,GAElCknB,SAASllB,EAAG+f,GACR,MAAMoF,EAAI1qB,KACJuD,EAAKvD,KAAKsqB,YAAqB,MAAThF,EAAgB/f,EAAI,IAAMA,EAAE+f,IACxD,MAAO,CAAE/lB,UAAYmrB,EAAEH,eAAehnB,MAGvC,MAAMonB,WAA+BrqB,MACxCT,cACIyjB,MAAM,8BACN3jB,OAAOirB,eAAe5qB,KAAM2qB,GAAuB/b,YAkBpD,SAASic,GAActlB,GAC1B,OAAQulB,IACJ,GAAIA,EAAIC,YAAYZ,YAChBW,EAAIE,SAAS,IAAIL,SAEhB,GAAIG,EAAIG,WAAWC,oBACpBJ,EAAIG,WAAWE,QAAO,KAClB,IACI5lB,EAAEulB,GAEN,MAAOM,GACHN,EAAIO,QAAQjjB,EAAuBgjB,aAK3C,IACI7lB,EAAEulB,GAEN,MAAOM,GACHN,EAAIO,QAAQjjB,EAAuBgjB,MAK5C,SAASE,GAAcC,EAAaC,GACvC,OAAOX,IAAeC,IAClBS,EAAY,CACRE,UAAY1sB,IACR,IACIysB,EAAOzsB,EAAPysB,CAAUV,GAEd,MAAOM,GACHN,EAAIO,QAAQjjB,EAAuBgjB,MAG3CC,QAASP,EAAIO,QACbL,SAAUF,EAAIE,SACdD,YAAaD,EAAIC,YACjBE,WAAYH,EAAIG,gBAIrB,SAASS,GAAgBtrB,GAC5B,OAAOyqB,IAAeC,GAAQA,EAAIW,UAAUrrB,KAgFvB,IA9ElB,MACHurB,KAAKJ,EAAaC,GACd,OAAOF,GAAcC,EAAaC,GAEtCI,QAAQC,EAAcC,GAClB,OAAO9rB,KAAK2rB,KAAKE,GAAc,IAAMC,IAEzCC,MAAMlE,GACF,OAAOgD,IAAeC,GAAQjD,GAAAA,CAAYiD,KAE9CkB,IAAIC,EAAUjT,GACV,MAAMjZ,EAAOksB,EAASvrB,OAAOC,YAC7B,IAAIT,EAAMH,EAAKI,OACf,OAAOH,KAAKksB,OAAM,KAAOhsB,EAAIG,MAAML,KAAK+rB,OAAM,KAC1C,MAAMrmB,EAAMsT,EAAK9Y,EAAIE,OAErB,OADAF,EAAMH,EAAKI,OACJuF,MAGfymB,OAAO/rB,GACH,OAAOsrB,GAAgBtrB,GAE3BgsB,WAAWb,GACP,OAAOA,EAEXc,WAAWd,EAAae,GACpB,OAAOzB,IAAeC,IAClBS,EAAY,CACRE,UAAY1sB,IACRutB,IACAxB,EAAIW,UAAU1sB,IAElBssB,QAAUtsB,IACNutB,IACAxB,EAAIO,QAAQtsB,IAEhBisB,SAAWjsB,IACPutB,IACAxB,EAAIE,SAASjsB,IAEjBgsB,YAAaD,EAAIC,YACjBE,WAAYH,EAAIG,gBAI5BsB,QAAQhB,EAAaiB,GACjB,OAAO3B,IAAeC,IAClBS,EAAY,CACRE,UAAWX,EAAIW,UACfT,SAAUF,EAAIE,SACdD,YAAaD,EAAIC,YACjBE,WAAYH,EAAIG,WAChBI,QAAUoB,IACN,IACID,EAAaC,EAAbD,CAAiB1B,GAErB,MAAOM,GACHN,EAAIO,QAAQjjB,EAAuBgjB,WAMvDsB,MAAMC,EAAUnB,GACZ,OAAOxrB,KAAKqsB,WAAWb,EAAOmB,IAAW,IAAMA,EAASptB,YAE5D2sB,MAAMU,EAAOrB,GACT,OAAIqB,IACO5sB,KAAK2rB,KAAKJ,GAAa,IAAMvrB,KAAKksB,MAAMU,EAAOrB,KAG/CvrB,KAAKmsB,YAAO,GAG3BU,OACI,OAAOhC,IAAeC,GAAQA,EAAIW,eAAU,OC1FZ,IAAI5B,GCvE3BiD,SAAAA,GAAAA,EAAcL,GAAWM,QAAAC,MAAepP,GAAAkP,GAAKL,GCWxCpB,SAAAA,GAAAA,EAAS4B,EAA2BC,GAC3C1H,IAAe2H,IAAQ,IAAIA,EAAKF,GAAcR,MAAAA,GAAMpB,EAAQoB,MAAnES,iBAIA,OAAAnI,KAOOqI,SAAAA,GAAAA,GACC,ONifT,SAAgBC,GACnB,MAAMrH,EAAOxB,KACb,IAAIyB,EAAOD,EACX,MAAMP,EAAUhD,IACZwD,EAAOb,IAAK,CAACG,EAAKxmB,KACd,MAAMoO,EAAI,IAAIgW,GAAWpkB,OAAG,GAE5B,OADAwmB,EAAI/B,KAAOrW,EACJA,IACR8Y,EAAMxD,IAEb,GAAI3jB,EAAYuuB,GACZA,EAAMC,QAAQ7H,QAEb,GAAI4H,aAAiBlK,GACtBqC,GAAQC,EAAQ4H,OAEf,CACD,MAAMnH,EAAa3lB,EAAc8sB,GACjC,IACI,KAAOnH,EAAW,8CACdT,EAAOS,EAAW,2DAEzB,QAEG1mB,EAAY0mB,IAGpB,MAAMqH,EAAOtH,EACPG,EAAM5B,KAEZ,OADA+I,EAAK/J,KAAO4C,EACLtB,GAAqBkB,GM/gBhBwH,CAARJ,GCrCD,IC0BMnjB,GCfPwjB,GCRFC,GCuKAC,GAQEC,GAcFC,GJhMSC,GAAY,GACZC,GAAY,GACZC,GAAAA,oECON,SAASC,GAAOte,EAAKue,GAAAA,IAEtB,IAAIjtB,KAAKitB,EAAOve,EAAI1O,GAAKitB,EAAMjtB,GAAAA,OACP0O,EASvB,SAASwe,GAAWlI,GAAAA,IACtBmI,EAAanI,EAAKmI,WAClBA,GAAYA,EAAWC,YAAYpI,GEVxC,SAAgBqI,GAAcC,EAAML,EAAOM,GAAAA,IAEzC1pB,EACA2pB,EACAxtB,EAHGytB,EAAkB,GAAA,IAIjBztB,KAAKitB,EACA,OAALjtB,EAAY6D,EAAMopB,EAAMjtB,GACd,OAALA,EAAYwtB,EAAMP,EAAMjtB,GAC5BytB,EAAgBztB,GAAKitB,EAAMjtB,GAAAA,GAG7B0tB,UAAUztB,OAAS,IACtBwtB,EAAgBF,SACfG,UAAUztB,OAAS,EAAI+I,GAAMkjB,KAAKwB,UAAW,GAAKH,GAKjC,mBAARD,GAA2C,MAArBA,EAAKK,aAAAA,IAChC3tB,KAAKstB,EAAKK,kBAAAA,IACVF,EAAgBztB,KACnBytB,EAAgBztB,GAAKstB,EAAKK,aAAa3tB,IAAAA,OAKnC4tB,GAAYN,EAAMG,EAAiB5pB,EAAK2pB,EAAK,MAe9C,SAASI,GAAYN,EAAML,EAAOppB,EAAK2pB,EAAKK,GAAAA,IAG5CC,EAAQ,CACbR,KAAAA,EACAL,MAAAA,EACAppB,IAAAA,EACA2pB,IAAAA,EAAAA,IACW,KAAAlK,GACF,KAAAyK,IACD,EAAAC,IACF,KAAAC,SAAA,EAKInuB,IACE,KAAAouB,IACA,KACZtvB,iBAAAA,EAAakB,IACU,MAAZ+tB,IAAqBpB,GAAUoB,GAAAA,OAI3B,MAAZA,GAAqC,MAAjBrB,GAAQsB,OAAetB,GAAQsB,MAAMA,GAEtDA,EAOD,SAASK,GAASlB,GAAAA,OACjBA,EAAMM,SC5EP,SAASa,GAAUnB,EAAOrS,GAAAA,KAC3BqS,MAAQA,EAAAA,KACRrS,QAAUA,EAyET,SAASyT,GAAcP,EAAOQ,GAAAA,GAClB,MAAdA,EAAAA,OAEIR,EAAAA,GACJO,GAAcP,EAAAA,GAAeA,EAAAA,GAAAA,IAAwB9nB,QAAQ8nB,GAAS,GACtE,KAAA,IAAA,IAGAS,EACGD,EAAaR,EAAAA,IAAgB7tB,OAAQquB,IAAAA,GAG5B,OAFfC,EAAUT,EAAAA,IAAgBQ,KAEa,MAAhBC,EAAAA,IAAAA,OAIfA,EAAAA,IAAAA,MASmB,mBAAdT,EAAMR,KAAqBe,GAAcP,GAAS,KAuCjE,SAASU,GAAwBV,GAAjC,IAGW9tB,EACJyuB,EAAAA,GAHyB,OAA1BX,EAAQA,EAAAA,KAA8C,MAApBA,EAAAA,IAA0B,CAAA,IAChEA,EAAAA,IAAaA,EAAAA,IAAiBY,KAAO,KAC5B1uB,EAAI,EAAGA,EAAI8tB,EAAAA,IAAgB7tB,OAAQD,IAAAA,GAE9B,OADTyuB,EAAQX,EAAAA,IAAgB9tB,KACO,MAAdyuB,EAAAA,IAAoB,CACxCX,EAAAA,IAAaA,EAAAA,IAAiBY,KAAOD,EAAAA,IAAAA,MAAAA,OAKhCD,GAAwBV,IAoC1B,SAASa,GAActmB,KAE1BA,EAAAA,MACAA,EAAAA,KAAAA,IACDqkB,GAAchhB,KAAKrD,KAClBumB,GAAAA,OACFhC,KAAiBJ,GAAQqC,sBAEzBjC,GAAeJ,GAAQqC,oBACNlC,IAAOiC,IAK1B,SAASA,KAAAA,IAAAA,IACJE,EACIF,GAAAA,IAAyBlC,GAAczsB,QAC9C6uB,EAAQpC,GAAczpB,MAAK,SAAC0H,EAAGC,GAAAA,OAAMD,EAAAA,IAAAA,IAAkBC,EAAAA,IAAAA,OACvD8hB,GAAgB,GAGhBoC,EAAMC,MAAK,SAAA1mB,GApGb,IAAyB2mB,EAMnBC,EACEC,EANHpB,EACHqB,EACAC,EAkGK/mB,EAAAA,MAnGL8mB,GADGrB,GADoBkB,EAqGQ3mB,GAAAA,KAAAA,KAlG/B+mB,EAAYJ,EAAAA,OAGRC,EAAc,IACZC,EAAWlC,GAAO,GAAIc,IAAAA,IACPA,EAAAA,IAAkB,EAEvCuB,GACCD,EACAtB,EACAoB,EACAF,EAAAA,SAAAA,IACAI,EAAUE,gBACU,MAApBxB,EAAAA,IAA2B,CAACqB,GAAU,KACtCF,EACU,MAAVE,EAAiBd,GAAcP,GAASqB,EACxCrB,EAAAA,KAEDyB,GAAWN,EAAanB,GAEpBA,EAAAA,KAAcqB,GACjBX,GAAwBV,QCtH3B,SAAgB0B,GACfJ,EACAK,EACAC,EACAC,EACAC,EACAC,EACAC,EACAb,EACAE,EACAY,GAVD,IAYK/vB,EAAGwD,EAAG0rB,EAAUc,EAAYC,EAAQC,EAAeC,EAInDC,EAAeT,GAAkBA,EAAAA,KAA6B7C,GAE9DuD,EAAoBD,EAAYnwB,OAAAA,IAEpCyvB,EAAAA,IAA2B,GACtB1vB,EAAI,EAAGA,EAAIyvB,EAAaxvB,OAAQD,IAAAA,GAgDlB,OA5CjBgwB,EAAaN,EAAAA,IAAyB1vB,GADrB,OAFlBgwB,EAAaP,EAAazvB,KAEqB,kBAAdgwB,EACW,KAMtB,iBAAdA,GACc,iBAAdA,GAEc,iBAAdA,EAEoCpC,GAC1C,KACAoC,EACA,KACA,KACAA,GAESjyB,MAAMC,QAAQgyB,GACmBpC,GAC1CO,GACA,CAAEZ,SAAUyC,GACZ,KACA,KACA,MAESA,EAAAA,IAAoB,EAKapC,GAC1CoC,EAAW1C,KACX0C,EAAW/C,MACX+C,EAAWnsB,IACX,KACAmsB,EAAAA,KAG0CA,GAAAA,CAAAA,GAS5CA,EAAAA,GAAqBN,EACrBM,EAAAA,IAAoBN,EAAAA,IAAwB,EAS9B,QAHdR,EAAWkB,EAAYpwB,KAIrBkvB,GACAc,EAAWnsB,KAAOqrB,EAASrrB,KAC3BmsB,EAAW1C,OAAS4B,EAAS5B,KAE9B8C,EAAYpwB,QAAAA,OAAKF,IAIZ0D,EAAI,EAAGA,EAAI6sB,EAAmB7sB,IAAK,CAAA,IACvC0rB,EAAWkB,EAAY5sB,KAKtBwsB,EAAWnsB,KAAOqrB,EAASrrB,KAC3BmsB,EAAW1C,OAAS4B,EAAS5B,KAC5B,CACD8C,EAAY5sB,QAAAA,EAAK1D,MAGlBovB,EAAW,KAObG,GACCD,EACAY,EALDd,EAAWA,GAAYrC,GAOtB+C,EACAC,EACAC,EACAb,EACAE,EACAY,GAGDE,EAASD,EAAAA,KAEJxsB,EAAIwsB,EAAWxC,MAAQ0B,EAAS1B,KAAOhqB,IACtC2sB,IAAMA,EAAO,IACdjB,EAAS1B,KAAK2C,EAAKzkB,KAAKwjB,EAAS1B,IAAK,KAAMwC,GAChDG,EAAKzkB,KAAKlI,EAAGwsB,EAAAA,KAAyBC,EAAQD,IAGjC,MAAVC,GACkB,MAAjBC,IACHA,EAAgBD,GAIU,mBAAnBD,EAAW1C,MAClB0C,EAAAA,MAAyBd,EAAAA,IAEzBc,EAAAA,IAAsBb,EAASmB,GAC9BN,EACAb,EACAC,GAGDD,EAASoB,GACRnB,EACAY,EACAd,EACAkB,EACAH,EACAd,GAIgC,mBAAvBO,EAAepC,OAQzBoC,EAAAA,IAA0BP,IAG3BA,GACAD,EAAAA,KAAiBC,GACjBA,EAAOhC,YAAciC,IAIrBD,EAASd,GAAca,IAAAA,IAIzBQ,EAAAA,IAAsBQ,EAGjBlwB,EAAIqwB,EAAmBrwB,KACL,MAAlBowB,EAAYpwB,KAEgB,mBAAvB0vB,EAAepC,MACC,MAAvB8C,EAAYpwB,GAAAA,KACZowB,EAAYpwB,GAAAA,KAAW0vB,EAAAA,MAKvBA,EAAAA,IAA0BrB,GAAcsB,EAAgB3vB,EAAI,IAG7DwwB,GAAQJ,EAAYpwB,GAAIowB,EAAYpwB,KAAAA,GAKlCmwB,EAAAA,IACEnwB,EAAI,EAAGA,EAAImwB,EAAKlwB,OAAQD,IAC5BywB,GAASN,EAAKnwB,GAAImwB,IAAOnwB,GAAImwB,IAAOnwB,IAKvC,SAASswB,GAAgBN,EAAYb,EAAQC,GAAAA,IAA7C,IAKMtB,EAHDzlB,EAAI2nB,EAAAA,IACJU,EAAM,EACHroB,GAAKqoB,EAAMroB,EAAEpI,OAAQywB,KACvB5C,EAAQzlB,EAAEqoB,MAMb5C,EAAAA,GAAgBkC,EAGfb,EADwB,mBAAdrB,EAAMR,KACPgD,GAAgBxC,EAAOqB,EAAQC,GAE/BmB,GACRnB,EACAtB,EACAA,EACAzlB,EACAylB,EAAAA,IACAqB,IAAAA,OAMGA,EASD,SAASwB,GAAapD,EAAUqD,GAAAA,OACtCA,EAAMA,GAAO,GACG,MAAZrD,GAAuC,kBAAZA,IACpBxvB,MAAMC,QAAQuvB,GACxBA,EAASwB,MAAK,SAAAN,GACbkC,GAAalC,EAAOmC,MAGrBA,EAAIllB,KAAK6hB,IAEHqD,EAGR,SAASL,GACRnB,EACAY,EACAd,EACAkB,EACAH,EACAd,GAND,IAQK0B,EAuBGC,EAAiBttB,EAAAA,QAAAA,IAtBpBwsB,EAAAA,IAIHa,EAAUb,EAAAA,IAMVA,EAAAA,SAAAA,OACM,GACM,MAAZd,GACAe,GAAUd,GACW,MAArBc,EAAO9C,WAEPhG,EAAO,GAAc,MAAVgI,GAAkBA,EAAOhC,aAAeiC,EAClDA,EAAU2B,YAAYd,GACtBY,EAAU,SACJ,CAAA,IAGDC,EAAS3B,EAAQ3rB,EAAI,GACxBstB,EAASA,EAAOE,cAAgBxtB,EAAI4sB,EAAYnwB,OACjDuD,GAAK,EAAA,GAEDstB,GAAUb,EAAAA,MACP9I,EAGRiI,EAAU6B,aAAahB,EAAQd,GAC/B0B,EAAU1B,EAAAA,YAAAA,IAOR0B,EACMA,EAEAZ,EAAOe,YCvSlB,SAASE,GAASC,EAAOttB,EAAK1E,GACd,MAAX0E,EAAI,GACPstB,EAAMC,YAAYvtB,EAAK1E,GAEvBgyB,EAAMttB,GADa,MAAT1E,EACG,GACa,iBAATA,GAAqB4tB,GAAmBlkB,KAAKhF,GACjD1E,EAEAA,EAAQ,KAYhB,SAASiyB,GAAYC,EAAK9rB,EAAMpG,EAAOmyB,EAAUzB,GAAjD,IACF0B,EAEJhyB,EAAG,GAAa,UAATgG,EAAAA,GACc,iBAATpG,EACVkyB,EAAIF,MAAMK,QAAUryB,MACd,CAAA,GACiB,iBAAZmyB,IACVD,EAAIF,MAAMK,QAAUF,EAAW,IAG5BA,EAAAA,IACE/rB,KAAQ+rB,EACNnyB,GAASoG,KAAQpG,GACtB+xB,GAASG,EAAIF,MAAO5rB,EAAM,IAAA,GAKzBpG,EAAAA,IACEoG,KAAQpG,EACPmyB,GAAYnyB,EAAMoG,KAAU+rB,EAAS/rB,IACzC2rB,GAASG,EAAIF,MAAO5rB,EAAMpG,EAAMoG,SAOhC,GAAgB,MAAZA,EAAK,IAA0B,MAAZA,EAAK,GAChCgsB,EAAahsB,KAAUA,EAAOA,EAAK0D,QAAAA,WAAoB,KAGxB1D,EAA3BA,EAAKob,gBAAiB0Q,EAAY9rB,EAAKob,cAAc3X,MAAM,GACnDzD,EAAKyD,MAAM,GAElBqoB,EAAIrI,IAAYqI,EAAIrI,EAAa,IACtCqI,EAAIrI,EAAWzjB,EAAOgsB,GAAcpyB,EAEhCA,EACEmyB,GAEJD,EAAII,iBAAiBlsB,EADLgsB,EAAaG,GAAoBC,GACbJ,GAIrCF,EAAIO,oBAAoBrsB,EADRgsB,EAAaG,GAAoBC,GACVJ,QAElC,GAAa,4BAAThsB,EAAoC,CAAA,GAC1CsqB,EAIHtqB,EAAOA,EAAK0D,QAAAA,cAAuB,KAAKA,QAAAA,SAAkB,UACpD,GACG,SAAT1D,GACS,SAATA,GACS,SAATA,GAGS,aAATA,GACS,aAATA,GACAA,KAAQ8rB,EAAAA,IAGPA,EAAI9rB,GAAiB,MAATpG,EAAgB,GAAKA,EAAAA,MAE3BI,EACL,MAAO6H,IAUW,mBAAVjI,IAGD,MAATA,KAAAA,IACCA,GAAgC,MAAZoG,EAAK,IAA0B,MAAZA,EAAK,IAE7C8rB,EAAIQ,aAAatsB,EAAMpG,GAEvBkyB,EAAIS,gBAAgBvsB,KAUvB,SAASosB,GAAWvqB,GAAAA,KACd4hB,EAAW5hB,EAAEkmB,MAAAA,GAAcd,GAAQuF,MAAQvF,GAAQuF,MAAM3qB,GAAKA,GAGpE,SAASsqB,GAAkBtqB,GAAAA,KACrB4hB,EAAW5hB,EAAEkmB,MAAAA,GAAad,GAAQuF,MAAQvF,GAAQuF,MAAM3qB,GAAKA,GCpInE,SAAgBioB,GACfD,EACA4C,EACA9C,EACAU,EACAC,EACAC,EACAb,EACAE,EACAY,GATD,IAWKW,EAoBEroB,EAAG4pB,EAAOC,EAAUC,EAAUC,EAAUC,EACxCC,EAKAC,EACAC,EAqIA/C,EA/JLgD,EAAUT,EAAS1E,KAAAA,QAAAA,IAIhB0E,EAASpzB,YAA2B,OAAO,KAGpB,MAAvBswB,EAAAA,MACHa,EAAcb,EAAAA,IACdC,EAAS6C,EAAAA,IAAgB9C,EAAAA,IAEzB8C,EAAAA,IAAsB,KACtBlC,EAAoB,CAACX,KAGjBuB,EAAMlE,GAAAA,MAAgBkE,EAAIsB,GAAAA,IAG9B7K,EAAO,GAAsB,mBAAXsL,EAAuB,CAAA,GAEpCH,EAAWN,EAAS/E,MAKpBsF,GADJ7B,EAAM+B,EAAQC,cACQ9C,EAAcc,EAAAA,KAChC8B,EAAmB9B,EACpB6B,EACCA,EAAStF,MAAM9tB,MACfuxB,EAAAA,GACDd,EAGCV,EAAAA,IAEHmD,GADAhqB,EAAI2pB,EAAAA,IAAsB9C,EAAAA,KAAAA,GAC0B7mB,EAAAA,KAGhD,cAAeoqB,GAAWA,EAAQ9kB,UAAUglB,OAE/CX,EAAAA,IAAsB3pB,EAAI,IAAIoqB,EAAQH,EAAUE,IAGhDR,EAAAA,IAAsB3pB,EAAI,IAAI+lB,GAAUkE,EAAUE,GAClDnqB,EAAEzJ,YAAc6zB,EAChBpqB,EAAEsqB,OAASC,IAERL,GAAUA,EAAStmB,IAAI5D,GAE3BA,EAAE4kB,MAAQqF,EACLjqB,EAAEgc,QAAOhc,EAAEgc,MAAQ,IACxBhc,EAAEuS,QAAU4X,EACZnqB,EAAAA,IAAmBunB,EACnBqC,EAAQ5pB,EAAAA,KAAAA,EACRA,EAAAA,IAAqB,IAIF,MAAhBA,EAAAA,MACHA,EAAAA,IAAeA,EAAEgc,OAEsB,MAApCoO,EAAQI,2BACPxqB,EAAAA,KAAgBA,EAAEgc,QACrBhc,EAAAA,IAAe2kB,GAAO,GAAI3kB,EAAAA,MAG3B2kB,GACC3kB,EAAAA,IACAoqB,EAAQI,yBAAyBP,EAAUjqB,EAAAA,OAI7C6pB,EAAW7pB,EAAE4kB,MACbkF,EAAW9pB,EAAEgc,MAGT4N,EAEkC,MAApCQ,EAAQI,0BACgB,MAAxBxqB,EAAEyqB,oBAEFzqB,EAAEyqB,qBAGwB,MAAvBzqB,EAAE0qB,mBACL1qB,EAAAA,IAAmBqD,KAAKrD,EAAE0qB,uBAErB,CAAA,GAE+B,MAApCN,EAAQI,0BACRP,IAAaJ,GACkB,MAA/B7pB,EAAE2qB,2BAEF3qB,EAAE2qB,0BAA0BV,EAAUE,IAIpCnqB,EAAAA,KAC0B,MAA3BA,EAAE4qB,wBAAAA,IACF5qB,EAAE4qB,sBACDX,EACAjqB,EAAAA,IACAmqB,IAEFR,EAAAA,MAAuB9C,EAAAA,IACtB,CACD7mB,EAAE4kB,MAAQqF,EACVjqB,EAAEgc,MAAQhc,EAAAA,IAEN2pB,EAAAA,MAAuB9C,EAAAA,MAAoB7mB,EAAAA,KAAAA,GAC/CA,EAAAA,IAAW2pB,EACXA,EAAAA,IAAgB9C,EAAAA,IAChB8C,EAAAA,IAAqB9C,EAAAA,IACrB8C,EAAAA,IAAmB3F,SAAQ,SAAAyB,GACtBA,IAAOA,EAAAA,GAAgBkE,MAExB3pB,EAAAA,IAAmBpI,QACtBgvB,EAAYvjB,KAAKrD,GAAAA,MAGZ8e,EAGsB,MAAzB9e,EAAE6qB,qBACL7qB,EAAE6qB,oBAAoBZ,EAAUjqB,EAAAA,IAAcmqB,GAGnB,MAAxBnqB,EAAE8qB,oBACL9qB,EAAAA,IAAmBqD,MAAK,WACvBrD,EAAE8qB,mBAAmBjB,EAAUC,EAAUC,MAK5C/pB,EAAEuS,QAAU4X,EACZnqB,EAAE4kB,MAAQqF,EACVjqB,EAAEgc,MAAQhc,EAAAA,KAELqoB,EAAMlE,GAAAA,MAAkBkE,EAAIsB,GAEjC3pB,EAAAA,KAAAA,EACAA,EAAAA,IAAW2pB,EACX3pB,EAAAA,IAAe+mB,EAEfsB,EAAMroB,EAAEsqB,OAAOtqB,EAAE4kB,MAAO5kB,EAAEgc,MAAOhc,EAAEuS,SAGnCvS,EAAEgc,MAAQhc,EAAAA,IAEe,MAArBA,EAAE+qB,kBACLxD,EAAgB5C,GAAOA,GAAO,GAAI4C,GAAgBvnB,EAAE+qB,oBAGhDnB,GAAsC,MAA7B5pB,EAAEgrB,0BACfjB,EAAW/pB,EAAEgrB,wBAAwBnB,EAAUC,IAK5C1C,EADI,MAAPiB,GAAeA,EAAIpD,OAASa,IAAuB,MAAXuC,EAAI7sB,IACL6sB,EAAIzD,MAAMM,SAAWmD,EAE7DlB,GACCJ,EACArxB,MAAMC,QAAQyxB,GAAgBA,EAAe,CAACA,GAC9CuC,EACA9C,EACAU,EACAC,EACAC,EACAb,EACAE,EACAY,GAGD1nB,EAAEqmB,KAAOsD,EAAAA,IAGTA,EAAAA,IAAsB,KAElB3pB,EAAAA,IAAmBpI,QACtBgvB,EAAYvjB,KAAKrD,GAGdgqB,IACHhqB,EAAAA,IAAkBA,EAAAA,GAAyB,MAG5CA,EAAAA,KAAAA,OAEqB,MAArBynB,GACAkC,EAAAA,MAAuB9C,EAAAA,KAEvB8C,EAAAA,IAAqB9C,EAAAA,IACrB8C,EAAAA,IAAgB9C,EAAAA,KAEhB8C,EAAAA,IAgEH,SACCX,EACAW,EACA9C,EACAU,EACAC,EACAC,EACAb,EACAc,GARD,IAoBStB,EAsDH6E,EACAC,EAjEDrB,EAAWhD,EAASjC,MACpBqF,EAAWN,EAAS/E,MACpBuG,EAAWxB,EAAS1E,KACpBttB,EAAI,EAAA,GAGS,QAAbwzB,IAAoB3D,GAAAA,GAEC,MAArBC,EAAAA,KACI9vB,EAAI8vB,EAAkB7vB,OAAQD,IAAAA,IAC9ByuB,EAAQqB,EAAkB9vB,KAO/B,iBAAkByuB,KAAY+E,IAC7BA,EAAW/E,EAAMgF,YAAcD,EAA8B,IAAnB/E,EAAM+E,UAChD,CACDnC,EAAM5C,EACNqB,EAAkB9vB,GAAK,KAAA,MAAA,GAMf,MAAPqxB,EAAa,CAAA,GACC,OAAbmC,EAAAA,OAEIhZ,SAASkZ,eAAepB,GAI/BjB,EADGxB,EACGrV,SAASmZ,gBACd,6BAEAH,GAGKhZ,SAAS6S,cAEdmG,EACAlB,EAASsB,IAAMtB,GAKjBxC,EAAoB,KAEpBC,GAAAA,EAAc,GAGE,OAAbyD,EAECtB,IAAaI,GAAcvC,GAAesB,EAAIwC,OAASvB,IAC1DjB,EAAIwC,KAAOvB,OAEN,CAAA,GAENxC,EAAoBA,GAAqB9mB,GAAMkjB,KAAKmF,EAAIyC,YAIpDR,GAFJpB,EAAWhD,EAASjC,OAASJ,IAENkH,wBACnBR,EAAUjB,EAASyB,yBAIlBhE,EAAa,CAAA,GAGQ,MAArBD,EAAAA,IACHoC,EAAW,GACNlyB,EAAI,EAAGA,EAAIqxB,EAAI2C,WAAW/zB,OAAQD,IACtCkyB,EAASb,EAAI2C,WAAWh0B,GAAGuF,MAAQ8rB,EAAI2C,WAAWh0B,GAAGb,OAInDo0B,GAAWD,KAGZC,IACED,GAAWC,EAAAA,QAAkBD,EAAAA,QAC/BC,EAAAA,SAAmBlC,EAAI4C,aAExB5C,EAAI4C,UAAaV,GAAWA,EAAAA,QAAmB,KAAA,GD3X7C,SAAmBlC,EAAKiB,EAAUJ,EAAUrC,EAAOqE,GAAAA,IACrDl0B,EAAAA,IAECA,KAAKkyB,EACC,aAANlyB,GAA0B,QAANA,GAAiBA,KAAKsyB,GAC7ClB,GAAYC,EAAKrxB,EAAG,KAAMkyB,EAASlyB,GAAI6vB,GAAAA,IAIpC7vB,KAAKsyB,EAEN4B,GAAiC,mBAAf5B,EAAStyB,IACvB,aAANA,GACM,QAANA,GACM,UAANA,GACM,YAANA,GACAkyB,EAASlyB,KAAOsyB,EAAStyB,IAEzBoxB,GAAYC,EAAKrxB,EAAGsyB,EAAStyB,GAAIkyB,EAASlyB,GAAI6vB,GC8W/CsE,CAAU9C,EAAKiB,EAAUJ,EAAUrC,EAAOE,GAGtCwD,EACHvB,EAAAA,IAAqB,QAAA,GAErBhyB,EAAIgyB,EAAS/E,MAAMM,SACnBiC,GACC6B,EACAtzB,MAAMC,QAAQgC,GAAKA,EAAI,CAACA,GACxBgyB,EACA9C,EACAU,EACAC,GAAsB,kBAAb2D,EACT1D,EACAb,EACAa,EACGA,EAAkB,GAClBZ,EAAAA,KAAsBb,GAAca,EAAU,GACjDa,GAIwB,MAArBD,EAAAA,IACE9vB,EAAI8vB,EAAkB7vB,OAAQD,KACN,MAAxB8vB,EAAkB9vB,IAAYktB,GAAW4C,EAAkB9vB,IAM7D+vB,IAEH,UAAWuC,QAAAA,KACVtyB,EAAIsyB,EAASnzB,SAKba,IAAMqxB,EAAIlyB,OACI,aAAbq0B,IAA4BxzB,GAIf,WAAbwzB,GAAyBxzB,IAAMkyB,EAAS/yB,QAE1CiyB,GAAYC,EAAK,QAASrxB,EAAGkyB,EAAS/yB,OAAAA,GAGtC,YAAamzB,QAAAA,KACZtyB,EAAIsyB,EAAS8B,UACdp0B,IAAMqxB,EAAI+C,SAEVhD,GAAYC,EAAK,UAAWrxB,EAAGkyB,EAASkC,SAAAA,IAAS,OAK7C/C,EA/NWgD,CACfnF,EAAAA,IACA8C,EACA9C,EACAU,EACAC,EACAC,EACAb,EACAc,IAIGW,EAAMlE,GAAQ8H,SAAS5D,EAAIsB,GAC/B,MAAO5qB,GACR4qB,EAAAA,IAAqB,MAEjBjC,GAAoC,MAArBD,KAClBkC,EAAAA,IAAgB7C,EAChB6C,EAAAA,MAAwBjC,EACxBD,EAAkBA,EAAkB9pB,QAAQmpB,IAAW,MAIxD3C,GAAAA,IAAoBplB,EAAG4qB,EAAU9C,IAS5B,SAASK,GAAWN,EAAalK,GACnCyH,GAAAA,KAAiBA,GAAAA,IAAgBzH,EAAMkK,GAE3CA,EAAYF,MAAK,SAAA1mB,GAAAA,IAGf4mB,EAAc5mB,EAAAA,IACdA,EAAAA,IAAqB,GACrB4mB,EAAYF,MAAK,SAAAwF,GAEhBA,EAAGrI,KAAK7jB,MAER,MAAOjB,GACRolB,GAAAA,IAAoBplB,EAAGiB,EAAAA,SA2L1B,SAAgBooB,GAASjD,EAAKruB,EAAO2uB,GAAAA,IAEjB,mBAAPN,EAAmBA,EAAIruB,GAC7BquB,EAAIxuB,QAAUG,EAClB,MAAOiI,GACRolB,GAAAA,IAAoBplB,EAAG0mB,IAYzB,SAAgB0C,GAAQ1C,EAAO0G,EAAaC,GAA5C,IACKrpB,EAoBMpL,EAAAA,GAnBNwsB,GAAQgE,SAAShE,GAAQgE,QAAQ1C,IAEhC1iB,EAAI0iB,EAAMN,OACTpiB,EAAEpM,SAAWoM,EAAEpM,UAAY8uB,EAAAA,KAAY2C,GAASrlB,EAAG,KAAMopB,IAGjC,OAAzBppB,EAAI0iB,EAAAA,KAA2B,CAAA,GAC/B1iB,EAAEspB,qBAAAA,IAEJtpB,EAAEspB,uBACD,MAAOttB,GACRolB,GAAAA,IAAoBplB,EAAGotB,GAIzBppB,EAAEsjB,KAAOtjB,EAAAA,IAAe,KAAA,GAGpBA,EAAI0iB,EAAAA,IAAAA,IACC9tB,EAAI,EAAGA,EAAIoL,EAAEnL,OAAQD,IACzBoL,EAAEpL,IACLwwB,GAAQplB,EAAEpL,GAAIw0B,EAAkC,mBAAd1G,EAAMR,MAKtCmH,GAA4B,MAAd3G,EAAAA,KAAoBZ,GAAWY,EAAAA,KAIlDA,EAAAA,IAAaA,EAAAA,SAAAA,EAId,SAAS8E,GAAS3F,EAAO5I,EAAOzJ,GAAAA,OACxB7b,KAAKH,YAAYquB,EAAOrS,GCvfhC,SAAgB+X,GAAO7E,EAAOsB,EAAWuF,GAAzC,IAMK5E,EAOAb,EAUAD,EAtBAzC,GAAAA,IAAeA,GAAAA,GAAcsB,EAAOsB,GAYpCF,GAPAa,EAAqC,mBAAhB4E,GAQtB,KACCA,GAAeA,EAAAA,KAA0BvF,EAAAA,IAQzCH,EAAc,GAClBI,GACCD,EARDtB,IACGiC,GAAe4E,GACjBvF,GAAAA,IACa/B,GAAcc,GAAU,KAAM,CAACL,IAS5CoB,GAAYrC,GACZA,QAAAA,IACAuC,EAAUE,iBACTS,GAAe4E,EACb,CAACA,GACDzF,EACA,KACAE,EAAUwF,WACV5rB,GAAMkjB,KAAKkD,EAAU0E,YACrB,KACH7E,GACCc,GAAe4E,EACbA,EACAzF,EACAA,EAAAA,IACAE,EAAUwF,WACb7E,GAIDR,GAAWN,EAAanB,GPrCZ9kB,GAAQ8jB,GAAU9jB,MCfzBwjB,GAAU,CAAAwB,IOFhB,SAA4BjC,EAAO+B,EAAOoB,EAAU2F,GAAAA,IAAAA,IAE/C7F,EAAW8F,EAAMC,EAEbjH,EAAQA,EAAAA,IAAAA,IACVkB,EAAYlB,EAAAA,OAAsBkB,EAAAA,GAAAA,IAAAA,IAErC8F,EAAO9F,EAAUpwB,cAE4B,MAAjCk2B,EAAKE,2BAChBhG,EAAUiG,SAASH,EAAKE,yBAAyBjJ,IACjDgJ,EAAU/F,EAAAA,KAGwB,MAA/BA,EAAUkG,oBACblG,EAAUkG,kBAAkBnJ,EAAO8I,GAAa,IAChDE,EAAU/F,EAAAA,KAIP+F,EAAAA,OACK/F,EAAAA,IAA0BA,EAElC,MAAO5nB,GACR2kB,EAAQ3kB,EAAAA,MAKL2kB,INnCHU,GAAU,ECuBd2B,GAAUzgB,UAAUsnB,SAAW,SAASE,EAAQC,GAAAA,IAE3Ch0B,EAEHA,EADsB,MAAnBrC,KAAAA,KAA2BA,KAAAA,MAAoBA,KAAKslB,MACnDtlB,KAAAA,IAEAA,KAAAA,IAAkBiuB,GAAO,GAAIjuB,KAAKslB,OAGlB,mBAAV8Q,IAGVA,EAASA,EAAOnI,GAAO,GAAI5rB,GAAIrC,KAAKkuB,QAGjCkI,GACHnI,GAAO5rB,EAAG+zB,GAIG,MAAVA,GAEAp2B,KAAAA,MACCq2B,GAAUr2B,KAAAA,IAAsB2M,KAAK0pB,GACzCzG,GAAc5vB,QAUhBqvB,GAAUzgB,UAAU0nB,YAAc,SAASD,GACtCr2B,KAAAA,MAAAA,KAAAA,KAAAA,EAKCq2B,GAAUr2B,KAAAA,IAAsB2M,KAAK0pB,GACzCzG,GAAc5vB,QAchBqvB,GAAUzgB,UAAUglB,OAASxE,GAyFzBzB,GAAgB,GAQdC,GACa,mBAAX2I,QACJA,QAAQ3nB,UAAU4nB,KAAKC,KAAKF,QAAQG,WACpCC,WA2CJ9G,GAAAA,IAAyB,EM7NH,oBAAV3U,QAAyBA,OAAO0b,qBAC1C1b,OAAO0b,oBAAoBC,aAAa,SAAUpJ,GAAS,CAC1D2B,SAAAA,GACAC,UAAAA,KCNH,IAEIyH,GAAqB,GCMlB,SAASC,GAAehI,GAAAA,OAC1BA,EAAMR,OAASa,GACX,WACwB,mBAAdL,EAAMR,KAChBQ,EAAMR,KAAKyI,aAAejI,EAAMR,KAAK/nB,KACb,iBAAduoB,EAAMR,KAChBQ,EAAMR,KAGP,QAOR,IAAI0I,GAAc,GAoBdC,GAAa,GAMjB,SAAgBC,KAAAA,OACRF,GAAY/1B,OAAS,EAAI+1B,GAAYA,GAAY/1B,OAAS,GAAK,KASvE,IAAIk2B,IAAAA,EAMJ,SAASC,GAAgBtI,GAAAA,MACI,mBAAdA,EAAMR,MAAsBQ,EAAMR,MAAQa,GAQlD,SAASkI,GAAcvI,GAAAA,IAAAA,IACvBwI,EAAQ,CAACxI,GACX5uB,EAAO4uB,EACW,MAAf5uB,EAAAA,KACNo3B,EAAM5qB,KAAKxM,EAAAA,KACXA,EAAOA,EAAAA,IAAAA,OAGDo3B,EAAM30B,QAAO,SAAC2iB,EAAKiS,GACzBjS,GAAAA,QAAewR,GAAeS,GAAAA,IAExB9N,EAAS8N,EAAMC,SAAAA,OACjB/N,EACHnE,GAAAA,QAAemE,EAAOgO,SAAAA,IAAYhO,EAAOiO,WAAAA,IAC9BP,KACXA,IAAAA,EACArK,QAAQ6K,KACP,mLAIMrS,EAAO,OACb,IClFJ,IAAMsS,GAAuC,mBAAX1yB,QA8V5B+wB,GAAW7G,GAAUzgB,UAAUsnB,SACrC7G,GAAUzgB,UAAUsnB,SAAW,SAASE,EAAQC,GAAAA,OAC5B,MAAfr2B,KAAAA,IAKe,MAAdA,KAAKslB,OACRyH,QAAQ6K,KACP,gKAEmCN,GAAcH,OAGtB,MAAnBn3B,KAAAA,KACV+sB,QAAQ6K,KACP,8NAGQN,GAAct3B,KAAAA,MAIjBk2B,GAAS/I,KAAKntB,KAAMo2B,EAAQC,IAGpC,IAAMC,GAAcjH,GAAUzgB,UAAU0nB,YAyBjC,SAASwB,GAAe/I,GAAAA,IACxBb,EAAUa,EAAVb,MACF1nB,EAAOuwB,GAAehI,GAEtBgJ,EAAQ,GAAA,IACP,IAAIC,KAAQ9J,EAAAA,GACZA,EAAM+J,eAAeD,IAAkB,aAATA,EAAqB,CAAA,IAClD53B,EAAQ8tB,EAAM8J,GAGE,mBAAT53B,IACVA,EAAAA,aAAoBA,EAAM42B,aAAe52B,EAAMoG,MAAAA,SAGhDpG,EACCT,OAAOS,KAAWA,GAAUA,EAAMgB,SAE/BhB,EAAQ,GADRT,OAAOiP,UAAUxN,SAAS+rB,KAAK/sB,GAGnC23B,GAAAA,IAAaC,EAAAA,IAAQE,KAAKC,UAAU/3B,GAAAA,IAIlCouB,EAAWN,EAAMM,SAAAA,MAAAA,IACVhoB,EAAOuxB,GACjBvJ,GAAYA,EAASttB,OAAS,QAAUsF,EAAO,IAAM,OAjDvD6oB,GAAUzgB,UAAU0nB,YAAc,SAASD,GAAAA,OACvB,MAAfr2B,KAAAA,IACH+sB,QAAQ6K,KACP,0HACqDN,GACnDH,OAG0B,MAAnBn3B,KAAAA,KACV+sB,QAAQ6K,KACP,iOAGQN,GAAct3B,KAAAA,MAGjBs2B,GAAYnJ,KAAKntB,KAAMq2B,IA/X/B,YDgFA,WAAA,IACK+B,EAAU3K,GAAAA,IACV4K,EAAY5K,GAAQ8H,OACpB+C,EAAU7K,GAAAA,GACV0C,EAAW1C,GAAQsB,MACnBwJ,EAAY9K,GAAAA,IAEhBA,GAAQ8H,OAAS,SAAAxG,GACZsI,GAAgBtI,IACnBmI,GAAWjsB,MAEZgsB,GAAYhsB,MACRotB,GAAWA,EAAUtJ,IAG1BtB,GAAAA,IAAgB,SAAAsB,GACXsI,GAAgBtI,IACnBkI,GAAYtqB,KAAKoiB,GAEdqJ,GAASA,EAAQrJ,IAGtBtB,GAAAA,GAAgB,SAACsB,EAAO3X,GACvB8f,GAAa,GACToB,GAASA,EAAQvJ,EAAO3X,IAG7BqW,GAAQsB,MAAQ,SAAAA,GACfA,EAAAA,IACCmI,GAAWh2B,OAAS,EAAIg2B,GAAWA,GAAWh2B,OAAS,GAAK,KACzDivB,GAAUA,EAASpB,IAGxBtB,GAAAA,IAAkB,SAAAsB,GACbsI,GAAgBtI,IACnBmI,GAAWvqB,KAAKoiB,GAGbwJ,GAAWA,EAAUxJ,IAtC3B,GC/ECyJ,IAEIC,GAAAA,EAGAC,EAAgBjL,GAAAA,IAChB4K,EAAY5K,GAAQ8H,OACpBoD,EAAWlL,GAAQsB,MACnB6J,EAAgBnL,GAAAA,IAChB6K,EAAU7K,GAAAA,GACVoL,EAAUpL,GAAAA,IACRqL,EAAoBjB,GAEvB,CACAkB,UAAW,IAAI5zB,QACf6zB,gBAAiB,IAAI7zB,QACrB8zB,cAAe,IAAI9zB,SAJnB,KAMG+zB,EAAe,GAErBzL,GAAAA,IAAsB,SAACT,EAAO+B,EAAOoB,EAAU2F,GAAAA,GAC9B/G,GAASA,EAAAA,KACa,mBAAd/B,EAAMwJ,KAAoB,CAAA,IAC3C2C,EAAUnM,EAChBA,EAAQ,IAAI1sB,MAAAA,iDACsCy2B,GAAehI,IAAAA,IAAAA,IAG7D3X,EAAS2X,EACN3X,EAAQA,EAASA,EAAAA,GAAAA,GACnBA,EAAAA,KAAqBA,EAAAA,IAAAA,IAAoC,CAC5D4V,EAAQmM,EAAAA,MAAAA,GAONnM,aAAiB1sB,MAAAA,MACd0sB,EAAAA,KAKP8I,EAAYA,GAAa,IACfsD,eAAiB9B,GAAcvI,GACzC6J,EAAc5L,EAAO+B,EAAOoB,EAAU2F,GAKb,mBAAd9I,EAAMwJ,MAChBG,YAAW,WAAA,MACJ3J,KAGP,MAAO3kB,GAAAA,MACFA,IAIRolB,GAAAA,GAAgB,SAACsB,EAAOX,GAAAA,IAClBA,EAAAA,MACE,IAAI9tB,MACT,uIAAA,IAKE+4B,EAAAA,OACIjL,EAAWqG,UAAAA,KChGO,EAAA,KAEU,GAAA,KADT,EDmGzB4E,GAAAA,EAAU,MAAA,QAGVA,GAAAA,EAAU,IAGPA,EAAS,CAAA,IACTC,EAAgBvC,GAAehI,GAAAA,MAC7B,IAAIzuB,MAAAA,wEAC8D8tB,EAAAA,qBAA+BkL,EAAAA,QAAqBlL,EAAAA,MAIzHkK,GAASA,EAAQvJ,EAAOX,IAG7BX,GAAAA,IAAgB,SAAAsB,GAAAA,IACTR,EAA0BQ,EAA1BR,KACFkH,EArGN,SAAS8D,EAAwBniB,GAAAA,OAC3BA,EACqB,mBAAfA,EAAOmX,KACVgL,EAAwBniB,EAAAA,IAEzBA,EAJa,GADrB,CAoGkC2X,EAAAA,IAAAA,GAGhC0J,GAAAA,OAAe,IAEXlK,EAAAA,MACG,IAAIjuB,MACT,+IAECw3B,GAAe/I,GAAAA,OACRuI,GAAcvI,IAEjB,GAAY,MAARR,GAA+B,iBAARA,EAAkB,CAAA,QAAA,IAC/CA,EAAAA,UAAAA,IAAgCA,EAAAA,IAAAA,MAC7B,IAAIjuB,MACT,2CAA2CiuB,EAAAA,wEAE/BwI,GAAehI,GAAAA,MAAY+I,GAAevJ,GAAAA,uBACjCwI,GAAehI,GAAAA,wFAE5BuI,GAAcvI,IAAAA,MAIlB,IAAIzuB,MACT,4CACEtB,MAAMC,QAAQsvB,GAAQ,QAAUA,IAAAA,GAKzB,UAATA,GAA6B,UAATA,GAA6B,UAATA,GACpB,UAArBkH,EAAYlH,KAQH,OAATA,GACqB,UAArBkH,EAAYlH,MACS,UAArBkH,EAAYlH,MACS,UAArBkH,EAAYlH,MACS,UAArBkH,EAAYlH,KAEZxB,QAAQC,MACP,uFACC8K,GAAe/I,GAAAA,OACRuI,GAAcvI,IAEJ,OAATR,GAAsC,OAArBkH,EAAYlH,KACvCxB,QAAQC,MACP,kEACC8K,GAAe/I,GAAAA,OACRuI,GAAcvI,IAEJ,OAATR,GAAsC,OAArBkH,EAAYlH,MACvCxB,QAAQC,MACP,2DACC8K,GAAe/I,GAAAA,OACRuI,GAAcvI,IA3BvBhC,QAAQC,MACP,oFACC8K,GAAe/I,GAAAA,OACRuI,GAAcvI,SAAAA,IA6BvBA,EAAMN,KACc,mBAAbM,EAAMN,KACO,iBAAbM,EAAMN,OACX,aAAcM,GAAAA,MAEV,IAAIzuB,MACT,0GACoCyuB,EAAMN,IAAAA,cACzCqJ,GAAe/I,GAAAA,OACRuI,GAAcvI,IAAAA,GAIC,iBAAdA,EAAMR,KAAAA,IACX,IAAMzpB,KAAOiqB,EAAMb,MAAAA,GAEX,MAAXppB,EAAI,IACO,MAAXA,EAAI,IACuB,mBAApBiqB,EAAMb,MAAMppB,IACC,MAApBiqB,EAAMb,MAAMppB,GAAAA,MAEN,IAAIxE,MACT,iBAAgBwE,EAAAA,oDACIiqB,EAAMb,MAAMppB,GAAAA,cAC/BgzB,GAAe/I,GAAAA,OACRuI,GAAcvI,IAAAA,GAOD,mBAAdA,EAAMR,MAAsBQ,EAAMR,KAAKiL,UAAW,CAAA,GAEhC,SAA3BzK,EAAMR,KAAKyI,aACX8B,IACCA,EAAiBG,cAAcj3B,IAAI+sB,EAAMR,MACzC,CAAA,IACKkL,EACL,yFAAA,IAAA,IAEMC,EAAY3K,EAAMR,OACxBuK,EAAiBG,cAAch3B,IAAI8sB,EAAMR,MAAAA,GACzCxB,QAAQ6K,KACP6B,EAAAA,kCAAsC1C,GAAe2C,IAErD,MAAOP,GACRpM,QAAQ6K,KACP6B,EAAI,gEAAA,IAKHr2B,EAAS2rB,EAAMb,MACfa,EAAMR,KAAAA,YACTnrB,EEvOG,SAAgBuM,EAAKue,GAAAA,IACtB,IAAIjtB,KAAKitB,EAAOve,EAAI1O,GAAKitB,EAAMjtB,GAAAA,OACP0O,EAFvB,CFuOa,GAAIvM,IACNqrB,IFxNX,SACNkL,EACAv2B,EACAw2B,EACAN,EACAO,GAEAl6B,OAAOqE,KAAK21B,GAAWrM,SAAQ,SAAAwM,GAAAA,IAC1B9M,EAAAA,IAEHA,EAAQ2M,EAAUG,GACjB12B,EACA02B,EACAR,EEiNA,OF/MA,KAtCyB,gDAyCzB,MAAOjxB,GACR2kB,EAAQ3kB,GAEL2kB,GAAWA,EAAM7kB,WAAW2uB,KAC/BA,GAAmB9J,EAAM7kB,UAAAA,EACzB4kB,QAAQC,MAAAA,qBACqBA,EAAM7kB,SAAW0xB,GAAAA,KACvCA,KACL,SA1BE,CE4NH9K,EAAMR,KAAKiL,UACXp2B,EACA,EACA2zB,GAAehI,IACf,WAAA,OAAMuI,GAAcvI,MAIlB2J,GAAeA,EAAc3J,IAGlCtB,GAAAA,IAAgB,SAACjpB,EAAM0c,EAAOqN,GAAAA,IACxB/pB,IAASi0B,EAAAA,MACP,IAAIn4B,MAAM,iDAGbu4B,GAASA,EAAQr0B,EAAM0c,EAAOqN,IAAAA,IAO7BqJ,EAAO,SAACmC,EAAU5xB,GAAAA,MAAa,CACpChG,IAAAA,WAAAA,IACO2C,EAAM,MAAQi1B,EAAW5xB,EAC3B+wB,GAAgBA,EAAajyB,QAAQnC,GAAO,IAC/Co0B,EAAavsB,KAAK7H,GAClBioB,QAAQ6K,KAAAA,iBAAsBmC,EAAAA,mBAA2B5xB,KAG3DlG,IAAAA,WAAAA,IACO6C,EAAM,MAAQi1B,EAAW5xB,EAC3B+wB,GAAgBA,EAAajyB,QAAQnC,GAAO,IAC/Co0B,EAAavsB,KAAK7H,GAClBioB,QAAQ6K,KAAAA,iBAAsBmC,EAAAA,oBAA4B5xB,OAKvD6xB,EAAuB,CAC5BC,SAAUrC,EAAK,WAAY,kBAC3B3C,WAAY2C,EAAK,aAAc,mBAC/BpJ,SAAUoJ,EAAK,WAAY,6BAGtBsC,EAAkBv6B,OAAOspB,OAAO,GAAI+Q,GAE1CvM,GAAQsB,MAAQ,SAAAA,GAAAA,IACTb,EAAQa,EAAMb,MAAAA,GAEJ,OAAfa,EAAMR,MACG,MAATL,IACC,aAAcA,GAAS,WAAYA,GACnC,CAAA,IACKqF,EAAYxE,EAAMb,MAAQ,GAAA,IAC3B,IAAIjtB,KAAKitB,EAAO,CAAA,IACd5qB,EAAI4qB,EAAMjtB,GACN,aAANA,EAAkB8tB,EAAM0I,SAAWn0B,EACxB,WAANrC,EAAgB8tB,EAAMoL,OAAS72B,EACnCiwB,EAAStyB,GAAKqC,GAKrByrB,EAAMqL,UAAYF,EACdvB,GAAUA,EAAS5J,IAGxBtB,GAAQ8H,OAAS,SAAAxG,GAAAA,GAQZA,EAAAA,KACHA,EAAAA,IAAgBzB,SAAQ,SAAAoC,GAAAA,GACnBA,QAAAA,IAASA,EAAMnB,KAAoB,QAE/BmB,EAAAA,UACAA,EAAAA,IAAAA,IACD1rB,EAAOrE,OAAOqE,KAAK0rB,GAAOnpB,KAAK,KAAA,MAC/B,IAAIjG,MACT,0EAA0E0D,EAAAA,SAClEszB,GAAcvI,QAM1B0J,GAAAA,EAEIJ,GAAWA,EAAUtJ,GAEF,MAAnBA,EAAAA,IAAAA,IAAAA,IACG/qB,EAAO,GACJ/C,EAAI,EAAGA,EAAI8tB,EAAAA,IAAgB7tB,OAAQD,IAAK,CAAA,IAC1CyuB,EAAQX,EAAAA,IAAgB9tB,GAAAA,GACzByuB,GAAsB,MAAbA,EAAM5qB,IAAAA,CAAAA,IAEdA,EAAM4qB,EAAM5qB,IAAAA,IAAAA,IACdd,EAAKiD,QAAQnC,GAAa,CAC7BioB,QAAQC,MACP,8EACyBloB,EAAAA,mFAExBgzB,GAAe/I,GAAAA,OACRuI,GAAcvI,IAAAA,MAOxB/qB,EAAK2I,KAAK7H,MA9Ud,GGtBA,IAGIu1B,GAeAC,GATAC,GAAoB,GAEpB7B,GAAgBjL,GAAAA,IAChB+M,GAAkB/M,GAAAA,IAClBgN,GAAehN,GAAQ8H,OACvBmF,GAAYjN,GAAAA,IACZkN,GAAmBlN,GAAQgE,QAoR/B,SAASmJ,KAAAA,IAAAA,IACJ3K,EACIA,EAAYsK,GAAkB3tB,SAAAA,GAChCqjB,EAAAA,IAAAA,IAEJA,EAAAA,IAAAA,IAAkC3C,QAAQuN,IAC1C5K,EAAAA,IAAAA,IAAkC3C,QAAQwN,IAC1C7K,EAAAA,IAAAA,IAAoC,GACnC,MAAO5nB,GACR4nB,EAAAA,IAAAA,IAAoC,GACpCxC,GAAAA,IAAoBplB,EAAG4nB,EAAAA,MAzR1BxC,GAAAA,IAAgB,SAAAsB,GACfsL,GAAmB,KACf3B,IAAeA,GAAc3J,IAGlCtB,GAAAA,IAAkB,SAAAsB,GACbyL,IAAiBA,GAAgBzL,GAGtB,EAAA,IAETgM,GAHNV,GAAmBtL,EAAAA,KAAAA,IAIfgM,IACHA,EAAAA,IAAsBzN,QAAQuN,IAC9BE,EAAAA,IAAsBzN,QAAQwN,IAC9BC,EAAAA,IAAwB,KAI1BtN,GAAQ8H,OAAS,SAAAxG,GACZ0L,IAAcA,GAAa1L,GAAAA,IAEzBzlB,EAAIylB,EAAAA,IACNzlB,GAAKA,EAAAA,KAAaA,EAAAA,IAAAA,IAA0BpI,SAySzB,IAxSXq5B,GAAkB5tB,KAAKrD,IAwSPgxB,KAAY7M,GAAQuN,yBAC/CV,GAAU7M,GAAQuN,wBAvBpB,SAAwB3E,GAAAA,IAQnB4E,EAPE56B,EAAO,WACZ66B,aAAaC,GACTC,IAASC,qBAAqBJ,GAClCtE,WAAWN,IAEN8E,EAAUxE,WAAWt2B,EAnTR,KAsTf+6B,KACHH,EAAMD,sBAAsB36B,MAcAu6B,KAxS7BP,GAAmB,MAGpB5M,GAAAA,IAAkB,SAACsB,EAAOmB,GACzBA,EAAYF,MAAK,SAAAC,GAAAA,IAEfA,EAAAA,IAA2B3C,QAAQuN,IACnC5K,EAAAA,IAA6BA,EAAAA,IAA2BqL,QAAO,SAAA9F,GAAAA,OAC9DA,EAAAA,IAAYsF,GAAatF,MAEzB,MAAOntB,GACR6nB,EAAYF,MAAK,SAAA1mB,GACZA,EAAAA,MAAoBA,EAAAA,IAAqB,OAE9C4mB,EAAc,GACdzC,GAAAA,IAAoBplB,EAAG4nB,EAAAA,SAIrByK,IAAWA,GAAU3L,EAAOmB,IAGjCzC,GAAQgE,QAAU,SAAA1C,GACb4L,IAAkBA,GAAiB5L,GAAAA,IAIlCwM,EAFCjyB,EAAIylB,EAAAA,IACNzlB,GAAKA,EAAAA,MAERA,EAAAA,IAAAA,GAAgBgkB,SAAQ,SAAAjrB,GAAAA,IAEtBw4B,GAAcx4B,GACb,MAAOgG,GACRkzB,EAAalzB,MAGXkzB,GAAY9N,GAAAA,IAAoB8N,EAAYjyB,EAAAA,OAiOlD,IAAI8xB,GAA0C,mBAAzBJ,sBA2CrB,SAASH,GAAcW,GAAAA,IAGhBh3B,EAAO61B,GACToB,EAAUD,EAAAA,IACQ,mBAAXC,IACVD,EAAAA,SAAAA,EACAC,KAEDpB,GAAmB71B,EAOpB,SAASs2B,GAAaU,GAAAA,IAGfh3B,EAAO61B,GACbmB,EAAAA,IAAgBA,EAAAA,KAChBnB,GAAmB71B,EC9Wb,SAASypB,GAAOte,EAAKue,GAAAA,IACtB,IAAIjtB,KAAKitB,EAAOve,EAAI1O,GAAKitB,EAAMjtB,GAAAA,OACP0O,EASvB,SAAS+rB,GAAe9vB,EAAGC,GAAAA,IAC5B,IAAI5K,KAAK2K,EAAAA,GAAa,aAAN3K,KAAsBA,KAAK4K,GAAI,OAAA,EAAO,IACtD,IAAI5K,KAAK4K,EAAAA,GAAa,aAAN5K,GAAoB2K,EAAE3K,KAAO4K,EAAE5K,GAAI,OAAA,EAAO,OAAA,ECdzD,SAAS06B,GAAcjvB,GAAAA,KACxBwhB,MAAQxhB,GAEdivB,GAAc/sB,UAAY,IAAIygB,IAENuM,sBAAAA,EACxBD,GAAc/sB,UAAUslB,sBAAwB,SAAShG,EAAO5I,GAAAA,OACxDoW,GAAe17B,KAAKkuB,MAAOA,IAAUwN,GAAe17B,KAAKslB,MAAOA,ICVxE,IAAIuW,GAAcpO,GAAAA,IAClBA,GAAAA,IAAgB,SAAAsB,GACXA,EAAMR,MAAQQ,EAAMR,KAAAA,KAAmBQ,EAAMN,MAChDM,EAAMb,MAAMO,IAAMM,EAAMN,IACxBM,EAAMN,IAAM,MAEToN,IAAaA,GAAY9M,IAIX,oBAAVruB,QACPA,OAAOo7B,KACPp7B,OAAOo7B,IAAI,qBA2BLC,ICvCFnD,GAAgBnL,GAAAA,IACtBA,GAAAA,IAAsB,SAAST,EAAOiG,EAAU9C,EAAU2F,GAAAA,GACrD9I,EAAMwJ,KAAAA,IAAAA,IAELvG,EACAlB,EAAQkE,EAEJlE,EAAQA,EAAAA,IAAAA,IACVkB,EAAYlB,EAAAA,MAAqBkB,EAAAA,IAAAA,OAChB,MAAjBgD,EAAAA,MACHA,EAAAA,IAAgB9C,EAAAA,IAChB8C,EAAAA,IAAqB9C,EAAAA,KAGfF,EAAAA,IAA2BjD,EAAOiG,GAI5C2F,GAAc5L,EAAOiG,EAAU9C,EAAU2F,IAG1C,IAAMkG,GAAavO,GAAQgE,QAuE3B,SAAgBwK,KAAAA,KAAAA,IAEgB,EAAAj8B,KAC1Bk8B,EAAc,KAAAl8B,KAAAgvB,IACQ,KAoIrB,SAASmN,GAAUpN,GAAAA,IAErBkB,EAAYlB,EAAAA,GAAAA,IAAAA,OACTkB,GAAaA,EAAAA,KAAwBA,EAAAA,IAAqBlB,GCjOlE,SAAgBqN,KAAAA,KACVC,EAAQ,KAAAr8B,KACRs8B,EAAO,KDcb7O,GAAQgE,QAAU,SAAS1C,GAAAA,IAEpBkB,EAAYlB,EAAAA,IACdkB,GAAaA,EAAAA,KAChBA,EAAAA,MAOGA,IAAAA,IAAalB,EAAAA,MAChBA,EAAMR,KAAO,MAGVyN,IAAYA,GAAWjN,KAiE5BkN,GAASrtB,UAAY,IAAIygB,IAAAA,IAOa,SAAS8J,EAASoD,GAAAA,IACjDC,EAAsBD,EAAAA,IAGtBjzB,EAAItJ,KAEW,MAAjBsJ,EAAE4yB,IACL5yB,EAAE4yB,EAAc,IAEjB5yB,EAAE4yB,EAAYvvB,KAAK6vB,GAAAA,IAEb9F,EAAUyF,GAAU7yB,EAAAA,KAEtBmzB,GAAAA,EACEC,EAAa,WACdD,IAEJA,GAAAA,EACAD,EAAAA,IAAiC,KAE7B9F,EACHA,EAAQiG,GAERA,MAIFH,EAAAA,IAAiCE,EAAAA,IAE3BC,EAAuB,WAAA,MACrBrzB,EAAAA,IAA2B,CAAA,GAG7BA,EAAEgc,MAAAA,IAAkB,CAAA,IACjBsX,EAAiBtzB,EAAEgc,MAAAA,IACzBhc,EAAAA,IAAAA,IAAmB,GA5EvB,SAASuzB,EAAe9N,EAAO+N,EAAgBC,GAAAA,OAC1ChO,IACHA,EAAAA,IAAkB,KAClBA,EAAAA,IACCA,EAAAA,KACAA,EAAAA,IAAgB1rB,KAAI,SAAAqsB,GAAAA,OACnBmN,EAAenN,EAAOoN,EAAgBC,MAGpChO,EAAAA,KACCA,EAAAA,IAAAA,MAAgC+N,IAC/B/N,EAAAA,KACHgO,EAAe7K,aAAanD,EAAAA,IAAYA,EAAAA,KAEzCA,EAAAA,IAAAA,KAAAA,EACAA,EAAAA,IAAAA,IAA8BgO,IAK1BhO,EApBR,CA6EK6N,EACAA,EAAAA,IAAAA,IACAA,EAAAA,IAAAA,KAAAA,IAMET,EAAAA,IAFJ7yB,EAAE4sB,SAAS,CAAAjH,IAAe3lB,EAAAA,IAAwB,OAG1C6yB,EAAY7yB,EAAE4yB,EAAYjxB,OACjCkxB,EAAU7F,gBAUP0G,GAAAA,IAAeT,EAAAA,IAChBjzB,EAAAA,OAAgC0zB,GACpC1zB,EAAE4sB,SAAS,CAAAjH,IAAe3lB,EAAAA,IAAwBA,EAAAA,IAAAA,IAAmB,KAEtE6vB,EAAQ3C,KAAKkG,EAAYA,IAG1BT,GAASrtB,UAAU+mB,qBAAuB,WAAA31B,KACpCk8B,EAAc,IAQpBD,GAASrtB,UAAUglB,OAAS,SAAS1F,EAAO5I,GAAAA,GACvCtlB,KAAAA,IAA0B,CAAA,GAIzBA,KAAAA,IAAAA,IAAuB,CAAA,IACpB88B,EAAiBrhB,SAAS6S,cAAc,OACxC2O,EAAoBj9B,KAAAA,IAAAA,IAAsB,GAAAk9B,IAAAl9B,KAAAm9B,IAAAC,IAC1B,GArJzB,SAASC,EAActO,EAAO+N,EAAgBzM,GAAAA,OACzCtB,IACCA,EAAAA,KAAoBA,EAAAA,IAAAA,MACvBA,EAAAA,IAAAA,IAAAA,GAA+BzB,SAAQ,SAAAgQ,GACR,mBAAnBA,EAAAA,KAA+BA,EAAAA,SAG3CvO,EAAAA,IAAAA,IAA2B,MAIJ,OADxBA,EAAQd,GAAO,GAAIc,IAAAA,MAEdA,EAAAA,IAAAA,MAAgCsB,IACnCtB,EAAAA,IAAAA,IAA8B+N,GAE/B/N,EAAAA,IAAmB,MAGpBA,EAAAA,IACCA,EAAAA,KACAA,EAAAA,IAAgB1rB,KAAI,SAAAqsB,GAAAA,OACnB2N,EAAc3N,EAAOoN,EAAgBzM,OAIjCtB,EAzBR,CAsJI/uB,KAAAA,IACA88B,EACCG,EAAAA,IAAuCA,EAAAA,KAAAA,KAAAA,IAIf,KAAA,IAKtBM,EACLjY,EAAAA,KAAoBgJ,GAAcc,GAAU,KAAMlB,EAAMqP,UAAAA,OACrDA,IAAUA,EAAAA,IAAsB,MAE7B,CACNjP,GAAcc,GAAU,KAAM9J,EAAAA,IAAmB,KAAO4I,EAAMM,UAC9D+O,IChMF,IAAM7G,GAAU,SAAC8G,EAAM9N,EAAOzJ,GAAAA,KACvBA,EAdgB,KAcSA,EAfR,IAqBtBuX,EAAKlB,EAAK9R,OAAOkF,GAQhB8N,EAAKtP,MAAMuP,cACmB,MAA9BD,EAAKtP,MAAMuP,YAAY,KAAcD,EAAKlB,EAAK1qB,MAAAA,IAQjDqU,EAAOuX,EAAKnB,EACLpW,GAAM,CAAA,KACLA,EAAK/kB,OAAS,GACpB+kB,EAAKhb,KAALgb,GAAAA,GAEGA,EA1CiB,GA0CMA,EA3CL,GAAA,MA8CtBuX,EAAKnB,EAAQpW,EAAOA,EA5CJ,MAmDlBmW,GAAaxtB,UAAY,IAAIygB,IAAAA,IAEO,SAASK,GAAAA,IACtC8N,EAAOx9B,KACP09B,EAAYvB,GAAUqB,EAAAA,KAExBvX,EAAOuX,EAAKlB,EAAKn6B,IAAIutB,GAAAA,OACzBzJ,EA5DuB,KA8DhB,SAAA0X,GAAAA,IACAC,EAAmB,WACnBJ,EAAKtP,MAAMuP,aAKfxX,EAAKtZ,KAAKgxB,GACVjH,GAAQ8G,EAAM9N,EAAOzJ,IAHrB0X,KAMED,EACHA,EAAUE,GAEVA,MAKHxB,GAAaxtB,UAAUglB,OAAS,SAAS1F,GAAAA,KACnCmO,EAAQ,KAAAr8B,KACRs8B,EAAO,IAAIpS,IAAAA,IAEVsE,EAAWoD,GAAa1D,EAAMM,UAChCN,EAAMuP,aAAwC,MAAzBvP,EAAMuP,YAAY,IAI1CjP,EAAShhB,UAAAA,IAIL,IAAIvM,EAAIutB,EAASttB,OAAQD,KAAAA,KAYxBq7B,EAAKr6B,IAAIusB,EAASvtB,GAAKjB,KAAKq8B,EAAQ,CAAC,EAAG,EAAGr8B,KAAKq8B,IAAAA,OAE/CnO,EAAMM,UAGd4N,GAAaxtB,UAAUwlB,mBAAqBgI,GAAaxtB,UAAUolB,kBAAoB,WAAA,IAAApqB,EAAA5J,KAAAA,KAOjFs8B,EAAKhP,SAAQ,SAACrH,EAAMyJ,GACxBgH,GAAQltB,EAAMkmB,EAAOzJ,OAAAA,ICnHV4X,GACM,oBAAVn9B,QAAyBA,OAAOo7B,KAAOp7B,OAAOo7B,IAAI,kBAC1D,MAEKgC,GAAAA,4OAEAC,GAA6B,oBAAbtiB,SAgDtB,SAAgBmY,GAAO7E,EAAO3X,EAAQif,GAAAA,OAGb,MAApBjf,EAAAA,MACHA,EAAO4mB,YAAc,IAGtBC,GAAalP,EAAO3X,GACG,mBAAZif,GAAwBA,IAE5BtH,EAAQA,EAAAA,IAAmB,KA9CnCM,GAAUzgB,UAAUsvB,iBAAmB,GASvC,CACC,qBACA,4BACA,uBACC5Q,SAAQ,SAAAxoB,GACTnF,OAAOyQ,eAAeif,GAAUzgB,UAAW9J,EAAK,CAC/Cq5B,cAAAA,EACAh8B,IAAAA,WAAAA,OACQnC,KAAK,UAAY8E,IAEzB7C,IAAAA,SAAIqB,GACH3D,OAAOyQ,eAAepQ,KAAM8E,EAAK,CAChCq5B,cAAAA,EACAC,UAAAA,EACAh+B,MAAOkD,UAiCX,IAAI+6B,GAAe5Q,GAAQuF,MAS3B,SAASsL,MAET,SAASC,KAAAA,OACDv+B,KAAKw+B,aAGb,SAASC,KAAAA,OACDz+B,KAAK0+B,iBAfbjR,GAAQuF,MAAQ,SAAA3qB,GAAAA,OACXg2B,KAAch2B,EAAIg2B,GAAah2B,IACnCA,EAAEs2B,QAAUL,GACZj2B,EAAEk2B,qBAAuBA,GACzBl2B,EAAEo2B,mBAAqBA,GACfp2B,EAAEu2B,YAAcv2B,GAazB,IAAIw2B,GAAsB,CACzBV,cAAAA,EACAh8B,IAAAA,WAAAA,OACQnC,KAAK8+B,QAIVC,GAAetR,GAAQsB,MAC3BtB,GAAQsB,MAAQ,SAAAA,GAAAA,IA1FUR,EA2FrBA,EAAOQ,EAAMR,KACbL,EAAQa,EAAMb,MACdQ,EAAkBR,EAAAA,GAGF,iBAATK,EAAmB,CAAA,IACvByQ,GAAAA,IAAmBzQ,EAAKtnB,QAAQ,KAAA,IAGjC,IAAIhG,KAFTytB,EAAkB,GAEJR,EAAO,CAAA,IAChB9tB,EAAQ8tB,EAAMjtB,GAEd88B,IAAgB,aAAN98B,GAA6B,aAATstB,GAGjB,UAANttB,GAAiB,iBAAkBitB,GAAkB,MAAT9tB,IAKhD,iBAANa,GACA,UAAWitB,GACI,MAAfA,EAAM9tB,MAINa,EAAI,QACY,aAANA,IAAAA,IAAoBb,EAM9BA,EAAQ,GACE,iBAAiB0J,KAAK7I,GAChCA,EAAI,aAEJ,6BAA6B6I,KAAK7I,EAAIstB,KAhIhBA,EAiIHL,EAAMK,OAhIV,oBAAV7tB,QAA4C,iBAAZA,SAAAA,eAAAA,eAGtCoJ,KAAKykB,IA+HJttB,EAAI,UACM,aAAa6I,KAAK7I,GAC5BA,EAAI,YACM,YAAY6I,KAAK7I,GAC3BA,EAAI,aACM,mCAAmC6I,KAAK7I,GAClDA,EAAIA,EAAE2gB,cACIod,GAAoBlB,GAAYh0B,KAAK7I,GAC/CA,EAAIA,EAAEiJ,QAAAA,WAAoB,OAAO0X,cACb,OAAVxhB,IACVA,OAAAA,GAGDsuB,EAAgBztB,GAAKb,GAKb,UAARmuB,GACAG,EAAgBuQ,UAChBjgC,MAAMC,QAAQyvB,EAAgBtuB,SAG9BsuB,EAAgBtuB,MAAQwxB,GAAa1D,EAAMM,UAAUlB,SAAQ,SAAAoC,GAC5DA,EAAMxB,MAAMgR,UAAAA,GACXxQ,EAAgBtuB,MAAM6G,QAAQyoB,EAAMxB,MAAM9tB,WAKjC,UAARmuB,GAAoD,MAAhCG,EAAgByQ,eACvCzQ,EAAgBtuB,MAAQwxB,GAAa1D,EAAMM,UAAUlB,SAAQ,SAAAoC,GAE3DA,EAAMxB,MAAMgR,SADTxQ,EAAgBuQ,UAAAA,GAElBvQ,EAAgByQ,aAAal4B,QAAQyoB,EAAMxB,MAAM9tB,OAGjDsuB,EAAgByQ,cAAgBzP,EAAMxB,MAAM9tB,UAKhD2uB,EAAMb,MAAQQ,EAEVR,EAAM4Q,OAAS5Q,EAAMkR,YACxBP,GAAoBQ,WAAa,cAAenR,EACzB,MAAnBA,EAAMkR,YAAmB1Q,EAAgBoQ,MAAQ5Q,EAAMkR,WAC3Dz/B,OAAOyQ,eAAese,EAAiB,YAAamQ,KAItD9P,EAAMuQ,SAAWzB,GAEbkB,IAAcA,GAAahQ,IAKhC,IAAMyL,GAAkB/M,GAAAA,IACxBA,GAAAA,IAAkB,SAASsB,GACtByL,IACHA,GAAgBzL,GAEEA,EAAAA,w0GCnNpB,MAAMwQ,GACI,EADJA,GAEU,EAFVA,GAGS,EAHTA,GAIgB,EAJhBA,GAKS,EAEf,SAASC,GAAQr+B,EAAKs+B,GAClB,OAAOt+B,EAAI+I,QAAO,gBAAkBuvB,GAAmB,IAAbA,EAAEv4B,OACtCu4B,EAAE7X,cACF6X,EAAEzvB,OAAO,GAAKy1B,EAAYhG,EAAEzvB,OAAO,GAAG4X,gBAiBzC,SAAS8d,GAAa54B,EAAQ64B,EAAWJ,IAC5C,MAAM5vB,EAAM,GACNiwB,EAAkBD,EACxB,SAASE,EAAKC,GACV,MAAM,IAAIx/B,MAAM,iCAAmCmG,OAAOq5B,IAE9D,SAAS7R,EAAOnpB,EAAKi7B,EAAU3/B,GAC3B0E,EAtBR,SAAoB3D,EAAK4+B,GACrB,OAAQA,GACJ,KAAKR,GACD,OAAOp+B,EAAI6I,OAAO,GAAG4X,cAAgBzgB,EAAI8I,MAAM,GACnD,KAAKs1B,GACD,OAAOC,GAAQr+B,EAAK,KACxB,KAAKo+B,GACD,OAAOC,GAAQr+B,EAAK,KAAK0gB,cAC7B,KAAK0d,GACD,OAAOC,GAAQr+B,EAAK,KAExB,QACI,OAAOA,GAUL6+B,CAAWl7B,EAAKi7B,GACtBpwB,EAAI7K,GAAO1E,EAEf,IAAK,IAAI6/B,KAAUn5B,EAAQ,CACvB,IAAIi5B,EAAWR,GAKf,GAJc,MAAVU,GACAJ,EAAKI,GAGLA,aAAkBv5B,EAAO,CACzB,MAAMF,EAAOy5B,EAAOt5B,QAAQs5B,EAAOr5B,KACnCq5B,EAAkC,IAAzBA,EAAOn5B,OAAO5F,OAAesF,EAAO,CAACA,GAAMX,OAAOo6B,EAAOn5B,QAClEi5B,EAAWH,EAEf,GAAI5gC,MAAMC,QAAQghC,GACd,OAAQA,EAAO/+B,QACX,KAAK,EACD2+B,EAAKI,GACL,MACJ,KAAK,EACDhS,EAAOgS,EAAO,GAAIF,GAAU,GAC5B,MACJ,KAAK,EACD,MAAM3/B,EAAQ6/B,EAAO,GACrBhS,EAAOgS,EAAO,GAAIF,EAAU3/B,GAC5B,MACJ,QACI6tB,EAAOgS,EAAO,GAAIF,EAAUE,EAAOh2B,MAAM,QAG1B,iBAAXg2B,EACZhS,EAAOgS,EAAQF,GAAU,GAGzBF,EAAKI,GAGb,OAAOtwB,EC7DJ,SAASuwB,GAAM/+B,GAClB,MAAMg/B,EAAW,IAAIt4B,EAAU,GAC/B,GAbG,SAAkB1G,EAAKg/B,GAE1B,GAAW,MAAPh/B,GAAe,KAAK2I,KAAK3I,GAAM,CAC/B,MAAMmC,GAAKnC,EAAI+I,QAAQ,IAAK,IAC5B,IAAKf,OAAOyH,MAAMtN,GAEd,OADA68B,EAASl4B,SAAW3E,GACb,EAGf,OAAO,EAIH88B,CAASj/B,EAAKg/B,GACd,OAAOA,EAASl4B,SAGhB,MAAM,IAAI3H,MAAM,6CCZbN,SAAAA,GAAAA,GACH,OAACqgC,EAADvd,OAAA1iB,iHCKkB8tB,YAAAA,GACuBA,MAAAA,GAELoS,sBAAAA,EAAWC,GAC3C,OADKvgC,KACEA,MAAAA,MADFA,KACmBA,MAAAA,MAAiBsgC,EAAzCE,gBAGA,OADKxgC,KACLkuB,MAAA0F,UAsBW6M,SAAAA,GAAAA,EACAC,EACApb,EACA2H,GAsGsCiB,MAAAA,EApGjD,IAAAyS,GAEUrb,GAAAA,IAFWob,EAAKpb,EAAM2H,IACtBwT,GAuDd,OAAAG,GAAAC,GA6C6D3S,GA1F9CuS,SAAAA,GAAAA,EAAmBC,EAA4BI,EAAOC,EAAQ9T,GAyFxBiB,MAAAA,EAvFjD,IAAAyS,GAAA,CAEWG,EAAOC,IAAAA,IAFGL,EAAKI,EAAOC,EAAO9T,IAC9BwT,GA0Cd,OAAAG,GAAAC,GA6C6D3S,GC3I9D,MAAM8S,WAAep5B,EACxB/H,YAAYohC,EAAO/tB,GACfoQ,QACAtjB,KAAKihC,MAAiB,EAARA,EACdjhC,KAAKkT,OAASA,GAQf,SAASguB,GAAuBC,EAAOC,GAE1C,OAAa,CACT,MAAMriC,EAAIoiC,EAAOv3B,EAAIw3B,EACrB,GAAU,IAANx3B,EACA,OAAO,EAEN,GAAKA,EAAI,GAAO,EAMjB,OAAQ7K,EAAImiC,GAAuBniC,EAAIA,KAAO6K,EAAI,IAAQ,EAL1Du3B,EAASpiC,EAAIA,EACbqiC,KAAax3B,EAAI,IA8BKgN,GAAS,WAAY,GAAG,GAkBnBA,GAAS,WAAY,GAAG,GAmGjBqM,GAAWoe,IAAmCpgC,GAAMigC,GAAuB,EAAGjgC,IAAIqgC,YAyCzH,SAASC,GAAmB33B,GAC/B,OAAOA,EAAEq3B,MAON,SAASO,GAAmB53B,EAAG3I,GAClC,OAAO2I,EAAEsJ,OAAOjS,GAGb,SAASwgC,GAAqB73B,EAAG3I,GACpC,OAAO6V,GAAY0qB,GAAmB53B,EAAG3I,IAAI,EAAO,GAGjD,SAASygC,GAAsB93B,EAAG3I,EAAGqC,GACxCsG,EAAEsJ,OAAOjS,GAAU,EAAJqC,EAGZ,SAASq+B,GAAmBR,EAAOC,GAEtC,OAAa,CACT,MAAMriC,EAAIoiC,EAAOv3B,EAAIw3B,EACrB,GAAU,IAANx3B,EACA,OAAOgN,GAAS,EAAG,GAAG,GAErB,GAAKhN,EAAI,GAAO,EAMjB,OAAOwM,GAAYrX,EAAG4iC,GAAmBvrB,GAAYrX,EAAGA,MAAQ6K,EAAI,KALpEu3B,EAAQ/qB,GAAYrX,EAAGA,GACvBqiC,KAAax3B,EAAI,IAUtB,SAASg4B,GAAmBT,EAAOC,GAEtC,OAAa,CACT,MAAMriC,EAAIoiC,EAAOv3B,EAAIw3B,EACrB,GAAU,IAANx3B,EACA,OAAO,EAEN,GAAKA,EAAI,GAAO,EAMjB,OAAQ7K,EAAI6iC,GAAmB7iC,EAAIA,KAAO6K,EAAI,IAAQ,EALtDu3B,EAASpiC,EAAIA,EACbqiC,KAAax3B,EAAI,IAoCtB,MAMMi4B,GAAwBjrB,GAAS,SAAU,GAAG,GAE9CkrB,GAA2BlrB,GAAS,SAAU,GAAG,GAExBA,GAAS,SAAU,GAAG,GA0BrD,SAASmrB,GAAqBl2B,GACjC,OAAO,IAAIm1B,GAAOn1B,EAAG,IAAIy1B,WAAWz1B,IAOjC,SAASm2B,GAAmBp4B,GAC/B,MAeMq3B,EAAgD,EAf/B,EAACgB,EAAQhe,KAE5B,OAAa,CACT,MAAMie,EAAKD,EAAQhhC,EAAIgjB,EACvB,IAAW,IAANhjB,GAA8B,IAAVihC,EAAGjhC,GACxB,OAAQA,EAAI,EAAK,EAGjBghC,EAASC,EACTje,EAAShjB,EAAI,IAMXkhC,CAAev4B,EAAEsJ,OAAQtJ,EAAEq3B,MAAQ,GAEjD,OADAr3B,EAAEq3B,MAAiB,EAARA,EACJr3B,EASJ,SAASw4B,GAAmBrjC,GAC/B,MAAMooB,EAA0B,GAAlBpoB,EAAI,EAAK,EAAIA,GAC3B,GAAIooB,EAvE0B,SAuEA,CAC1B,MAAM9a,EAAI01B,GAAqB,GAE/B,OADA11B,EAAE6G,OAAO,GAAY,EAANiU,EACR6a,GAAmB31B,GAEzB,CACD,MAAMg2B,EAAMN,GAdiB,GAe7B,IAAK,IAAI9gC,EAAI,EAAGA,GAAMqhC,EAA4BrhC,IAC9CohC,EAAInvB,OAAOjS,MAAYkmB,EAAMya,GA/EP,SA+E8C3gC,IA/E9C,SA+E4E,EAEtG,OAAO+gC,GAAmBK,IAa3B,SAASE,GAAoB34B,GAChC,GAAgB,IAAZA,EAAEq3B,MACF,OAAqB,EAAdr3B,EAAEsJ,OAAO,GAEf,CACD,IAAIqS,EAAM,EACV,IAAK,IAAItkB,EAAI2I,EAAEq3B,MAAQ,EAAGhgC,GAAK,EAAGA,IAC9BskB,EAAQ3b,EAAEsJ,OAAOjS,GArGK,SAqGsBskB,EAAQ,EAExD,OAAa,EAANA,GAiBR,MAAMid,GAAmBJ,GAAmB,GAEtCK,GAAoBL,GAAmB,GA2B7C,SAASM,GAAoB94B,GAChC,OAAOA,EAAEq3B,MAAQ,EA6Ed,SAAS0B,GAAoBj2B,GAChC,OAAmB,IAAZA,EAAEu0B,MAgBN,SAAS2B,GAAmBl2B,EAAGH,GAClC,GAAIG,EAAEu0B,QAAU10B,EAAE00B,MAAO,CAoBrB,MAnBc,EAAC4B,EAAQC,EAAQ7e,KAE3B,OAAa,CACT,MAAM8e,EAAKF,EAAQG,EAAKF,EAAQ7hC,EAAIgjB,EACpC,IAAU,IAANhjB,EACA,OAAO,EAEN,GAAI8hC,EAAG9hC,KAAO+hC,EAAG/hC,GAOlB,OAAO,EANP4hC,EAASE,EACTD,EAASE,EACT/e,EAAShjB,EAAI,IASlBgiC,CAAMv2B,EAAEwG,OAAQ3G,EAAE2G,OAAQxG,EAAEu0B,MAAQ,GAG3C,OAAO,EA0CR,SAASiC,GAAqBx2B,EAAGH,GACpC,GAAIG,EAAEu0B,MAAQ10B,EAAE00B,MACZ,OAAO,EAEN,GAAIv0B,EAAEu0B,MAAQ10B,EAAE00B,MACjB,OAAO,EAyBP,OAAgD,EAtBlC,EAAC4B,EAAQC,EAAQ7e,KAE3B,OAAa,CACT,MAAM8e,EAAKF,EAAQG,EAAKF,EAAQ7hC,EAAIgjB,EACpC,IAAU,IAANhjB,EACA,OAAO,EAEN,GAAI8hC,EAAG9hC,KAAO+hC,EAAG/hC,GAMjB,OAAI8hC,EAAG9hC,GAAK+hC,EAAG/hC,IACT,EAGA,EATP4hC,EAASE,EACTD,EAASE,EACT/e,EAAShjB,EAAI,IAYlBgiC,CAAMv2B,EAAEwG,OAAQ3G,EAAE2G,OAAQxG,EAAEu0B,MAAQ,GAI5C,SAASkC,GAAgBz2B,EAAGH,GAC/B,OAAsC,IAA/B22B,GAAqBx2B,EAAGH,GAoE5B,SAAS62B,GAAgCC,EAAOC,EAAOC,GAE1D,OAAa,CACT,MAAMl3B,EAAIg3B,EAAO/5B,EAAIg6B,EAAOh9B,EAAIi9B,EAChC,KAAI5sB,GAAQrN,EAAGsN,GAAS,EAAG,GAAG,IAAU,GAQxC,MARA,CACI,MAAM4sB,EAAMrtB,GAAYsrB,GAAqBp1B,EAAG/F,GAAIgD,GACpDo4B,GAAsBr1B,EAAG/F,IAAMuQ,GAAMH,GAAc8sB,EAAK1B,MACxDuB,EAAQh3B,EACRi3B,EAAQjtB,GAAYmtB,EAAK3B,IACzB0B,EAASj9B,EAAI,IAOlB,SAASm9B,GAAmC/2B,EAAGH,GAClD,MAAMm3B,EAA6B,EAAxBnC,GAAmB70B,GACxBL,EAAI01B,GAAqB2B,EAAK,GAC9BC,EAAM7sB,GAAYvK,GAAG,EAAO,GAClC,IAAIjD,EAAIsN,GAAS,EAAG,GAAG,GACvB,IAAK,IAAI3V,EAAI,EAAGA,GAAMyiC,EAAK,EAAIziC,IAAK,CAChC,MAAMuiC,EAAMrtB,GAAYA,GAAY7M,EAAGm4B,GAAqBp1B,EAAGpL,IAAKmV,GAAYqrB,GAAqB/0B,EAAGzL,GAAI0iC,IAC5GjC,GAAsBr1B,EAAGpL,IAAM4V,GAAMH,GAAc8sB,EAAK1B,MACxDx4B,EAAI+M,GAAYmtB,EAAK3B,IAGzB,OADAuB,GAAgC/2B,EAAG/C,EAAGo6B,GAC/B1B,GAAmB31B,GAsBvB,SAASu3B,GAA2Bl3B,EAAGH,GAC1C,MAAMs3B,EAAmC,IAA1BtC,GAAmB70B,GAC5Bo3B,EAAmC,IAA1BvC,GAAmBh1B,GAClC,OAAIs3B,GAAUC,EA5DX,SAA6Cp3B,EAAGH,GACnD,MAAMF,EAAI01B,GAAqB,GACzByB,EAAMptB,GAAYU,GAAYpK,GAAG,EAAO,GAAIoK,GAAYvK,GAAG,EAAO,IAGxE,OAFAm1B,GAAsBr1B,EAAG,IAAMwK,GAAMH,GAAc8sB,EAAK1B,MACxDJ,GAAsBr1B,EAAG,IAAMwK,GAAMR,GAAYmtB,EAAK3B,MAC/CG,GAAmB31B,GAwDf03B,CAAoCvC,GAAmB90B,EAAG,GAAI80B,GAAmBj1B,EAAG,IAEtFs3B,EACEJ,GAAmCl3B,EAAGi1B,GAAmB90B,EAAG,IAE9Do3B,EACEL,GAAmC/2B,EAAG80B,GAAmBj1B,EAAG,IA7BpE,SAAgDG,EAAGH,GACtD,MAAMF,EAAI01B,GAAqBr1B,EAAEu0B,MAAQ10B,EAAE00B,OACrC+C,EAAK33B,EAAE6G,OACb,IAAK,IAAIjS,EAAI,EAAGA,GAAMyL,EAAEu0B,MAAQ,EAAIhgC,IAAK,CACrC,MAAMgjC,EAAMntB,GAAYpK,EAAEwG,OAAOjS,IAAI,EAAO,GAC5C,IAAIqI,EAAIsN,GAAS,EAAG,GAAG,GACnBtQ,EAAIrF,EACR,IAAK,IAAIwD,EAAI,EAAGA,GAAM8H,EAAE00B,MAAQ,EAAIx8B,IAAK,CACrC,MAAMy/B,EAAMptB,GAAYvK,EAAE2G,OAAOzO,IAAI,EAAO,GACtC++B,EAAMrtB,GAAYA,GAAYW,GAAYktB,EAAG19B,IAAI,EAAO,GAAIgD,GAAI8M,GAAY6tB,EAAKC,IACvFF,EAAG19B,GAAkE,IAAxDuQ,GAAMH,GAAc8sB,EAAK1B,KACtCx4B,EAAI+M,GAAYmtB,EAAK3B,IACrBv7B,EAAMA,EAAI,EAAK,EAEnB88B,GAAgC/2B,EAAG/C,EAAGhD,GAE1C,OAAO07B,GAAmB31B,GAgBf83B,CAAuCz3B,EAAGH,GAIlD,MAAM63B,WAA8Bx8B,EACvC/H,YAAYwkC,EAAMC,EAAWh+B,EAAGi+B,EAAMC,EAAMC,EAAOC,GAC/CphB,QACAtjB,KAAKqkC,KAAe,EAAPA,EACbrkC,KAAKskC,UAAyB,EAAZA,EAClBtkC,KAAKsG,EAAS,EAAJA,EACVtG,KAAKukC,KAAe,EAAPA,EACbvkC,KAAKwkC,KAAe,EAAPA,EACbxkC,KAAKykC,MAAiB,EAARA,EACdzkC,KAAK0kC,OAASA,GAQf,SAASC,GAAwBN,EAAM/9B,EAAGi+B,EAAMC,GACnD,OAAO,IAAIJ,GAAsBC,EAAMzC,GAAmB,EAAGyC,GAAO/9B,EAAGi+B,EAAMC,KAnf5C,GAmf8EH,GAAQphB,MAnftF,GAmf6HohB,IAASpjC,GAAM2gC,GAAmB,EAAGyC,EAAOpjC,IAAIqgC,aAG3M,MAAMsD,GAAqB,CAACD,GAAwB,EAAG,GAAI,UAAW,WAAYA,GAAwB,EAAG,GAAI,SAAU,WAAYA,GAAwB,EAAG,GAAI,SAAU,UAAWA,GAAwB,EAAG,GAAI,QAAS,UAAWA,GAAwB,EAAG,GAAI,QAAS,SAAUA,GAAwB,EAAG,GAAI,OAAQ,SAAUA,GAAwB,EAAG,GAAI,MAAO,QAASA,GAAwB,EAAG,GAAI,MAAO,QAASA,GAAwB,EAAG,GAAI,KAAM,OAAQA,GAAwB,GAAI,GAAI,KAAM,OAAQA,GAAwB,GAAI,EAAG,IAAK,MAAOA,GAAwB,GAAI,EAAG,GAAI,KAAMA,GAAwB,GAAI,EAAG,GAAI,MA+BpmB1hB,GArhBC,IAqhBkChiB,GAAO2gC,GAAmB,EAAG3gC,GAAK,GAAIqgC,YAEvEre,GAvhBD,IAuhBoChiB,GAAM2gC,GAAmB,EAAG3gC,IAAIqgC,YAEhEre,GAzhBJ,IAyhBuChiB,GAAM0gC,GAAmB/qB,GAAS,EAAG,GAAG,GAAQ3V,KA4ItE2jC,GAAmB,GAAGJ,KAErE,SAASK,GAAiBn4B,EAAGH,GAChC,OAAOq3B,GAA2Bl3B,EAAGH,GAGlC,SAASu4B,GAA6B/lC,EAAGwG,EAAGqG,EAAGhC,GAClD,MAAMqS,EAAe,CAACld,EAAEmU,OAAQwvB,GAAoB3jC,IAC9CooB,EAAMlL,EAAa,GACnB8oB,EAAiB,CAACn5B,EAAEsH,OAAQwvB,GAAoB92B,IAChDo5B,EAAyB,EAApBD,EAAe,GACpBE,EAAMF,EAAe,GACrBG,EAAMpuB,GAAYvR,GAAG,EAAO,GAClC,IAAId,EAAI,EACJ0gC,EAAI/uB,GAAY8uB,EAAKpuB,GAAYmuB,EAAI,IAAI,EAAO,IACpD,KAAQtuB,GAAQwuB,EAAGvuB,GAAS,EAAG,GAAG,IAAU,GAAanS,EAAIugC,GAAK,CAC9D,GAAIvgC,EAAIwX,EAAa,GACjB,MAAO,IAAI3b,MAAM,qEAErB,IAAI8kC,IAASvuB,GAAMH,GAAcyuB,EAAGrD,KAChCuD,EAAMhvB,GAAY8uB,EAAGtD,IACrBuD,GAAOje,EAAI1iB,EAAImF,GACfud,EAAI1iB,EAAImF,GAAOud,EAAI1iB,EAAImF,GAAKw7B,EAAO,GAGnCje,EAAI1iB,EAAImF,GAAOud,EAAI1iB,EAAImF,IA5rBD,SA4rB4Bw7B,GAAQ,EAC1DC,EAAMlvB,GAAYkvB,EAAKzuB,GAAS,EAAG,GAAG,KAGtCuuB,EADA1gC,EAAIugC,EACA7uB,GAAYkvB,EAAKjvB,GAAY8uB,EAAKpuB,GAAYmuB,EAAIxgC,EAAI,IAAI,EAAO,KAGjE4gC,EAER5gC,EAAMA,EAAI,EAAK,EAEnBu9B,GAAmBjjC,GAShB,SAASumC,GAA6BvmC,EAAGwG,EAAGqG,EAAGhC,GAClD,MAAMqS,EAAe,CAACld,EAAEmU,OAAQwvB,GAAoB3jC,IAC9CooB,EAAMlL,EAAa,GACnB8oB,EAAiB,CAACn5B,EAAEsH,OAAQwvB,GAAoB92B,IAChDo5B,EAAyB,EAApBD,EAAe,GACpBE,EAAMF,EAAe,GACrBG,EAAMpuB,GAAYvR,GAAG,EAAO,GAClC,IAAId,EAAI,EACJ0gC,EAAI/uB,GAAY8uB,EAAKpuB,GAAYmuB,EAAI,IAAI,EAAO,IACpD,KAAQtuB,GAAQwuB,EAAGvuB,GAAS,EAAG,GAAG,IAAU,GAAanS,EAAIugC,GAAK,CAC9D,GAAIvgC,EAAIwX,EAAa,GACjB,MAAO,IAAI3b,MAAM,qEAErB,IAAI8kC,IAASvuB,GAAMH,GAAcyuB,EAAGrD,KAChCuD,EAAMhvB,GAAY8uB,EAAGtD,IACrBuD,EA/tBsB,SA+tBMje,EAAI1iB,EAAImF,GACpCud,EAAI1iB,EAAImF,GAAOud,EAAI1iB,EAAImF,GAAKw7B,EAAO,GAGnCje,EAAI1iB,EAAImF,GAAOw7B,GAnuBO,SAmuBqBje,EAAI1iB,EAAImF,IAAO,EAC1Dy7B,EAAMlvB,GAAYkvB,EAAKzuB,GAAS,EAAG,GAAG,KAGtCuuB,EADA1gC,EAAIugC,EACA7uB,GAAYkvB,EAAKjvB,GAAY8uB,EAAKpuB,GAAYmuB,EAAIxgC,EAAI,IAAI,EAAO,KAGjE4gC,EAER5gC,EAAMA,EAAI,EAAK,EAEnBu9B,GAAmBjjC,GAShB,SAASwmC,GAA0BxmC,EAAG6M,EAAGhC,GAC5C,MAAMqS,EAAe,CAACymB,GAAoB92B,GAAI82B,GAAoB3jC,IAC5DymC,EAAyB,EAAlBvpB,EAAa,GACpBwpB,EAAyB,EAAlBxpB,EAAa,GAC1B,GAAIupB,EAAQC,EAAO77B,EACf,OAAO,EAEN,CACD,MAAMm7B,EAAiB,CAACn5B,EAAEsH,OAAQnU,EAAEmU,QAC9BwyB,EAAKX,EAAe,GACpBY,EAAKZ,EAAe,GACpBx/B,EAAmgB,GAApf,IAATkgC,EAAgBD,IAAS57B,KAAU87B,EAAG97B,GAAK+7B,EAAG,MAAY9uB,GAAMR,GAAYF,GAAYC,GAAYU,GAAY4uB,EAAGF,IAAO,EAAO,GAAI3D,IAAwB/qB,GAAY4uB,EAAGF,EAAO,IAAI,EAAO,IAAK1uB,GAAY6uB,EAAG,IAAI,EAAO,KAAYH,IAAUC,EAAO77B,KAAW87B,EAAGF,IAASG,EAAGF,GAAQ,MAAY5uB,GAAMR,GAAYF,GAAYC,GAAYU,GAAY4uB,EAAGF,IAAO,EAAO,GAAI3D,IAAwB/qB,GAAY4uB,EAAGF,EAAO,IAAI,EAAO,IAAKrvB,GAAYW,GAAY6uB,EAAGF,IAAO,EAAO,GAAI7uB,GAAS,EAAG,GAAG,OACzf,OAAU,IAANrR,EAC8C,IApfbqgC,EAofAh8B,EApfI2C,EAofDxN,EApfI8mC,EAofD,GApfTn5B,EAofAd,GAnf/Bq1B,MAAQ2E,EAAOr5B,EAAE00B,MAAQ4E,GACrB,EAEDn5B,EAAEu0B,MAAQ2E,EAAOr5B,EAAE00B,MAAQ2E,EAC1B,EA6BgD,EA1BzC,EAAC/C,EAAQC,EAAQ7e,KAC3Bgf,EACA,OAAa,CACT,MAAMF,EAAKF,EAAQG,EAAKF,EAAQ7hC,EAAIgjB,EACpC,IAAU,IAANhjB,EACA,OAAO,EAEN,CACD,MAAMgjC,EAAoC,GAA5BhjC,EAAI2kC,EAAM,EAAI7C,EAAG9hC,EAAI2kC,IAC7BE,EAAoC,GAA5B7kC,EAAI4kC,EAAM,EAAI7C,EAAG/hC,EAAI4kC,IACnC,GAAI5B,IAAQ6B,EAAK,CACbjD,EAASE,EACTD,EAASE,EACT/e,EAAShjB,EAAI,EACb,SAASgiC,EAER,OAAIgB,EAAM6B,GACJ,EAGA,KAMhB7C,CAAMv2B,EAAEwG,OAAQ3G,EAAE2G,OAASxG,EAAEu0B,MAAQ2E,EAAM,IAmdnC,EAGA,EAIA,EAAJrgC,EA5fZ,IAAmCmH,EAAGk5B,EAAIr5B,EAAGs5B,EAigB7C,SAASE,GAAoBl6B,EAAGD,GACnC,GAAI+2B,GAAoB/2B,GACpB,MAAO,IAAItL,MAEV,GAAIoiC,GAAoB72B,GAAK62B,GAAoB92B,GAClD,MAAO,CAAC62B,GAAmB52B,GAE1B,CACD,MAAM9M,EAnvBP,SAA4BA,GAC/B,OAAO,IAAIiiC,GAAOjiC,EAAEkiC,MAAYliC,EAAEmU,OnC7DrBjJ,SmC+yBC+7B,CAAmBn6B,GACvB6T,EAAIqiB,GAAuBW,GAAoB72B,GAAK62B,GAAoB92B,GAAM,EAAK,GACzF,IAAIc,EAAIg2B,GAAoB72B,GAC5B,MAAM4tB,EAA6B,EAAzBiJ,GAAoB92B,GAC9B,IAAIhC,EAAI8C,EAAI+sB,EACZ,MAAMwM,EAAaC,MAEnB,IAAIhe,GAAW,EACf,MAAQA,GAAU,CACd+d,EAAU,CAACvmB,EAAG3gB,EAAG6K,EAAG8C,IACpB,MAAMnH,EAAyC,EAArCggC,GAA0BxmC,EAAG6M,EAAGhC,GACtCrE,EAAI,GACJu/B,GAA6B/lC,EAAGwG,EAAGqG,EAAGhC,GACtC07B,GAA6B5lB,EAAGna,EAAGi9B,GAAkB54B,GACrDq8B,EAAU,CAACvmB,EAAG3gB,EAAG6K,EAAG8C,MAGpBwb,EAAmB,IAAN3iB,GAAmB,IAANqE,EACrBse,IACGxb,IAAO+sB,EAAI7vB,GACXq8B,EAAU,CAACvmB,EAAG3gB,EAAG6K,EAAI,EAAG8C,IACxB9C,EAAMA,EAAI,EAAK,IAGfq8B,EAAU,CAACvmB,EAAG3gB,EAAG6K,EAAI,EAAG8C,EAAI,IAC5B9C,EAAMA,EAAI,EAAK,EACf8C,EAAMA,EAAI,EAAK,KAK/B,MAAO,CAACs1B,GAAmBtiB,GAAIsiB,GAAmBjjC,KAkE1BqjC,GAAmB,GA8E5C,SAAS+D,GAAqBv8B,GACjC,OAAOw4B,GAAmBx4B,GAGvB,SAASw8B,GAAqBx8B,GACjC,OAx3BG,SAA8B7K,GACjC,MAAMooB,EAAOxQ,GAAQ5X,EAAG6X,GAAS,EAAG,GAAG,IAAU,EAAKA,GAAS,EAAG,GAAG,GAAS7X,EACxEsN,EAAI01B,GAtByB,GAuBnC,IAAK,IAAI9gC,EAAI,EAAGA,GAAMolC,EAA8BplC,IAChDoL,EAAE6G,OAAOjS,GAAuH,IAA7G4V,GAAMP,GAAWD,GAAY8Q,EAAKwa,GAAmBE,GAAuB5gC,IAAK4gC,KAExG,OAAOG,GAAmB31B,GAk3BnBi6B,CAAqB18B,GAsDzB,SAAS28B,GAAsB38B,GAClC,MAAM48B,EAAgC,EAAzB9D,GAAoB94B,GAiB3B68B,EAAU,CAACC,EAAeC,EAAYC,EAASC,KACjDJ,EACA,OAAa,CACT,MAAMK,EAAYJ,EAAexzB,EAASyzB,EAAYI,EAAMH,EAASxuB,EAAQyuB,EAC7E,GAAK3hB,GAAQ9M,GAoBR,CACD,MAAM4uB,EAAiC,EAA3BzE,GAAoBwE,GAChC,OAAID,GAAsB,IAARE,EACP9zB,EAGA8R,GAAKrjB,EAAcqlC,GAAM9zB,GA1BnB,CACjB,MAAM+zB,EAAU5jB,GAAKjL,GACf6D,EAAe8pB,GAAoBgB,EAAK3jB,GAAKhL,GAAO,IACpD8uB,EAAKjrB,EAAa,GAClBkrB,EAAKlrB,EAAa,GACxB,GAAI6qB,GAAanE,GAAoBwE,GAAK,CACtCT,EAAgBI,EAChBH,EAAazzB,EACb0zB,EAAUM,EACVL,EAAYI,EACZ,SAASR,EAGTC,EAAgBI,EAChBH,EAAaF,GAAQ,EAAOvzB,EAAQg0B,EAAID,GACxCL,EAAUO,EACVN,EAAYI,EACZ,SAASR,KAenBW,EAAWX,GAAQ,EAAM1hB,KAASnb,EApD1B,EAACy9B,EAAW9D,EAAO+D,KAE7B,OAAa,CACT,MAAMC,EAAQF,EAAW/gC,EAAIi9B,EAAOiE,EAAQF,EAC5C,GAAI5E,GAAoB8E,GAAShB,EAC7B,OAAOxhB,GAAK,CAAC1e,EAAGkhC,GAAQD,GAGxBF,EAAYriB,GAAK,CAAC1e,EAAGkhC,GAAQD,GAC7BhE,EAASj9B,EAAI,EACbghC,EAAYzC,GAAiB2C,EAAOA,KA0CLC,CAAM1iB,KAAS,EAAGqd,GAAmB,MAChF,OAAIld,GAAQkiB,GACD,IAGA7kB,GAAK,GAAI4C,GAAQiiB,IAmCzB,SAASM,GAAqB99B,GACjC,OAAOA,EAAEq3B,OAAS,EAGf,SAAS0G,GAAsB/9B,GAClC,MAAMu7B,EAAIv7B,EAEV,OADU,EACFu7B,EAAElE,MACe,EAAdkE,EAAEjyB,OAFH,GAKC,ECn5CR,MAAM00B,WAAmBhgC,EAC5B/H,YAAYgoC,EAASvkC,GACjBggB,QACAtjB,KAAK6nC,QAAqB,EAAVA,EAChB7nC,KAAKsD,EAAIA,EAEblC,WACI,MAAMrC,EAAIiB,KAEV,OADgD,EAA7B8nC,GAAwB/oC,IAEvC,KAAK,EACD,OAAO4jC,GAAoBoF,GAAkBhpC,IAAM,IAAO,IAAMwnC,GAAsBwB,GAAkBhpC,IAE5G,KAAK,EACD,MAAO,IAEX,KAAK,EACD,OAAOwnC,GAAsBwB,GAAkBhpC,IAEnD,QACI,MAAO,IAAIuB,MAAM,+BAI7BsD,OAAO+L,GAEH,OAAQA,aAAei4B,IAAeI,GADxBhoC,KAC+D2P,GAEjFtQ,cAEI,OAAsC,GAkWP,IAA/ByoC,GADkC3C,EAlWxBnlC,MAoWH,EAGC8nC,GAAwB3C,GDzHjC,SAA2Bv7B,GAC9B,IAAIlE,EAAM,EACV,IAAK,IAAIzE,EAAI,EAAGA,GAAM2I,EAAEq3B,MAAQ,EAAIhgC,IAChCyE,EAAQkE,EAAEsJ,OAAOjS,IAAMyE,GAAO,GAAM,EAExC,OAAa,EAANA,ECoHkCuiC,CAAkBF,GAAkB5C,IAAO,GALjF,IAAmCA,EA/VtCt+B,OAAOsd,GAEH,OAAOne,EADOhG,MAGlB4E,UAAU+K,GAEN,GAAIA,aAAei4B,GACf,OAAiD,GA6UrDM,GADoCt+B,EA9UtB5J,KA8UyBmoC,EA5UOx4B,IA8UvC,EAEFq4B,GAAgCp+B,EAAGu+B,GACjC,EAGA,GAjVH,MAAO,IAAI7nC,MAAM,wDAyUtB,IAAqCsJ,EAAGu+B,GAhUxC,SAASC,GAA0BP,EAASvkC,GAC/C,OAAO,IAAIskC,GAAWC,EAASvkC,GAW5B,SAAS+kC,GAAyBz+B,GACrC,OAAI89B,GAAqB99B,IAAO+9B,GAAsB/9B,GAAKg+B,GAAWU,SAC3DV,GAAWW,YAAYZ,GAAsB/9B,IAG7CA,EAyBR,SAASk+B,GAAwB/oC,GACpC,OAAOA,EAAE8oC,QAGN,SAASE,GAAkBhpC,GAC9B,OAAOA,EAAEuE,EAGN,SAAS0kC,GAAgCjpC,EAAGW,GAC/C,MAAMokB,EAAa,CAACgkB,GAAwB/oC,GAAI+oC,GAAwBpoC,IACxE,IAAI8oC,EA8CJ,OA3CQA,GAFc,IAAlB1kB,EAAW,IACW,IAAlBA,EAAW,GACe,EAEH,IAAlBA,EAAW,GACU,EAEH,IAAlBA,EAAW,GACU,EAGA,EAGP,IAAlBA,EAAW,IACM,IAAlBA,EAAW,GACe,EAEH,IAAlBA,EAAW,GACU,EAEH,IAAlBA,EAAW,GACU,EAGA,EAGP,IAAlBA,EAAW,IACM,IAAlBA,EAAW,GACe,EAEH,IAAlBA,EAAW,GACU,EAEH,IAAlBA,EAAW,GACU,EAGA,EAIJ,EAEtB0kB,GACJ,KAAK,EAGL,KAAK,EACD,OAAO5F,GAAmBmF,GAAkBhpC,GAAIgpC,GAAkBroC,IAEtE,KAAK,EAQL,KAAK,EACD,QAAIijC,GAAoBoF,GAAkBhpC,KAC/B4jC,GAAoBoF,GAAkBroC,IAMrD,KAAK,EACD,OAAO,EAEX,KAAK,EAGL,KAAK,EACD,OAAOijC,GAAoBoF,GAAkBroC,IAEjD,KAAK,EAGL,KAAK,EACD,OAAOijC,GAAoBoF,GAAkBhpC,IAEjD,KAAK,EACD,MAAO,IAAIuB,MAAM,mDAStB,SAAS4nC,GAAgCnpC,EAAGW,GAC/C,MAAMokB,EAAa,CAACgkB,GAAwB/oC,GAAI+oC,GAAwBpoC,IACxE,IAAI8oC,EA8CJ,OA3CQA,GAFc,IAAlB1kB,EAAW,IACW,IAAlBA,EAAW,GACe,EAEH,IAAlBA,EAAW,GACU,EAEH,IAAlBA,EAAW,GACU,EAGA,EAGP,IAAlBA,EAAW,IACM,IAAlBA,EAAW,GACe,EAEH,IAAlBA,EAAW,GACU,EAEH,IAAlBA,EAAW,GACU,EAGA,EAGP,IAAlBA,EAAW,IACM,IAAlBA,EAAW,GACe,EAEH,IAAlBA,EAAW,GACU,EAEH,IAAlBA,EAAW,GACU,EAGA,EAIJ,EAEtB0kB,GACJ,KAAK,EACD,OAAOrF,GAAgB4E,GAAkBhpC,GAAIgpC,GAAkBroC,IAEnE,KAAK,EACD,OAAOyjC,GAAgB4E,GAAkBroC,GAAIqoC,GAAkBhpC,IAEnE,KAAK,EAWL,KAAK,EAML,KAAK,EAGL,KAAK,EACD,OAAO,EAlBX,KAAK,EACD,OAAK4jC,GAAoBoF,GAAkBhpC,MAI/B4jC,GAAoBoF,GAAkBroC,IAMtD,KAAK,EACD,OAAQijC,GAAoBoF,GAAkBroC,IAQlD,KAAK,EACD,OAAQijC,GAAoBoF,GAAkBhpC,IAElD,KAAK,EACD,MAAO,IAAIuB,MAAM,mDAqHtB,SAASmoC,GAA2B7+B,GACvC,OAAIA,GAAK,EACEw+B,GAA0B,EAAGC,GAAyBlC,GAAqBv8B,KAG3Ew+B,IAA0B,EAAIC,IAD1B,aAANz+B,EACyDw8B,GAAqB3vB,GAAiBK,GAAYlN,GAAG,EAAO,KAG5Du8B,GAAqBp3B,GAAuBnF,MAgB3G,SAAS8+B,KACZ,OAAOd,GAAW95B,IAGf,SAAS66B,KACZ,OAAOf,GAAWgB,IAGf,SAASC,KACZ,OAAOjB,GAAWkB,KArXlBlB,GAAWU,SAAW,KACtBV,GAAWW,YAActlB,GAAW2kB,GAAWU,SAAUnC,IACzDyB,GAAW95B,IAAM26B,GAA2B,GAC5Cb,GAAWgB,IAAMH,GAA2B,GAC5Cb,GAAWkB,KAAOL,GAA2B,GCzB7BI,KAEDH,KAEAC,KAmGKE,KAEDH,KClIhB,SAASK,GAAkB/lB,EAAOgmB,EAAMC,EAAMH,EAAMl7B,GACvD,MAAMs7B,EAbH,SAA+BF,EAAMC,EAAMH,EAAMl7B,GACpD,MAAMu7B,EAA6C,EAAtBxkC,EAAQqkC,EAAMF,GAC3C,GAA6B,IAAzBK,EACA,MAAO,IAAI7oC,MAAM,sCAErB,MAAM8oC,EAAsBD,EAAuB,EACnD,OAAQpqC,IACJ,MAAMsqC,EAAsC,EAAnB1kC,EAAQ5F,EAAGkqC,GACpC,OAASG,GAAwBC,GAAoB,IAAgBD,GAAyBC,GAAoB,EAAO,CAACtqC,EAAG6O,EAAI7O,EAAGiqC,SAAU,GAKnIM,CAAsBN,EAAMC,EAAMH,EAAMl7B,GACvD,OAAOga,IAAM,IAAMa,GAAOygB,EAAQlmB,mICZNpR,YAAAA,GAQ5B5R,KAAAslB,MACI,IAAAikB,GAAA,EAAA1mB,GAAA,IAAA7jB,MAA4BkG,EAAAZ,EAAIsN,EAAK,KAAA,EAAT1M,EAAAZ,EAAIsN,EAAK,IAAA,MAAK,IAEvC2S,SAAAA,GAAAA,GACGT,MAAAA,EAAAS,EAAAT,MAAA,GAAA,IAAAA,EAAAld,IAAA,CACiB4iC,MAAAA,EAAAA,EACf1lB,EADe0lB,OAAAA,GAAKC,EAAAA,EACpB3lB,EADoB2lB,OAAAA,GAAZC,EACR5lB,EADQ4lB,OAAAA,GACRC,GAAQF,EAAM,GAAKC,EAAnBC,OAAAA,EAMJ,OAHIplB,EAAAA,MAFEolB,IAAOH,EAEA,IAAAD,GAAA,EAASG,EAAOF,GAEhB,IAAAD,GAAA,EAAaG,EAAOF,EAAKG,GACtC/rB,GAAK8rB,EAAOD,KAIbllB,SAAAA,GAAAA,EAASqlB,GACN9lB,MAAAA,EAAAS,EAAAT,MAAA,GAAA,IAAAA,EAAAld,IAAA,CAKiB4iC,MAAAA,EAAAA,EACnB1lB,EADmB0lB,OAAAA,GAAKC,EAAAA,EACxB3lB,EADwB2lB,OAAAA,GAAZC,EACZ5lB,EADY4lB,OAAAA,GACZA,EAAOF,GAAQI,EACXC,MAAAA,GAAQL,EAAM,GAAKM,EAAnBD,OAAAA,EAGAtlB,EAAAA,MAFEslB,IAAOJ,EAEA,IAAAF,GAAA,GAlCNQ,EAkC4BN,EAlCxBC,EAkCeA,EAjCxB1qC,MAAA0jB,KAAAkF,IAAA,IAAAuB,GAAgBM,GAAAsgB,EAATL,GACP9hB,IAAA,KAAAuB,OAAAA,IrCwrCOjnB,EqCxrCS6nC,ErCwrCFtnB,EqCxrCPinB,ErCyrCVxgB,IAAgB,IAAMvB,GAAMlF,KAAK,CAACxhB,EAAGoH,KACxC,GAAIpH,EAAIiB,EAAO,CACX,GAAImG,EAAE,6CACF,OAAOuV,GAAKvV,EAAE,2DAGd,MAAO,IAAI/H,MAAOspB,2FAM1BJ,IACAhqB,EAAYgqB,OqCrsCN5B,IAAA,KAAAoiB,OrC6tCP,SAAiBzgB,EAAS9G,GAC7B,OAAOmF,IAAM,IAAME,GAAOwB,GAAIC,EAAS9G,MqC9tC7BunB,EAASlmB,GACP8E,GAAA,QDkBY5F,ECnBL,EDmBYgmB,ECnBZ,EDmBkBC,ECnBfS,EAFZxoC,ODsBH6nC,GAAkB/lB,EAAOgmB,EAAMC,EAAM,GAAG,CAAClqC,EAAGW,IAAOX,EAAIW,MAD3D,IAAqBsjB,EAAOgmB,EAAMC,MpCoqClC,IAAc/mC,EAAOugB,UqCxpCmCqnB,EAAAJ,OAAc,GAEpD,IAAAH,GAAA,EAAaG,EAAOG,EAAMJ,QAXxBM,MAAAA,EAAAA,EACfjmB,EADeimB,OAAAA,GAAPL,EACR5lB,EADQ4lB,OAAAA,GACRA,EAAOK,GAAOH,EACVJ,MAAAA,GAAOO,EAAK,GAAKL,EAAjBF,OAAAA,EACJjlB,EAAAA,MAAS,IAAAglB,GAAA,EAAaG,EAAOF,EAAKO,GA7BhC/pC,IACK+pC,EAAIL,mKC2FDxT,SAAAA,GAAAA,EACA+T,GACd,OAAA,IAAAC,GAAAD,EAAAA,KAAAA,EAAAA,OAAAA,EAAAA,UAAAA,EAAAA,KACoB/T,EADpB+T,EAAAA,QAAAA,EAAAE,cAQMF,SAAAA,GAAAA,GACN,OAAAnkC,EAAA,EAAAmkC,EAAAvJ,MAsBS96B,SAAAA,GAAAA,EAAYqkC,GACjBhuB,MAAAA,EAAcguB,EAAAA,KAAarkC,GAA1B46B,EAADvkB,EAACukB,GACD4J,SAAgB,IACRC,IAAAA,GAAY,EACZ/kB,EAAQkb,EACZvT,MAiBJkd,EAAAA,EAAAA,EAAeF,EAAAA,aAAAA,CAjBFK,IACb,GAAGD,EACCE,GAAAH,EAAQE,QAERD,GAAa,EACDG,IAAAA,EAAU5sB,GAAK0sB,GAC3B,KAAA,MAAME,GAAN,CACQF,MAAAA,EAAM3sB,GAAA6sB,GACV,IACQvuB,MAAAA,EAAgBguB,EAAAA,OAAeK,EAAIhlB,GAAlCmlB,EAAD1F,EAAC0F,GACLR,EAAAA,SAAiBQ,EAAON,GAChBO,IAAcje,IAAMwd,EAAAA,QAAAA,CAAiB5oB,GAAQZ,GAAA,uCAARY,CAA8CipB,GAAK7d,MAAK0d,EAFjGpF,EAEiGoF,IACrG7kB,EAASmlB,EACRhe,MAAAA,GACDwd,EAAAA,QAAAA,CAAiB5oB,GAAQZ,GAAA,qCAARY,CAA4CipB,GAAK7d,IACtE+d,EAAWG,GAAAP,GACfC,GAAa,MAGrBJ,EAAAA,SAAiBzJ,EAAM2J,GAQpBO,IAAcje,IAAMwd,EAAAA,QAAAA,CAAiB,uBAAwBxd,MAA7D0d,EADHS,GAAU/kB,GACPskB,CAAAA,MANC,IACI,OAAAF,EAAAA,UAAkBzJ,GACjB/T,MAAAA,GAED,OADAwd,EAAAA,QAAAA,CAAiB,uBAAwBxd,IACzCoe,OAELV,GA/BCluB,EAAA,OCjHsB6uB,SAAAA,GAAAA,EAAcC,EAAed,GACvCe,IAAAA,EAaT,OAAAC,IAAA,CAZUzK,EAAMvT,KACT,GAAA,MAAA+d,EAAA,CACC3+B,MAAAA,EAAK2+B,EAAA9vB,OAAAmgB,qBAA4BhvB,GAGxC2+B,EAAqB9vB,OAAA8f,uBAAkC5iB,IACnD8yB,GACIJ,GAAmB/rC,GAAEW,GAAKX,IAAsBW,GAAKyrC,GAAalB,GAASzJ,EAAMvT,GACjFxR,SAAAC,eAAwBqvB,SAGpCd,4VCPQ7wB,SAAAA,GAAAA,EAAIgyB,GAElBjrC,MAAAA,E/C2GSkrC,SAAAA,EAAiBjyB,EAAIkyB,GACYlrC,IAAAA,EAAxCmrC,MAAAA,EAAAA,GAAwCnrC,EAA7BkrC,EArCJ,sBAqCiC7/B,KAAAyJ,MAAA9U,IAChCoa,IAAAA,EAAapB,EAAboB,WAEZ,IAAA,IAAIwuB,EAAO,EAAPA,GAAYuC,EAAZvC,IAAJ,CACM/sB,MAAAA,EAA+BuvB,GAAKhxB,EAzC/B,oBAyCoDixB,GAAaryB,EAAAA,SAAaoB,IACvF6wB,EAAiB7wB,EADbyB,EAAAA,GAzCK,oBA0CmD+sB,GAC5DxuB,EAFIyB,EAEJ,GAEEyvB,MAAAA,EA7CO,oBA6C0BH,EACjCI,EAAUvyB,EAAAA,KAAWsyB,EAGNE,EAAAN,EAAiBI,EACnBG,EAAAF,GAAYA,EAAUvyB,EAAAA,YAAkBA,EAAxCyyB,SAAAA,cAHjB,OAAA,IAAA/wB,GAIiBN,EAJjBpB,EAAAA,QACWuyB,EAEME,EADED,EAFnBxyB,EAAA0yB,U+CtHSC,CAAA1mC,EAAA,E9CoCO2mC,SAAAA,EAAeC,GACrBC,IAAAA,EAAc,EACdC,EAAiBH,EAAgBC,EAEzCzxB,OAAAA,GAAWR,GAAcF,IAItBsyB,IAAAA,EAHFtyB,GAAQqyB,IAINrvB,IADAsvB,GD2BM,qBC5BKtyB,EAAOqyB,ID4BZ,oBCtCQ9zB,SAAAA,EAAgBD,EAAiBg0B,GAAgB,MAAA,CAAjD/zB,EAAAA,GAAqD+zB,EAArCh0B,EAAAA,GAAiDC,EAAjEA,GAAqE+zB,EAArDh0B,EAAiC,IAW/Di0B,CAAWtvB,GAAYvC,GAAvBR,EAAAoyB,KAEHF,EAAeA,EAAc,EAA7B,EACAC,EAAkBH,EAAsBE,EAAcD,I8ChDHK,CAAyBlzB,EAAAA,SAAAA,c/CmFxDA,SAAAA,GAAM,OAAAA,EAAAA,KAAWA,EAAXyyB,W+CnFbU,CAA+BnzB,KACNA,EAAIgyB,GAE9CjrC,OADAqsC,GAA0BpzB,EAAAA,WAAejZ,EAAzCssC,YACAtsC,EAEcuZ,SAAAA,GAAAA,EAASN,GACnBjZ,MAAAA,EAAcusC,GAAAhzB,EAAPN,GAGXjZ,OAFAwsC,GAAyBxsC,EAAzBssC,YACAD,GAA0BpzB,EAAAA,WAAejZ,EAAzCssC,YACAtsC,EAEcuZ,SAAAA,GAAAA,EAASN,GACnBjZ,MAAAA,EAAcusC,GAAAhzB,EAAPN,GAGXjZ,OAFAysC,GAA6BxzB,EAA7BqzB,YACAI,GAA4B1sC,EAA5BssC,YACAtsC,EAEkBuZ,SAAAA,GAAAA,EAASN,GAC3B,OAAGA,EAAH0zB,QACK,IAAAhyB,GAAA1B,EAAAA,WAAAA,EAAAA,QAAAA,EAAAA,KAAAA,EAAAA,WAAAA,EAAAA,aAAsBM,GACfgzB,GAAAhzB,EAAPN,kBAGD8B,MAAAA,EAAAA,OACQ6xB,IAAAA,EAOP9f,MAAAA,CAAAA,IAAY8f,EAAkCC,EAAA9xB,uBANhC+xB,IACTtpB,MAAAA,EAAAA,CAAKupB,EAAK//B,KAKU8f,EAJd,IAAAkgB,GAAA,GAAwB,GAAZhgC,EAAI+/B,KAC5BH,EAAqB7xB,EAAAA,sBAAAA,EAAAA,EAA8ByI,EAAAA,CAAKxW,MAC1D4/B,EAAqB7xB,EAAAA,sBAAAA,EAAAA,EAA8ByI,EAAAA,CAAKspB,cxC0wBrD,IAAiBxnB,EL5wBA2nB,EK4wBA3nB,EwCtwBK4nB,IAAAnyB,EAAAA,qBAAAmyB,IxCuwBzBhkB,IAAK,CAAC3D,EAAU3mB,KACZ0mB,EAAO1mB,UACR,EL9wBY,OADKquC,E6CMpBL,G7CLuB,GAAK,CAACpvB,GAAMyvB,K6CMnCL,OAAa,QAZbO,GAAArxB,GAAA,GAAAsxB,GAAAtxB,GAAA,GAuGKuxB,SAAAA,GAAAA,GAAW,OAAAvoB,GAAMuoB,GACdC,SAAAA,GAAAA,EAAU3gB,GAAO,OAAAjH,GAAA,CAAMiH,EAoK3B8T,GAzO8B,MAAA,GAqEgB6M,KAIzC3gB,SAAAA,GAAAA,EAAK3kB,EAAQulC,EAAUzgB,GAzGbuB,IAAAA,EAyQf,OAAAoS,GAvQ6B,KAAA,MAAjBpS,EAFGA,EAAAA,CAiRfoS,GAvNwB,QAxDZpS,CA2GDD,KAAA,WACGmf,QAAAA,EACMt1B,SAAAA,IAAK6U,EAAS9kB,MAC5B2kB,GAyJN8T,GAzQgC,QAgH1B9T,CALUsS,UAAA,eA3G8B5Q,MA6IzCmf,SAAAA,GAAAA,EAAQj0B,EAASuT,GAjLZiB,IAAAA,EAoCKM,EAmHmBof,EA1I3B1f,EAAMM,EAAAA,EA0IUyG,EAAW2Y,EA1I3B1f,EAAMM,EAANN,MAAAA,EAAAA,CAsKT,IAAA2f,GAAA,GAAU,YAAA,CA+LT,QArWQ3f,iBAAMM,EAAAA,EAbHN,EAsLVnF,GAAMnB,IAzKO4G,KAyKPsf,MAAAA,EAAeH,EAAa,QAAa,OAC7C,OAAAxkB,GADFP,GACE,IAAAilB,GAAA,IAAK,WACLjmB,IAAA,IAAAuB,GAFFP,GAEE,IAAAilB,GAAA,GAAWC,EAAAA,sBACXlmB,IAAA,IAAAuB,GAHFP,GAGE,IAAAilB,GAAA,IAAMC,IAHRlmB,IAAA,IAAAgB,GAIE,IAAAmlB,GAAA,IAAe31B,IAAK6U,EAAS,IAATkgB,GAAA,sBAmHtBvM,GA7SiC,SAAAlB,GAASxR,EAAAA,MAoC3BM,EAAAA,CAyJT,UAtC4Bof,EA0C7BA,GAAK,KApLH1f,EAAAA,CAAAA,CAqWR,QArEC,2BAhSaM,EA4IjBzF,GAAEnB,IA5Ie4G,KAiFJN,IAAAA,EA2DX,OAAA/E,GAAFP,IA3DasF,EA4DTnF,GAAEnB,IAAA,IAAAuB,GAAFP,GAAE,IAAAilB,GAAA,IAAK,WACLjmB,IAAA,IAAAuB,GADFP,GACE,IAAAilB,GAAA,EAwCEn0B,EAAAA,kBAvCFkO,IAAA,IAAAuB,GAFFP,GAEE,IAAAilB,GAAA,IAAK,QAELjmB,IAAA,IAAAuB,GAJFP,GAIE,IAAAmlB,GAAA,GAAc1lC,IACZ,IAqCA4kB,EAFA,IAAAkgB,GAAA,GAnCsB,EAAlBjN,GAAO8N,GAAA3lC,MACXyb,MAAAA,SAEF8D,IAAA,IAAA,CA6BI,IAAAimB,GAAA,IAAI,GACJ,IAAAA,GAAA,I/CzGG,qB+C8NTjN,GAvNwB,QAAAlB,GAAQxR,EAAAA,MAqElCtG,IAAA,IAAAgmB,SA0IEhN,GAhS8B,MAAAlB,GAAMxR,EAAAA,MAAMM,KAgS1CoS,GAzQgC,QAAA,MAAcpS,KAvBjCA,EAAAA,CAgSboS,GA7SiC,SA6SjC,CAtGWrS,KAAA,SACK6Q,UAAA,OACJ6O,MAAA,OACS51B,QAAAA,IAAK4U,EAAS,IAATkgB,GAAA,SAnDHlY,EAAAA,CAAAA,CA2NxB,QA3NwBA,CAuDPtZ,MAAA,MACKuyB,WAAA,EACDC,UAAA,UACd,IAAAN,GAAA,IAAI,GACJ,IAAAA,GAAA,I/CzHM,M+C8DsBD,EA4D7BQ,GAAK,KAtMHlgB,EAAAA,CAAAA,CAqWR,QAjKO,2BApMOM,EA4IjBzF,GAAEnB,IA5Ie4G,KAiFJN,IAAAA,EA2DX,OAAA/E,GAAFP,IA3DasF,EA4DTnF,GAAEnB,IAAA,IAAAuB,GAAFP,GAAE,IAAAilB,GAAA,IAAK,WACLjmB,IAAA,IAAAuB,GADFP,GACE,IAAAilB,GAAA,EA0DEn0B,EAAAA,WAzDFkO,IAAA,IAAAuB,GAFFP,GAEE,IAAAilB,GAAA,IAAK,QAELjmB,IAAA,IAAAuB,GAJFP,GAIE,IAAAmlB,GAAA,GAAc1lC,IACZ,IAuDA4kB,EAFA,IAAAkgB,GAAA,GArDsB,EAAlBjN,GAAO8N,GAAA3lC,MACXyb,MAAAA,SAEF8D,IAAA,IAAAqN,iBAmJF2L,GAvNwB,QAAAlB,GAAQxR,EAAAA,MAqElCtG,IAAA,IAAAgmB,SA0IEhN,GAhS8B,MAAAlB,GAAMxR,EAAAA,MAAMM,KAgS1CoS,GAhS8B,MAAA,MAAYpS,IAgS1CoS,GA7SiC,SA6SjC,CArFOrS,KAAA,SACK6Q,UAAA,QACJ6O,MAAA,QACS7zB,QAAAA,IAAK6S,EAAS,IAATkgB,GAAA,SAkFtB,OAAAvM,GAhS8B,MAAAlB,GAAMxR,EAAAA,MAAMM,GA4NpC1U,SAAAA,GAAAA,EAAKU,GAlKIgU,IAAAA,EACAA,EAuJOhoB,EAAKpG,EA/IfouB,EAPAA,EAAAA,EAsJUhoB,EAAKpG,EA/IfouB,EAPAA,EAAAA,EAsJUhoB,EAAKpG,EA/IfouB,EAPAA,EAAAA,EAsJUhoB,EAAKpG,EA/IfouB,EAPAA,EAAAA,EAoOZ,OAAAoS,GAnSkC,UAmSlC,CAlEQxB,UAAA,YACLiP,MAAA,MAlOc7f,CAmSjBoS,GAxOkC,UAAA,GAyK5B,cAvKSpS,EAAAA,EACAA,EAAAA,CAyKT,CAVmBpuB,IA9JbouB,IAAAA,EAAAA,EAoOZ,OAAAoS,GA7N6B,KAAA,MAAjBpS,EAPAA,EAyJZzF,GAAEnB,IAAA,IAAAuB,GAAA,CAemB,KAfrBvB,IAAA,IAAAgB,GACM,WA0ENgY,GApO6B,KAAA,MAAWpS,KAA5BA,EAAAA,CA4JHnN,GAAQZ,GAAA,QAARY,CAEgBjhB,IAsEzBwgC,GApO6B,KAAA,MAAWpS,OAwKlC,CAAmB1U,GACnB,CAXmB1Z,IA9JbouB,IAAAA,EAAAA,EAoOZ,OAAAoS,GA7N6B,KAAA,MAAjBpS,EAPAA,EAyJZzF,GAAEnB,IAAA,IAAAuB,GAAA,CAgBmB,KAhBrBvB,IAAA,IAAAgB,GACM,WA0ENgY,GApO6B,KAAA,MAAWpS,KAA5BA,EAAAA,CA4JHnN,GAAQZ,GAAA,QAARY,CAEgBjhB,IAsEzBwgC,GApO6B,KAAA,MAAWpS,OAyKlC,CAAmB7R,GAAAnC,EAAAA,WACnB,CAZmBpa,IA9JbouB,IAAAA,EAAAA,EAoOZ,OAAAoS,GA7N6B,KAAA,MAAjBpS,EAPAA,EAyJZzF,GAAEnB,IAAA,IAAAuB,GAAA,CAiBmB,KAjBrBvB,IAAA,IAAAgB,GACM,WA0ENgY,GApO6B,KAAA,MAAWpS,KAA5BA,EAAAA,CA4JHnN,GAAQZ,GAAA,QAARY,CAEgBjhB,IAsEzBwgC,GApO6B,KAAA,MAAWpS,OA0KlC,CAAmBtV,GAAAsB,EAAAA,YApBHhU,EAqBW8nC,GAAQ,IAAf,KArBCluC,EAqBmBuc,GAAAnC,EAAAA,UApKlCgU,EAAAA,EAPAA,EAyJZzF,GAAEnB,IAAA,IAAAuB,GAAA3iB,EAAFohB,IAAA,IAAAgB,GACM,WA0ENgY,GApO6B,KAAA,MAAWpS,KAA5BA,EAAAA,CA4JHnN,GAAQZ,GAAA,QAARY,CAAsBjhB,IAwE/BwgC,GApO6B,KAAA,MAAWpS,KAoOxCoS,GA7N6B,KAAA,MAAWpS,KA+IlBhoB,EAsBW+nC,GAAQ,IAAf,KAtBCnuC,EAsBmB8Y,GAAAsB,EAAAA,UArKlCgU,EAAAA,EAPAA,EAyJZzF,GAAEnB,IAAA,IAAAuB,GAAA3iB,EAAFohB,IAAA,IAAAgB,GACM,WA0ENgY,GApO6B,KAAA,MAAWpS,KAA5BA,EAAAA,CA4JHnN,GAAQZ,GAAA,QAARY,CAAsBjhB,IAwE/BwgC,GApO6B,KAAA,MAAWpS,KAoOxCoS,GA7N6B,KAAA,MAAWpS,KA+IlBhoB,EAuBW8nC,GAAQ,IAAf,KAvBCluC,EAuBmBuc,GAAAnC,EAAAA,cAtKlCgU,EAAAA,EAPAA,EAyJZzF,GAAEnB,IAAA,IAAAuB,GAAA3iB,EAAFohB,IAAA,IAAAgB,GACM,WA0ENgY,GApO6B,KAAA,MAAWpS,KAA5BA,EAAAA,CA4JHnN,GAAQZ,GAAA,QAARY,CAAsBjhB,IAwE/BwgC,GApO6B,KAAA,MAAWpS,KAoOxCoS,GA7N6B,KAAA,MAAWpS,KA+IlBhoB,EAwBW+nC,GAAQ,IAAf,KAxBCnuC,EAwBmB8Y,GAAAsB,EAAAA,cAvKlCgU,EAAAA,EAPAA,EAyJZzF,GAAEnB,IAAA,IAAAuB,GAAA3iB,EAAFohB,IAAA,IAAAgB,GACM,WA0ENgY,GApO6B,KAAA,MAAWpS,KAA5BA,EAAAA,CA4JHnN,GAAQZ,GAAA,QAARY,CAAsBjhB,IAwE/BwgC,GApO6B,KAAA,MAAWpS,KAoOxCoS,GA7N6B,KAAA,MAAWpS,KA6NxCoS,GArOgC,QAAA,MAAcpS,KAqO9CoS,GAtOgC,QAAA,MAAcpS,MAmLrCtH,SAAAA,GAAAA,EAAQ3N,EAAKG,EAASuT,GAxKnBuB,IAAAA,EAsF4Bof,EAlI5Bpf,EAFGA,EAvBRN,EAAMM,EAqEDA,EAsF4Bof,EAlI5Bpf,EAFGA,EAvBRN,EAAMM,EAmQXggB,EA1OUhgB,EAFGA,EA6BDA,EAsFoBof,EA1I3B1f,EAAMM,EAqEDA,EA4FermB,IAAA/H,EApCrBquC,EAAY3hB,EAmKlB,OAAA8T,GAhS8B,MAgS9B,CAjDQxB,UAAA,WACNt6B,IAAA,eAhPW0pB,EAqEDA,EAAAA,CA6KVkgB,GAAS,uBAAuB,IAAAvB,GAAA,GAAmBzzB,EAAAA,mBAA4BuT,GAC/E0hB,GAAS,yBAAyB,IAAAxB,GAAA,GAAqBzzB,EAAAA,eAAwBuT,IAxFzC2gB,EA4FnCA,GAAK,KA9NEpf,EAAAA,EAFGA,EAAAA,CA+NX,2BAtPGN,EAAAA,CAAAA,CAqWR,QArWcM,2BAAAA,EA4IjBzF,GAAEnB,IA5Ie4G,KAiFJN,IAAAA,EA2DX,OAAA/E,GAAFP,IA3DasF,EA4DTnF,GAAEnB,IAAA,IAAAuB,GAAFP,GAAE,IAAAilB,GAAA,IAAK,WACLjmB,IAAA,IAAAuB,GADFP,GACE,IAAAilB,GAAA,EA2GEn0B,EAAAA,gBA1GFkO,IAAA,IAAAuB,GAFFP,GAEE,IAAAilB,GAAA,IAAK,QAELjmB,IAAA,IAAAuB,GAJFP,GAIE,IAAAmlB,GAAA,GAAc1lC,IACZ,IAwGA4kB,EAFA,IAAAkgB,GAAA,EAtGsB,EAAlBjN,GAAO8N,GAAA3lC,MACXyb,MAAAA,SAEF8D,IAAA,IAAA,CAgGI,IAAAimB,GAAA,IAAI,mBAmDVjN,GAvNwB,QAAAlB,GAAQxR,EAAAA,MAqElCtG,IAAA,IASmCgmB,SAiIjChN,GAhS8B,MAAAlB,GAAMxR,EAAAA,MAAMM,KAgS1CoS,GAzQgC,QAAA,MAAcpS,KAyQ9CoS,GAvQ6B,KAAA,MAAWpS,KAuQxCoS,GA3N6B,KAAA,MAAWpS,KAA5BA,EAAAA,EAsF4Bof,EAoGnCA,GAAK,MAtOEpf,EAAAA,EAFGA,EAAAA,CAuOX,SA9PGN,EAAAA,CAAAA,CAqWR,QArEC,2BAhSaM,EA4IjBzF,GAAEnB,IA5Ie4G,KAiFJN,IAAAA,EA2DX,OAAA/E,GAAFP,IA3DasF,EA4DTnF,GAAEnB,IAAA,IAAAuB,GAAFP,GAAE,IAAAilB,GAAA,IAAK,WACLjmB,IAAA,IAAAuB,GADFP,GACE,IAAAilB,GAAA,EAmHEt0B,IAlHFqO,IAAA,IAAAuB,GAFFP,GAEE,IAAAilB,GAAA,IAAK,QAELjmB,IAAA,IAAAuB,GAJFP,GAIE,IAAAmlB,GAAA,GAAc1lC,IACZ,IAgHA4kB,EAFA,IAAAkgB,GAAA,EA9GsB,EAAlBjN,GAAO8N,GAAA3lC,MACXyb,MAAAA,SAEF8D,IAAA,IAAA,CAwGI,IAAAimB,GAAA,IAAI,mBA2CVjN,GAvNwB,QAAAlB,GAAQxR,EAAAA,MAqElCtG,IAAA,IASmCgmB,SAiIjChN,GAhS8B,MAAAlB,GAAMxR,EAAAA,MAAMM,KAgS1CoS,GAzQgC,QAAA,MAAcpS,KAyQ9CoS,GAvQ6B,KAAA,MAAWpS,KAoGlCigB,EAwIkB,IAxIN3hB,EAwIb,MAFH0hB,EAtIuB3oB,GAAA,CAAMiH,EAmK/B8T,GAvO8B,MAAA,GAoEoB6N,MAoCvBruC,EAsGvBsZ,EAAAA,oBAtGuBuT,IA1IZuB,IAAAA,EAvBRN,EAAMM,EAgSb,OAAAoS,GAvQ6B,KAAA,IAFdpS,EAAAA,CA6OX,YApQGN,EAAAA,CAAAA,CAqWR,QA5UaM,2BAzBCA,EA4IjBzF,GAAEnB,IA5Ie4G,KAiFJN,IAAAA,EA2DX,OAAA/E,GAAFP,IA3DasF,EA4DTnF,GAAEnB,IAAA,IAAAuB,GAAFP,GAAE,IAAAilB,GAAA,IAAK,WACLjmB,IAAA,IAAAuB,GADFP,GACE,IAAAilB,GAAA,EAmByBztC,IAlBzBwnB,IAAA,IAAAuB,GAFFP,GAEE,IAAAilB,GAAA,IAAK,QAELjmB,IAAA,IAAAuB,GAJFP,GAIE,IAAAmlB,GAAA,GAAc1lC,IACZ,IAeuB4kB,GAqGvB2hB,EApHsB,EAAlB1O,GAAO8N,GAAA3lC,IAoHX,IAAA8kC,GAAA,EAAAyB,KAnHA9qB,MAAAA,IAmHA8qB,IAAAA,MAjHFhnB,IAAA,IAAA,kBAmJFgZ,GAvNwB,QAAAlB,GAAQxR,EAAAA,MAqElCtG,IAAA,IA6GI4mB,SA6BF5N,GAhS8B,MAAAlB,GAAMxR,EAAAA,MAAMM,KAgS1CoS,GAzQgC,QAAA,MAAcpS,OAiP1CvB,KA/OQuB,EAAAA,EAFGA,EAAAA,EA6BDA,EAAAA,CA4OdoS,GA5N4B,IAkMxBgO,CAMwBxP,UAAA,WACN,0BACJ,KAkBlBwB,GA5O+B,OAyNT,CAFCqN,MAAA,6GAvNqBzf,KAsFVof,EAuIrBA,GAAK,QAjRX1f,EAAAA,CAAAA,CAqWR,QAjT6CM,2BApD/BA,EA4IjBzF,GAAEnB,IA5Ie4G,KAiFJN,IAAAA,EA2DX,OAAA/E,GAAFP,IA3DasF,EA4DTnF,GAAEnB,IAAA,IAAAuB,GAAFP,GAAE,IAAAilB,GAAA,IAAK,WACLjmB,IAAA,IAAAuB,GADFP,GACE,IAAAilB,GAAA,EAqIUn0B,EAAAA,eApIVkO,IAAA,IAAAuB,GAFFP,GAEE,IAAAilB,GAAA,IAAK,QAELjmB,IAAA,IAAAuB,GAJFP,GAIE,IAAAmlB,GAAA,GAAc1lC,IACZ,IAkIQ4kB,EAFA,IAAAkgB,GAAA,EAhIc,EAAlBjN,GAAO8N,GAAA3lC,MACXyb,MAAAA,SAEF8D,IAAA,IAAA,CA2HY,IAAAimB,GAAA,IAAI,mBAwBlBjN,GAvNwB,QAAAlB,GAAQxR,EAAAA,MAqElCtG,IAAA,IAAAgmB,SA0IEhN,GAhS8B,MAAAlB,GAAMxR,EAAAA,MAAMM,KAgS1CoS,GAzQgC,QAAA,MAAcpS,KAyQ9CoS,GAvQ6B,KAAA,MAAWpS,KAuQxCoS,GA3N6B,KAAA,MAAWpS,KAA5BA,EAiNZzF,GAAanB,IAUb,KAVwCxnB,IAAAA,EA3HLoG,EAAKonC,EAlI5Bpf,EAFGA,EAvBRN,EAAMM,EAuRX,OAAArF,GADFP,IAAwCxoB,EACNuc,GAAAjD,EAAAA,iBA5HClT,EA2HwD,YA3HnDonC,EA2HuEQ,GAC7F,KA9PN5f,EAAAA,EAFGA,EAAAA,CAuINqgB,cA9JF3gB,EAAAA,CAAAA,CAqWR,QA9EG,2BAvRWM,EA4IjBzF,GAAEnB,IA5Ie4G,KAiFJN,IAAAA,EA2DX,OAAA/E,GAAFP,IA3DasF,EA4DTnF,GAAEnB,IAAA,IAAAuB,GAAFP,GAAE,IAAAilB,GAAA,IAAK,WACLjmB,IAAA,IAAAuB,GADFP,GACE,IAAAilB,GAAA,EAwI6HztC,IAvI7HwnB,IAAA,IAAAuB,GAFFP,GAEE,IAAAilB,GAAA,IAAK,QAELjmB,IAAA,IAAAuB,GAJFP,GAIE,IAAAmlB,GAAA,GAAc1lC,IACZ,IAoIiI4kB,GAC/G2hB,EArII,EAAlB1O,GAAO8N,GAAA3lC,IAqIO,IAAA8kC,GAAA,EAAAyB,KApIlB9qB,MAAAA,IADI,IAqIc8qB,MAlIpBhnB,IAAA,IAAA,CAiIqE,IAAAimB,GAAA,GAAS3mB,mBAkBhF0Z,GAvNwB,QAAAlB,GAAQxR,EAAAA,MAqElCtG,IAAA,IASmCgmB,SAiIjChN,GAhS8B,MAAAlB,GAAMxR,EAAAA,MAAMM,KAgS1CoS,GAzQgC,QAAA,MAAcpS,KAyQ9CoS,GAvQ6B,KAAA,MAAWpS,KA+PtC5G,IAQF,KAVwCxnB,IAAAA,EA3HLoG,EAAKonC,EAlI5Bpf,EAFGA,EAvBRN,EAAMM,EAwRX,OAAArF,GAFFP,IAAwCxoB,EAEN8Y,GAAAQ,EAAAA,iBA7HClT,EA2HwD,YA3HnDonC,EA2HuEQ,GAE7F,KA/PN5f,EAAAA,EAFGA,EAAAA,CAuINsgB,cA9JF5gB,EAAAA,CAAAA,CAqWR,QA7EG,2BAxRWM,EA4IjBzF,GAAEnB,IA5Ie4G,KAiFJN,IAAAA,EA2DX,OAAA/E,GAAFP,IA3DasF,EA4DTnF,GAAEnB,IAAA,IAAAuB,GAAFP,GAAE,IAAAilB,GAAA,IAAK,WACLjmB,IAAA,IAAAuB,GADFP,GACE,IAAAilB,GAAA,EAwI6HztC,IAvI7HwnB,IAAA,IAAAuB,GAFFP,GAEE,IAAAilB,GAAA,IAAK,QAELjmB,IAAA,IAAAuB,GAJFP,GAIE,IAAAmlB,GAAA,GAAc1lC,IACZ,IAoIiI4kB,GAE/G2hB,EAtII,EAAlB1O,GAAO8N,GAAA3lC,IAsIO,IAAA8kC,GAAA,EAAAyB,KArIlB9qB,MAAAA,IADI,IAsIc8qB,MAnIpBhnB,IAAA,IAAA,CAiIqE,IAAAimB,GAAA,GAAS3mB,mBAkBhF0Z,GAvNwB,QAAAlB,GAAQxR,EAAAA,MAqElCtG,IAAA,IASmCgmB,SAiIjChN,GAhS8B,MAAAlB,GAAMxR,EAAAA,MAAMM,KAgS1CoS,GAzQgC,QAAA,MAAcpS,KAyQ9CoS,GAvQ6B,KAAA,MAAWpS,KAgQtC5G,IAOF,KArImCphB,IAAAA,EAAKonC,EAlI5Bpf,EAFGA,EAvBRN,EAAMM,EAyRX,OAAArF,GAHFP,IA3HmCpiB,EA2HwD,gBA3HnDonC,EA2HuEQ,GAGzF,OAhQV5f,EAAAA,EAFGA,EAAAA,CAuINhoB,kBA9JF0nB,EAAAA,CAAAA,CAqWR,QA5EG,2BAzRWM,EA4IjBzF,GAAEnB,IA5Ie4G,KAiFJN,IAAAA,EA2DX,OAAA/E,GAAFP,IA3DasF,EA4DTnF,GAAEnB,IAAA,IAAAuB,GAAFP,GAAE,IAAAilB,GAAA,IAAK,WACLjmB,IAAA,IAAAuB,GADFP,GACE,IAAAilB,GAAA,EA2I0Cn0B,EAAAA,eA1I1CkO,IAAA,IAAAuB,GAFFP,GAEE,IAAAilB,GAAA,IAAK,QAELjmB,IAAA,IAAAuB,GAJFP,GAIE,IAAAmlB,GAAA,GAAc1lC,IACZ,IAoIiI4kB,GAGzG2hB,EAvIF,EAAlB1O,GAAO8N,GAAA3lC,IAuIa,IAAA8kC,GAAA,EAAAyB,KAtIxB9qB,MAAAA,IADI,IAuIoB8qB,MApI1BhnB,IAAA,IAAA,CAiIqE,IAAAimB,GAAA,GAAS3mB,mBAkBhF0Z,GAvNwB,QAAAlB,GAAQxR,EAAAA,MAqElCtG,IAAA,IASmCgmB,SAiIjChN,GAhS8B,MAAAlB,GAAMxR,EAAAA,MAAMM,KAgS1CoS,GAzQgC,QAAA,MAAcpS,KAyQ9CoS,GAvQ6B,KAAA,MAAWpS,KA6PxC5G,IAUA,KArImCphB,IAAAA,EAAKonC,EAlI5Bpf,EAFGA,EAvBRN,EAAMM,EAsRb,OAAA5F,IA3HmCpiB,EA2HwD,gBA3HnDonC,EA2HuEQ,GAIzF,OAjQV5f,EAAAA,EAFGA,EAAAA,CAuINhoB,kBA9JF0nB,EAAAA,CAAAA,CAqWR,QA/EC,2BAtRaM,EA4IjBzF,GAAEnB,IA5Ie4G,KAiFJN,IAAAA,EA2DX,OAAA/E,GAAFP,IA3DasF,EA4DTnF,GAAEnB,IAAA,IAAAuB,GAAFP,GAAE,IAAAilB,GAAA,IAAK,WACLjmB,IAAA,IAAAuB,GADFP,GACE,IAAAilB,GAAA,EA4I0Cn0B,EAAAA,eA3I1CkO,IAAA,IAAAuB,GAFFP,GAEE,IAAAilB,GAAA,IAAK,QAELjmB,IAAA,IAAAuB,GAJFP,GAIE,IAAAmlB,GAAA,GAAc1lC,IACZ,IAoIiI4kB,GAIzG2hB,EAxIF,EAAlB1O,GAAO8N,GAAA3lC,IAwIa,IAAA8kC,GAAA,EAAAyB,KAvIxB9qB,MAAAA,IADI,IAwIoB8qB,MArI1BhnB,IAAA,IAAA,CAiIqE,IAAAimB,GAAA,GAAS3mB,mBAkBhF0Z,GAvNwB,QAAAlB,GAAQxR,EAAAA,MAqElCtG,IAAA,IASmCgmB,SAiIjChN,GAhS8B,MAAAlB,GAAMxR,EAAAA,MAAMM,KAgS1CoS,GAzQgC,QAAA,MAAcpS,KAyQ9CoS,GAvQ6B,KAAA,MAAWpS,qBAuQxCoS,GA3N6B,KAAA,MAAWpS,MDtCvBuc,IAAAA,GAAed,GDlC/B8E,GACA3Y,GACAsK,IA2IIuJ,SAAAA,GAA+C+E,QAAQ,EAAG/E,GE0NpEgF,EDrUsBlE,GCoUG,MFtWnBgE,cE+UCG,IAAAA,EAdJ91B,EACEM,MAAAA,EACF,IAAAy1B,GAAiB,GACA,GAAA,CACW,GAAS,KACb,IACP,GACE,GACI,EACL,EACE,IACP,GAuBjB/1B,OAlCIA,EAwBF,IAAA0B,IAVMo0B,EAAmB,GAQpBn0B,GAAArB,EAPH,IAAAQ,GADuB,GAAA,GAGd,I/CjVM,CAAA,EAAQ,GAAR,CAAA,EAAQ,GAAR,CAAA,EAAQ,GAAR,CAAA,EAAQ,O+CyVb,EACH,EACM,EACE,EACJR,GAEf01B,GAAkBh2B,EAAlBqzB,YACAI,GAA4BzzB,EAA5BqzB,YACA4C,GAAuBtyB,GAAY3D,EAAnCqzB,aACArzB,CAAAA,EAAK2L,OFlWEqR,GEoCEjuB,SAAAA,EAAQiR,GAIyBk2B,IAAAA,EAEJA,EAEAA,EAQeA,EAEPA,EAIpBA,EAIAA,EAaLA,EAKKA,EAGAA,EA7CgBA,EADpCnnC,OAAAA,EAAAA,YAGwB,MAAA,CAAAonC,IAAYD,EAAEl2B,EAAAA,SAAF,IAAA+1B,GAAAG,EAAAA,aAAnBnnC,EAAAA,OAAAA,GAAmBmnC,EAAAA,gBAAAA,EAAAA,oBAAAE,EAAAF,aAAAE,EAAAF,eAAAE,EAAAF,mBAAAA,EAAAA,cAAAA,EAAAA,gBAAAA,EAAAA,WAAnBl2B,GAA2D2L,aAExD,MAAA,CAAA0qB,IAAYH,EAAEl2B,EAAAA,SAAF,IAAA+1B,GAAAG,EAAAA,aAAAA,EAAAA,aAAAA,CAAnBnnC,EAAAA,OAAAA,GAAyDiR,EAAAA,SAAAA,gBAAAA,IAAtCs2B,EAAAJ,oBAAAI,EAAAJ,aAAAI,EAAAJ,eAAAI,EAAAJ,mBAAAI,EAAAJ,cAAAI,EAAAJ,gBAAAI,EAAAJ,WAAnBl2B,GAA4G2L,aAErG,MAAA,CAAA0qB,IAAYH,EAAEl2B,EAAAA,SAAF,IAAA+1B,GAAAG,EAAAA,aAAAA,EAAAA,aAAAA,CAAsCl2B,EAAAA,SAAAA,gBAAAA,GAAzDjR,EAAAA,OAAAA,IAAmBwnC,EAAAL,oBAAAK,EAAAL,aAAAK,EAAAL,eAAAK,EAAAL,mBAAAK,EAAAL,cAAAK,EAAAL,gBAAAK,EAAAL,WAAnBl2B,GAA4G2L,cAGvHvK,IAAAA,EAAa80B,MAAAA,EAAEl2B,EAAFk2B,WACjB,OADI90B,EAAa,IAAAN,GAAA01B,EAAAN,MAAAM,EAAAN,OAA6BpqC,EAAAZ,E/CRpC,O+CQN6D,EAAAA,OAAAA,IAAamnC,EAAAA,SAAAM,EAAAN,SAAAM,EAAAN,aAAAM,EAAbp1B,kBACDpB,EAAH0zB,QACK,CAAA,IAAAhyB,GAAwBN,EAAxBpB,EAAAA,QAAAA,EAAAA,KAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,UAAsC2L,MACtC,CAAA,IAAAjK,GAAwBC,GAA6B3B,EAAAA,SAAaoB,GAAlEpB,EAAAA,QAAAA,EAAAA,KAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,UAAgF2L,aAEpD,MAAA,CAAAhL,IAAgBu1B,EAAEl2B,EAAAA,SAAF,IAAA+1B,GAAAG,EAAAA,aAAAA,EAAAA,aAAAA,EAAAA,gBAAvBnnC,EAAAA,OAAAA,GAAuB0nC,EAAAP,aAAAO,EAAAP,eAAAO,EAAAP,mBAAAA,EAAAA,cAAAA,EAAAA,gBAAAA,EAAAA,WAAvBl2B,GAAsE2L,aAEtE,MAAA,CAAAhL,IAAgBu1B,EAAEl2B,EAAAA,SAAF,IAAA+1B,GAAAG,EAAAA,aAAAA,EAAAA,aAAAA,EAAAA,gBAAAA,EAAAA,oBAAmCpqC,EAAAZ,E/CyB3D,E+CzBC6D,EAAAA,OAAAA,IAAuBmnC,EAAAA,eAAAA,EAAAA,mBAAAA,EAAAA,cAAAA,EAAAA,gBAAAA,EAAAA,WAAvBl2B,GAA8F2L,aAIjH,OADA7I,GAAA4zB,OAAoC12B,EAApC0yB,SAAAiE,eACA,CAAA,IAAAj1B,GAAA1B,EAAAA,WAAAA,EAAAA,QAAAA,EAAAA,KAAAA,EAAAA,WAAAA,EAAAA,cAAsBk2B,EAAEl2B,EAAAA,SAAF,IAAA+1B,GAAAG,EAAAA,aAAAA,EAAAA,aAAAA,EAAAA,gBAAAU,EAAAV,oBAAAU,EAAAV,cAAyCl2B,EAAAA,SAAAA,eAAzC42B,EAAAV,mBAAAA,EAAAA,cAAAA,EAAAA,gBAAAA,EAAAA,YAA0EvqB,aAIhG,OADAxI,GAAAuzB,OAAkC12B,EAAlC0yB,SAAAmE,mBACA,CAAA,IAAAn1B,GAAA1B,EAAAA,WAAAA,EAAAA,QAAAA,EAAAA,KAAAA,EAAAA,WAAAA,EAAAA,cAAsBk2B,EAAEl2B,EAAAA,SAAF,IAAA+1B,GAAAG,EAAAA,aAAAA,EAAAA,aAAAA,EAAAA,gBAAAY,EAAAZ,oBAAAY,EAAAZ,aAAAA,EAAAA,gBAA6Cl2B,EAAAA,SAAAA,mBAA7Ck2B,EAAAA,cAAAA,EAAAA,gBAAAA,EAAAA,YAAkFvqB,cAGpGorB,MAAAA,EAAQjrC,EAAAZ,E/CeO8rC,c+CffjoC,EAAAgoC,OAAAA,IACJ,OAAGA,IAAS/2B,EAAZ0yB,SAAAuE,cAOE,CAAA,IAAAv1B,GAAA1B,EAAAA,WAAAA,EAAAA,QAAAA,EAAAA,KALKA,EAAAA,KAAWA,EAAAA,YAAkBA,EAAAA,SAAAA,eAC9Bi2B,GAAuBtyB,GAAY3D,EAAAA,aACnCA,EAAAA,MAEAA,EAAAA,WACJA,EAAAA,cAEek2B,EAAEl2B,EAAAA,SAAF,IAAA+1B,GAAAG,EAAAA,aAAAgB,EAAAhB,aAAAA,EAAAA,gBAAAA,EAAAA,oBAAAgB,EAAAhB,aAAAA,EAAAA,eAAAA,EAAAA,mBAAoCa,EAApCb,EAAAA,gBAAAgB,EAAAhB,YAA+CvqB,MAE9D3L,CAAAA,EAAK2L,cAGP,MAAA,CAAA,IAAAjK,GAAA1B,EAAAA,WAAAA,EAAAA,QAAAA,EAAAA,KAAAA,EAAAA,WAAAA,EAAAA,cAAsBk2B,EAAEl2B,EAAAA,SAAF,IAAA+1B,GAAAG,EAAAA,aAAAiB,EAAAjB,aAAAiB,EAAAjB,gBAAAA,EAAAA,oBAAAA,EAAAA,aAAAA,EAAAA,eAAAiB,EAAAjB,mBAAAiB,EAAAjB,cAAAA,EAAAA,gBAnFWtqC,EAAAV,E/CiFnB,I+CjFQY,EAAAZ,E/C2Eb,oB+CQT6D,EAAAA,OAAAA,QAAmH4c,cAGnH,MAAA,CAAA,IAAAjK,GAAA1B,EAAAA,WAAAA,EAAAA,QAAAA,EAAAA,KAAAA,EAAAA,WAAAA,EAAAA,cAAsBk2B,EAAEl2B,EAAAA,SAAF,IAAA+1B,GAAAG,EAAAA,aAAAkB,EAAAlB,aAAAkB,EAAAlB,gBAAAA,EAAAA,oBAAAA,EAAAA,aAAAA,EAAAA,eAAAkB,EAAAlB,mBAAAkB,EAAAlB,cAtFWtqC,EAAAV,E/C+EtB,I+C/EWY,EAAAZ,E/C8EX,E+CQX6D,EAAAA,OAAAA,KAAsBmnC,EAAAA,YAA8FvqB,cAGpH,OAAG3L,EAAH0zB,SACES,KACA,CAAA,IAAAzyB,GAAA1B,EAAAA,YACc,EADdA,EAAAA,KAAAA,EAAAA,WAEmB,EAFnBA,EAAAA,UAE6B2L,OAE7B,CAAA,IAAAjK,GAAA1B,EAAAA,YAAqB,EAArBA,EAAAA,KAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,WnChFOlM,EmCiFUujC,GnChFjBxrB,GAAC/X,cmCkFKC,MAAAA,EACRhF,EADQgF,OAAAA,GAER,O3CJKiU,IAAeriB,GAAMguB,QAAQ1X,IAAItW,I2CG/B0hB,GAAA,MAAPiwB,CAAYvjC,GACTiM,EAAAA,SAAeA,EAAAA,SAAAA,gBAA+B,EAC5C,CAAAu3B,GAAgBv3B,EAAMpU,EAAAV,EAAI,GAAQ6I,EAAI,KAAiBiM,EAAAA,SAAAA,gBAA+BA,EAAAA,cAAmB2L,MACzG3L,CAAAA,EAAK2L,cAEJ,MAAA,CAAA4rB,GAAgBv3B,EAAIA,EAAAA,SAAAA,UAAuB2L,eAGjDwoB,KACI/yB,MAAAA,EAAaO,GAA6B3B,EAAAA,SAAaA,EAAvDoB,YAGJ,OAFAmyB,GAAyBnyB,GACzBgyB,GAA0BpzB,EAAAA,WAAeoB,GACzC,CAAA,IAAAM,GACiBN,GAIH,EAHH,EAEM,EADE,EAHnBpB,EAAAA,UAKuB2L,cA3EG,MAAA,CAAAwqB,IAAYD,EAAEl2B,EAAAA,SAAF,IAAA+1B,GAAnBhnC,EAAAA,OAAAA,GAAmBmnC,EAAAA,aAAAA,EAAAA,gBAAAA,EAAAA,oBAAAA,EAAAA,aAAAA,EAAAA,eAAAA,EAAAA,mBAAAA,EAAAA,cAAAA,EAAAA,gBAAAA,EAAAA,WAAnBl2B,GAA2D2L,M3CqD7E,IQ/EQ7X,GiCXNwzB,GEiSAtnB,SAAAA,EAAI6T,GAhSEiB,IAAAA,EAAMM,EAwQP,OAAArJ,GA0BVU,GAAA,EAlSWqI,EAAAA,CAmSL,IAAA2f,GAAA,GAAU,cACV,IAAA+C,GAAA,EAAI,cAAA,CAiEP,QA7FO,aAxQOpiB,EAAAA,CAsSXqiB,IAAA,CACE3K,EAAAA,IAAAA,EAAAA,KAAAA,EAAAA,IAAAA,EAAAA,KAAA4K,EAAA5K,IACA6K,GACA33B,EAAAA,QACAA,EAAAA,SACA6T,GACF+jB,GAAU53B,EAAAA,KAASA,EAAAA,aAZrBwnB,GAhS8B,MAAAlB,GAAMxR,EAAAA,MAAMM,IA6S5CqiB,IAAA,CACE3K,EAAAA,IAhBNxiC,EAgBMutC,EAAA/K,GAAAgL,EAAAhL,KAhBK+K,EAgBL/K,KAAAA,EAAAA,KAAAA,CACMA,EAAexsB,EAAYuT,IAAAkkB,GAA3BC,EAAAlL,GAAAkL,EAAAlL,GAA2BxsB,EAAAuT,IAAAA,CAChCokB,GAAmBj4B,GAAKA,EAAAA,WAAAA,MACzBA,EAAAA,SACA6T,ODnRgCgd,GD/BhC,IAAAC,GAAS6E,GACE3Y,IAGOhe,GAAKyyB,MAFdnK,GAAAA,EAAAA,GACQF,IAASE,MAAAA,EAAAA,EAAAA,EAAAA,GAAAA,CAAKF,yBAEnB0F,IAAAoL,GAAApL,EAAAA,GAAAA,EAAA,MACKnnC,EAAAA,GAAAA,GAAAA,KC0BjBwyC,IAAAA,CAA+B9Q,EAAAC,EAAApb,EAAA2H,IAAAukB,GAAAnsC,EAAA,EAAAo7B,GAAAA,EAAAA,EAAAC,GAAApb,EAAA2H,IAAc8d,GAAcd","sources":["fable/fable_modules/fable-library.3.7.11/Util.js","fable/fable_modules/fable-library.3.7.11/Types.js","fable/fable_modules/fable-library.3.7.11/Numeric.js","fable/fable_modules/fable-library.3.7.11/lib/big.js","fable/fable_modules/fable-library.3.7.11/Decimal.js","fable/fable_modules/fable-library.3.7.11/Int32.js","fable/fable_modules/fable-library.3.7.11/lib/long.js","fable/fable_modules/fable-library.3.7.11/Long.js","fable/fable_modules/fable-library.3.7.11/Reflection.js","src/Physics.fs","src/Graphics.fs","fable/fable_modules/fable-library.3.7.11/Option.js","fable/fable_modules/fable-library.3.7.11/Date.js","fable/fable_modules/fable-library.3.7.11/String.js","fable/fable_modules/fable-library.3.7.11/Array.js","fable/fable_modules/fable-library.3.7.11/List.js","fable/fable_modules/fable-library.3.7.11/Seq.js","fable/fable_modules/fable-library.3.7.11/FSharp.Core.js","fable/fable_modules/fable-library.3.7.11/AsyncBuilder.js","fable/fable_modules/fable-library.3.7.11/Async.js","fable/fable_modules/Fable.Elmish.3.1.0/prelude.fs","fable/fable_modules/Fable.Elmish.3.1.0/cmd.fs","node_modules/.pnpm/preact@10.7.2/node_modules/preact/src/constants.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/src/util.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/src/options.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/src/create-element.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/src/component.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/src/diff/children.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/src/diff/props.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/src/diff/index.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/src/render.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/src/diff/catch-error.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/devtools/src/devtools.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/debug/src/check-props.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/debug/src/component-stack.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/debug/src/debug.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/debug/src/constants.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/debug/src/util.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/hooks/src/index.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/compat/src/util.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/compat/src/PureComponent.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/compat/src/forwardRef.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/compat/src/suspense.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/compat/src/suspense-list.js","node_modules/.pnpm/preact@10.7.2/node_modules/preact/compat/src/render.js","fable/fable_modules/fable-library.3.7.11/MapUtil.js","fable/fable_modules/fable-library.3.7.11/Double.js","fable/fable_modules/Fable.React.8.0.1/Fable.React.Extensions.fs","fable/fable_modules/Fable.Elmish.React.3.0.1/common.fs","fable/fable_modules/fable-library.3.7.11/BigInt/n.js","fable/fable_modules/fable-library.3.7.11/BigInt/z.js","fable/fable_modules/fable-library.3.7.11/BigInt.js","fable/fable_modules/fable-library.3.7.11/Range.js","fable/fable_modules/Fable.Elmish.3.1.0/ring.fs","fable/fable_modules/Fable.Elmish.3.1.0/program.fs","fable/fable_modules/Fable.Elmish.React.3.0.1/react.fs","src/App.fs"],"sourcesContent":["// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function disposeSafe(x) {\n    if (isDisposable(x)) {\n        x.Dispose();\n    }\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED = Symbol(\"curried\");\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    const uncurried = (...args) => {\n        let res = f;\n        for (let i = 0; i < arity; i++) {\n            res = res(args[i]);\n        }\n        return res;\n    };\n    uncurried[CURRIED] = f;\n    return uncurried;\n}\nfunction _curry(args, arity, f) {\n    return (arg) => arity === 1\n        ? f(...args.concat([arg]))\n        // Note it's important to generate a new args array every time\n        // because a partially applied function can be run multiple times\n        : _curry(args.concat([arg]), arity - 1, f);\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    else if (CURRIED in f) {\n        return f[CURRIED];\n    }\n    else {\n        return _curry([], arity, f);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED in f) {\n        f = f[CURRIED];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        return _curry(args, arity, f);\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport function ensureErrorOrException(e) {\n    return isException(e) ? e : new Error(String(e));\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// Adapted from https://github.com/MikeMcl/big.js/blob/0f94dc9110d55c4f324a47ba6a2e832ce23ac589/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v6.0.3\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2020 Michael Mclaughlin\n *  https://github.com/MikeMcl/big.js/LICENCE.md\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\n */\nPE = 29, // 0 to 1000000\n/*\n * When true, an error will be thrown if a primitive number is passed to the Big constructor,\n * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\n * primitive number without a loss of precision.\n */\nSTRICT = false, // true or false\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            if (typeof n !== 'string') {\n                if (Big.strict === true) {\n                    throw TypeError(INVALID + 'number');\n                }\n                // Minus zero?\n                n = n === 0 && 1 / n < 0 ? '-0' : String(n);\n            }\n            parse(x, n);\n        }\n        // Retain a reference to this Big constructor.\n        // Shadow Big.prototype.constructor which points to Object.\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.strict = STRICT;\n    return Big;\n}\nfunction normalize(x) {\n    // x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    if (!NUMERIC.test(n)) {\n        throw Error(INVALID + 'number');\n    }\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // original version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP + 1, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\n *\n * x {Big} The Big to round.\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, sd, rm, more) {\n    var xc = x.c;\n    if (rm === UNDEFINED)\n        rm = Big.RM;\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\n        throw Error(INVALID_RM);\n    }\n    if (sd < 1) {\n        more =\n            rm === 3 && (more || !!xc[0]) || sd === 0 && (rm === 1 && xc[0] >= 5 ||\n                rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED)));\n        xc.length = 1;\n        if (more) {\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n            x.e = x.e - sd + 1;\n            xc[0] = 1;\n        }\n        else {\n            // Zero.\n            xc[0] = x.e = 0;\n        }\n    }\n    else if (sd < xc.length) {\n        // xc[sd] is the digit after the digit that may be rounded up.\n        const isZero = xc.findIndex((xci, idx) => idx >= sd && xci > 0) < 0;\n        more =\n            rm === 1 && xc[sd] >= 5 ||\n                rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\n                    (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\n                rm === 3 && (more || !isZero);\n        // Remove any digits after the required precision.\n        xc.length = sd--;\n        // Round up?\n        if (more) {\n            // Rounding up may mean the previous digit has to be rounded up.\n            for (; ++xc[sd] > 9;) {\n                xc[sd] = 0;\n                if (!sd--) {\n                    ++x.e;\n                    xc.unshift(1);\n                }\n            }\n        }\n        // Remove trailing zeros.\n        for (sd = xc.length; !xc[--sd];)\n            xc.pop();\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n */\nfunction stringify(x, doExponential, isNonzero) {\n    var e = x.e, s = x.c.join(''), n = s.length;\n    // Exponential notation?\n    if (doExponential) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n) {\n            for (e -= n; e--;)\n                s += '0';\n        }\n        else if (e < n) {\n            s = s.slice(0, e) + '.' + s.slice(e);\n        }\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && isNonzero ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n */\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // original version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    // Divisor is zero?\n    if (!b[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    // Dividend is 0? Return +-0.\n    if (!a[0]) {\n        y.s = k;\n        y.c = [y.e = 0];\n        return y;\n    }\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, p = dp + (q.e = x.e - y.e) + 1; // precision of the result\n    q.s = k;\n    k = p < 0 ? 0 : p;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n        p--;\n    }\n    // Round?\n    if (qi > p)\n        round(q, p, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return this.cmp(y) === 0;\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (yc[0]) {\n            y.s = -b;\n        }\n        else if (xc[0]) {\n            y = new Big(x);\n        }\n        else {\n            y.s = 1;\n        }\n        return y;\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var e, k, t, Big = this.constructor, x = new Big(this), y = new Big(y);\n    // Signs differ?\n    if (x.s != y.s) {\n        y.s = -y.s;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (!yc[0]) {\n            if (xc[0]) {\n                y = new Big(x);\n            }\n            else {\n                y.s = x.s;\n            }\n        }\n        return y;\n    }\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (e = xe - ye) {\n        if (e > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            e = -e;\n            t = xc;\n        }\n        t.reverse();\n        for (; e--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    e = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (k = 0; e; xc[e] %= 10)\n        k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (k) {\n        xc.unshift(k);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (e = xc.length; xc[--e] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big('1'), one = new Big('1'), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\n        throw Error(INVALID + 'exponent');\n    }\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.prec = function (sd, rm) {\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n        throw Error(INVALID + 'precision');\n    }\n    return round(new this.constructor(this), sd, rm);\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\n * using rounding mode rm, or Big.RM if rm is not specified.\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.round = function (dp, rm) {\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    return round(new this.constructor(this), dp + this.e + 1, rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big('0.5');\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0) {\n        throw Error(NAME + 'No square root');\n    }\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s + '');\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0]) {\n        y.c = [y.e = 0];\n        return y;\n    }\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = b;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toExponential = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), ++dp, rm);\n        for (; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, true, !!n);\n};\n/*\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), dp + x.e + 1, rm);\n        // x.e may have changed if the value is rounded up.\n        for (dp = dp + x.e + 1; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, false, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toJSON = P.toString = function () {\n    var x = this, Big = x.constructor;\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\n};\n/*\n * Return the value of this Big as a primitve number.\n */\nP.toNumber = function () {\n    var n = Number(stringify(this, true, true));\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\n        throw Error(NAME + 'Imprecise conversion');\n    }\n    return n;\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * rounding mode rm, or Big.RM if rm is not specified.\n * Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toPrecision = function (sd, rm) {\n    var x = this, Big = x.constructor, n = x.c[0];\n    if (sd !== UNDEFINED) {\n        if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n            throw Error(INVALID + 'precision');\n        }\n        x = round(new Big(x), sd, rm);\n        for (; x.c.length < sd;)\n            x.c.push(0);\n    }\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = function () {\n    var x = this, Big = x.constructor;\n    if (Big.strict === true) {\n        throw Error(NAME + 'valueOf disallowed');\n    }\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\n};\n// Export\nexport var Big = _Big_();\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n// export function makeRangeStepFunction(step: Decimal, last: Decimal) {\n//   const stepComparedWithZero = step.cmp(get_Zero);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Decimal) => {\n//     const comparedWithLast = x.cmp(last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\nexport function divRem(x, y, out) {\n    const div = ~~(x / y);\n    const rem = x % y;\n    if (out != null) {\n        out.contents = rem;\n        return div;\n    }\n    else {\n        return [div, rem];\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n// export function makeRangeStepFunction(step: Long, last: Long, unsigned: boolean) {\n//   const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Long) => {\n//     const comparedWithLast = LongLib.compare(x, last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\nexport function divRem(x, y, out) {\n    const div = op_Division(x, y);\n    const rem = op_Modulus(x, y);\n    if (out != null) {\n        out.contents = rem;\n        return div;\n    }\n    else {\n        return [div, rem];\n    }\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nimport Decimal from \"./Decimal.js\";\nimport { fromInt as int64FromInt } from \"./Long.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class MethodInfo {\n    constructor(name, parameters, returnType) {\n        this.name = name;\n        this.parameters = parameters;\n        this.returnType = returnType;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport class GenericParameter extends TypeInfo {\n    constructor(name) {\n        super(name);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(\"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport function measure_type(fullname) {\n    return new TypeInfo(fullname);\n}\nexport function generic_type(name) {\n    return new GenericParameter(name);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof TypeInfo) {\n        const elemType = getElementType(info);\n        if (elemType != null) {\n            return name(elemType) + \"[]\";\n        }\n        else {\n            const i = info.fullname.lastIndexOf(\".\");\n            return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n        }\n    }\n    else {\n        return info.name;\n    }\n}\nexport function fullName(t) {\n    const elemType = getElementType(t);\n    if (elemType != null) {\n        return fullName(elemType) + \"[]\";\n    }\n    else if (t.generics == null || t.generics.length === 0) {\n        return t.fullname;\n    }\n    else {\n        return t.fullname + \"[\" + t.generics.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n}\nexport function namespace(t) {\n    const elemType = getElementType(t);\n    if (elemType != null) {\n        return namespace(elemType);\n    }\n    else {\n        const i = t.fullname.lastIndexOf(\".\");\n        return i === -1 ? \"\" : t.fullname.substr(0, i);\n    }\n}\nexport function isArray(t) {\n    return getElementType(t) != null;\n}\nexport function getElementType(t) {\n    var _a;\n    return t.fullname === \"[]\" && ((_a = t.generics) === null || _a === void 0 ? void 0 : _a.length) === 1 ? t.generics[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isGenericParameter(t) {\n    return t instanceof GenericParameter;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    return (t2.fullname === obj_type.fullname) || (t1.parent != null && (t1.parent.Equals(t2) || isSubclassOf(t1.parent, t2)));\n}\nfunction isErasedToNumber(t) {\n    return isEnum(t) || [\n        int8_type.fullname,\n        uint8_type.fullname,\n        int16_type.fullname,\n        uint16_type.fullname,\n        int32_type.fullname,\n        uint32_type.fullname,\n        float32_type.fullname,\n        float64_type.fullname,\n    ].includes(t.fullname);\n}\nexport function isInstanceOfType(t, o) {\n    if (t.fullname === obj_type.fullname)\n        return true;\n    switch (typeof o) {\n        case \"boolean\":\n            return t.fullname === bool_type.fullname;\n        case \"string\":\n            return t.fullname === string_type.fullname;\n        case \"function\":\n            return isFunction(t);\n        case \"number\":\n            return isErasedToNumber(t);\n        default:\n            return t.construct != null && o instanceof t.construct;\n    }\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else if (isErasedToNumber(t)) {\n        return 0;\n    }\n    else {\n        switch (t.fullname) {\n            case obj_type.fullname:\n                return {};\n            case bool_type.fullname:\n                return false;\n            case \"System.Int64\":\n            case \"System.UInt64\":\n                // typeof<int64> and typeof<uint64> get transformed to class_type(\"System.Int64\")\n                // and class_type(\"System.UInt64\") respectively. Test for the name of the primitive type.\n                return int64FromInt(0);\n            case decimal_type.fullname:\n                return new Decimal(0);\n            case char_type.fullname:\n                // Even though char is a value type, it's erased to string, and Unchecked.defaultof<char> is null\n                return null;\n            default:\n                throw new Error(`Cannot access constructor of ${t.fullname}`);\n        }\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","module ProjectilePhysicsSimulation.Physics\n\nopen FSharp.Data.UnitSystems.SI.UnitSymbols\n\n// milisecond\n[<Measure>] type ms\n\n// degrees\n[<Measure>] type deg\n\n\n// Here we have some fun and make our own Vector2 type:\n[<Fable.Core.Erase>]\ntype Vector2<[<Measure>] 'u> =\n  Vector2 of\n    x: float<'u> *\n    y: float<'u>\n  with\n    static member ( + ) (Vector2(ax, ay), Vector2(bx, by)) = Vector2(ax + bx, ay + by)\n    static member ( - ) (Vector2(ax, ay), Vector2(bx, by)) = Vector2(ax - bx, ay - by)\n    static member ( * ) (Vector2(ax, ay), Vector2(bx, by)) = ax * bx + ay * by\n    static member ( * ) (scalar, Vector2(ax, ay)) = Vector2(scalar * ax, scalar * ay)\n    static member ( * ) (Vector2(ax, ay), scalar) = Vector2(scalar * ax, scalar * ay)\n    static member ( / ) (Vector2(ax, ay), scalar) = Vector2(ax / scalar, ay / scalar)\n\n\n[<CompilationRepresentation (CompilationRepresentationFlags.ModuleSuffix)>]\nmodule Vector2 =\n  let zero = Vector2(0.0<_>, 0.0<_>)\n\n  let ofMagnitudeDegrees (magnitude: float<_>) (degrees: float<deg>) =\n    Vector2\n      (magnitude * cos (degrees * System.Math.PI / 180.0<deg>),\n       magnitude * sin (degrees * System.Math.PI / 180.0<deg>))\n\n  let inline X (Vector2(x, _)) = x\n  let inline Y (Vector2(_, y)) = y\n\n  let inline withX x (Vector2(_, y)) = Vector2(x, y)\n  let inline withY y (Vector2(x, _)) = Vector2(x, y)\n\n  let magnitude (vector: Vector2<_>) = sqrt (vector * vector)\n\n  let normalizeUnsafe vector = vector / magnitude vector\n\n  let normalize vector =\n    if vector = zero\n    then zero\n    else normalizeUnsafe vector\n\ntype Vector2<[<Measure>] 'u> with\n  member this.X = Vector2.X this\n  member this.Y = Vector2.Y this\n\n\n\n\ntype Body =\n  { Width: int<m>\n    Height: int<m>\n    Mass: float<kg>\n    Position: Vector2<m>\n    Velocity: Vector2<m/s>\n    Acceleration: Vector2<m/s^2>\n    PrevAcceleration: Vector2<m/s^2> }\n\nmodule Body =\n  let minMass = System.Double.Epsilon * 1.0<kg>\n\n  let center body =\n    Vector2\n      (float body.Width * 0.5<_> + body.Position.X,\n       float body.Height * 0.5<_> + body.Position.Y)\n\n\n\n\ntype Settings =\n  { InitialSpeed: float<m/s>\n    InitialAngle: float<deg>\n    InitialPosition: Vector2<m>\n\n    AccelerationGravity: float<m/s^2>\n    DragConstant: float<kg/m>\n\n    ShowTrajectory: bool\n    ShowVelocityMarker: bool\n\n    TraceInterval: float<s>\n    SimulationSpeed: float\n    JumpStep: float<s> }\n\ntype Simulation =\n  { Projectile: Body\n    Running: bool\n    Time: float<s>\n    LastTracer: float<s>\n    LeftOverTime: float<s>\n    Settings: Settings }\n\nlet timeStep = 1.0<s> / 120.0\n\nmodule Simulation =\n  let minSpeed = 0.0\n  let maxSpeed = 10000.0\n  let minJumpStep = timeStep\n  let maxJumpStep = 10000.0<s>\n  let minDragConstant = 0.0<kg/m>\n  let minTraceInterval = timeStep - timeStep / 1000000000.0\n\n  let started sim = sim.Time > 0.0<_>\n  let timeSinceLastTracer sim = sim.Time - sim.LastTracer\n\n  let private applyGravity (gravity: float<m/s^2>) (Vector2(x, y)) = Vector2(x, y + gravity)\n\n  // Force drag = 1/2 * fluid density (kg/m^3) * contact area (m^2) * drag coefficient (unitless) * v^2 (m^2/s^2) * [direction Vector2 (unitless)]\n  // https://en.wikipedia.org/wiki/Drag_%28physics%29\n  // c (kg/m) = fluid density * contact area * drag coefficient / 2\n  // Force drag (kg m/s^2) = c (kg/m) * v^2 (m^2/s^2) * [direction]\n  let private accclerationDrag (constant: float<kg/m>) (velocity: Vector2<m/s>) mass =\n    -constant * (velocity * velocity) * (Vector2.normalize velocity) / mass\n\n  let acceleration settings body =\n    accclerationDrag settings.DragConstant body.Velocity body.Mass\n    |> applyGravity settings.AccelerationGravity\n\n  // Uses Beeman's algortithm, a variation of velocity verlet (https://en.wikipedia.org/wiki/Beeman%27s_algorithm):\n  let private move body (time: float<s>) newAcceleration =\n    let deltaPosition = body.Velocity * time + 1.0 / 6.0 * body.Acceleration * (time * time)\n    { body with\n        Position = body.Position + deltaPosition\n        Velocity = body.Velocity + 1.0 / 6.0 * (2.0 * newAcceleration + 5.0 * body.Acceleration - body.PrevAcceleration) * time\n        Acceleration = newAcceleration\n        PrevAcceleration = body.Acceleration },\n    deltaPosition\n\n  let simulate otherSideEffects sim timeToSimulate =\n    let numSteps = timeToSimulate / timeStep |> floor |> int\n    let mutable projectile = sim.Projectile\n\n    for step = 1 to numSteps do\n      let newProjectile, deltaPosition = move projectile timeStep (acceleration sim.Settings projectile)\n      otherSideEffects projectile deltaPosition (timeStep * float step) // Allows data in between frames to be accessed, in this case used to draw trajectory tracers\n      projectile <- newProjectile\n\n    let simulatedTime = timeStep * float numSteps\n    let newTime = sim.Time + simulatedTime\n    { sim with\n        Time = newTime\n        LeftOverTime = timeToSimulate - simulatedTime\n        LastTracer = newTime - ((newTime - sim.LastTracer) % sim.Settings.TraceInterval)\n        Projectile = projectile }\n\n\n  let initialProjectile settings projectile =\n    { projectile with\n        Position = settings.InitialPosition\n        Velocity = Vector2.ofMagnitudeDegrees settings.InitialSpeed settings.InitialAngle\n        Acceleration = acceleration settings projectile\n        PrevAcceleration = Vector2.zero }\n\n  let withSettings settings sim =\n    { sim with\n        Settings = settings\n        Projectile = initialProjectile settings sim.Projectile }\n","module ProjectilePhysicsSimulation.Graphics\n\nopen Fable.Core\nopen Browser.Dom\nopen Browser.Types\n\nopen Physics\n\nlet private phi = (1.0 + sqrt 5.0) / 2.0\nlet width = window.screen.availWidth / phi\nlet height = window.screen.availHeight * 0.75\n\nlet private setupCanvas id =\n  let canvas = document.getElementById id :?> HTMLCanvasElement\n  canvas.width <- width\n  canvas.height <- height\n\n  // HTMLCanvas uses top-left corner as (0,0) with\n  // positive y meaning downwards on the screen.\n  // Translate and scale the canvas so that (0,0)\n  // is the bottom left corner with positive y meaning upwards:\n  let context = canvas.getContext_2d()\n  context.translate(0.0, height)\n  context.scale(1.0, -1.0)\n  canvas, context\n\nlet trajectoryCanvas, trajectoryContext = setupCanvas \"trajectoryCanvas\"\nlet bodyCanvas, bodyContext = setupCanvas \"bodyCanvas\"\nlet velocityCanvas, velocityContext = setupCanvas \"velocityCanvas\"\n\ntrajectoryContext.fillStyle <- U3.Case1 \"black\"\nbodyContext.fillStyle <- U3.Case1 \"blue\"\nvelocityContext.strokeStyle <- U3.Case1 \"red\"\n\n\n\n\nlet private clear (context: CanvasRenderingContext2D) =\n  context.clearRect(0.0, 0.0, context.canvas.width, context.canvas.height)\n\nlet drawTracer (point: Vector2<_>) =\n  trajectoryContext.beginPath()\n  trajectoryContext.arc(\n    float point.X,\n    float point.Y,\n    2.5,\n    0.0,\n    System.Math.PI * 2.0)\n  trajectoryContext.closePath()\n  trajectoryContext.fill()\n\n(*\nOne formula for linear interpolation:\n  let lerp a b alpha = (1 - alpha) * a + alpha * b\nThe phyisics simulation works by calculating changes in position.\nSubstituting in (a + delta) for b, a simplification occurs:\n  lerp position newPosition alpha\n  = lerp position (position + deltaPosition) alpha\n  = (1 - alpha) * position + alpha * (position + deltaPosition)\n  = position - alpha * position + alpha * position + alpha * deltaPosition\n  = position + alpha * deltaPosition\n*)\nlet private lerpDelta (Vector2(x, y)) (Vector2(dx, dy)) alpha = Vector2(x + alpha * dx, y + alpha * dy)\n// let private lerpDelta (a: Vector2<_>) (delta: Vector2<_>) (alpha: float) = a + alpha * delta\n\nlet maybeDrawTracer traceInterval (timeSinceLastTracer: float<Data.UnitSystems.SI.UnitSymbols.s>) =\n  let mutable tracerCount = 1\n  let mutable nextTracerTime = traceInterval - timeSinceLastTracer\n\n  fun projectile deltaPosition time ->\n    if time >= nextTracerTime then\n      // alpha: how far into the timeStep the tracer should be drawn. [ 0 = start of timeStep, 1 = end of timeStep ]\n      ((timeStep - (time - nextTracerTime)) / timeStep) // alpha\n      |> lerpDelta (Body.center projectile) deltaPosition // alpha -> tracerPosition\n      |> drawTracer // tracerPosition -> draw\n      tracerCount <- tracerCount + 1\n      nextTracerTime <- traceInterval * float tracerCount - timeSinceLastTracer\n\nlet resetTrajectory projectile =\n  clear trajectoryContext\n  drawTracer <| Body.center projectile\n\n\n\n\nlet clearBody projectile =\n  bodyContext.clearRect(\n    float projectile.Position.X - 1.0,\n    float projectile.Position.Y - 1.0,\n    float projectile.Width + 2.0,\n    float projectile.Height + 2.0)\n\nlet drawBody projectile =\n  bodyContext.fillRect(\n    float projectile.Position.X,\n    float projectile.Position.Y,\n    float projectile.Width,\n    float projectile.Height)\n\n\nlet clearVelocityMarker projectile =\n  let c = Body.center projectile\n  let v = projectile.Velocity\n  velocityContext.clearRect(\n    float c.X - float (abs v.X) - 1.0,\n    float c.Y - float (abs v.Y) - 1.0,\n    float (2.0 * abs v.X) + 2.0,\n    float (2.0 * abs v.Y) + 2.0)\n\nlet drawVelocityMarker projectile =\n  velocityContext.beginPath()\n  let c = Body.center projectile\n  velocityContext.moveTo(float c.X, float c.Y)\n  velocityContext.lineTo(\n    float c.X + float projectile.Velocity.X,\n    float c.Y + float projectile.Velocity.Y)\n  velocityContext.closePath()\n  velocityContext.stroke()\n\n\n\nlet redrawProjectile prev projectile =\n  clearBody prev\n  clearVelocityMarker prev\n  drawBody projectile\n  drawVelocityMarker projectile\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 2 /* Local */; // better default than Unspecified\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    function fail() {\n        throw new Error(`The string is not a valid Date: ${input}`);\n    }\n    if (input == null || input.trim() === \"\") {\n        fail();\n    }\n    // ISO dates without TZ are parsed as UTC. Adding time without TZ keeps them local.\n    if (input.length === 10 && input[4] === \"-\" && input[7] === \"-\") {\n        input += \"T00:00:00\";\n    }\n    let date = new Date(input);\n    let offset = null;\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*(Z|[+-]([01]?\\d):?([0-5]?\\d)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                if (m[4] === \"Z\") {\n                    offset = \"Z\";\n                }\n                else {\n                    let offsetInMinutes = parseInt(m[5], 10) * 60 + parseInt(m[6] || \"0\", 10);\n                    if (m[4][0] === \"-\") {\n                        offsetInMinutes *= -1;\n                    }\n                    offset = offsetInMinutes;\n                    timeInSeconds -= offsetInMinutes * 60;\n                }\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            fail();\n        }\n        // Check again the date is valid after transformations, see #2229\n        if (isNaN(date.getTime())) {\n            fail();\n        }\n    }\n    return [date, offset];\n}\nexport function parse(str, detectUTC = false) {\n    const [date, offset] = parseRaw(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        if (idx < 0 || idx >= args.length) {\n            throw new Error(\"Index must be greater or equal to zero and less than the arguments' length.\");\n        }\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/([0#,]+)(\\.[0#]+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            const decimalPartLength = decimalPart != null ? decimalPart.length : 0;\n                            rep = toFixed(rep, Math.max(decimalPartLength - 1, 0));\n                            // Thousands separator\n                            if (intPart.indexOf(\",\") > 0) {\n                                const [intPart, decimalPart] = rep.split(\".\");\n                                const i = intPart.length % 3;\n                                const thousandGroups = Math.floor(intPart.length / 3);\n                                let thousands = i > 0 ? intPart.substr(0, i) + (thousandGroups > 0 ? \",\" : \"\") : \"\";\n                                for (let j = 0; j < thousandGroups; j++) {\n                                    thousands += intPart.substr(i + j * 3, 3) + (j < thousandGroups - 1 ? \",\" : \"\");\n                                }\n                                rep = decimalPart ? thousands + \".\" + decimalPart : thousands;\n                            }\n                            // In .NET you can mix 0/# placeholders but for simplicity we only check the left most character\n                            intPart = intPart.replace(/,/g, \"\");\n                            const intPartLength = intPart.length > 0 && intPart[0] === \"0\" ? intPart.length : 0;\n                            return padLeft(rep, intPartLength - sign.length + decimalPartLength, \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, options) {\n    count = typeof count === \"number\" ? count : undefined;\n    options = typeof options === \"number\" ? options : 0;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    const removeEmpty = (options & 1) === 1;\n    const trim = (options & 2) === 2;\n    splitters = splitters || [];\n    splitters = splitters.filter(x => x).map(escape);\n    splitters = splitters.length > 0 ? splitters : [\"\\\\s\"];\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    let findSplits = true;\n    let i = 0;\n    do {\n        const match = reg.exec(str);\n        if (match === null) {\n            const candidate = trim ? str.substring(i).trim() : str.substring(i);\n            if (!removeEmpty || candidate.length > 0) {\n                splits.push(candidate);\n            }\n            findSplits = false;\n        }\n        else {\n            const candidate = trim ? str.substring(i, match.index).trim() : str.substring(i, match.index);\n            if (!removeEmpty || candidate.length > 0) {\n                if (count != null && splits.length + 1 === count) {\n                    splits.push(trim ? str.substring(i).trim() : str.substring(i));\n                    findSplits = false;\n                }\n                else {\n                    splits.push(candidate);\n                }\n            }\n            i = reg.lastIndex;\n        }\n    } while (findSplits);\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\nexport function fmt(strs, ...args) {\n    return ({ strs, args });\n}\nexport function fmtWith(fmts) {\n    return (strs, ...args) => ({ strs, args, fmts });\n}\nexport function getFormat(s) {\n    return s.fmts\n        ? s.strs.reduce((acc, newPart, index) => acc + `{${String(index - 1) + s.fmts[index - 1]}}` + newPart)\n        : s.strs.reduce((acc, newPart, index) => acc + `{${index - 1}}` + newPart);\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\r\nimport { min as min_1, disposeSafe, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\r\nimport { SR_indexOutOfBounds } from \"./Global.js\";\r\n\r\nexport function Helpers_allocateArrayFromCons(cons, len) {\r\n    if ((typeof cons) === \"function\") {\r\n        return new cons(len);\r\n    }\r\n    else {\r\n        return new Array(len);\r\n    }\r\n}\r\n\r\nfunction indexNotFound() {\r\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\r\n}\r\n\r\nfunction differentLengths() {\r\n    throw (new Error(\"Arrays had different lengths\"));\r\n}\r\n\r\nexport function append(array1, array2, cons) {\r\n    const len1 = array1.length | 0;\r\n    const len2 = array2.length | 0;\r\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\r\n    for (let i = 0; i <= (len1 - 1); i++) {\r\n        newArray[i] = array1[i];\r\n    }\r\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\r\n        newArray[i_1 + len1] = array2[i_1];\r\n    }\r\n    return newArray;\r\n}\r\n\r\nexport function filter(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function fill(target, targetIndex, count, value) {\r\n    const start = targetIndex | 0;\r\n    return target.fill(value, start, (start + count));\r\n}\r\n\r\nexport function getSubArray(array, start, count) {\r\n    const start_1 = start | 0;\r\n    return array.slice(start_1, (start_1 + count));\r\n}\r\n\r\nexport function last(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    return array[array.length - 1];\r\n}\r\n\r\nexport function tryLast(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[array.length - 1]);\r\n    }\r\n}\r\n\r\nexport function mapIndexed(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(i, source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function map(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function mapIndexed2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapIndexed3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapFold(mapping, state, array, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = 0; i <= (array.length - 1); i++) {\r\n            const patternInput = mapping(acc, array[i]);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function mapFoldBack(mapping, array, state, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = array.length - 1; i >= 0; i--) {\r\n            const patternInput = mapping(array[i], acc);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function indexed(source) {\r\n    const len = source.length | 0;\r\n    const target = new Array(len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = [i, source[i]];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function truncate(count, array) {\r\n    const count_1 = max_1(comparePrimitives, 0, count) | 0;\r\n    const start = 0;\r\n    return array.slice(start, (start + count_1));\r\n}\r\n\r\nexport function concat(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const matchValue = arrays_1.length | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return Helpers_allocateArrayFromCons(cons, 0);\r\n        }\r\n        case 1: {\r\n            return arrays_1[0];\r\n        }\r\n        default: {\r\n            let totalIdx = 0;\r\n            let totalLength = 0;\r\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\r\n                const arr_1 = arrays_1[idx];\r\n                totalLength = ((totalLength + arr_1.length) | 0);\r\n            }\r\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\r\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\r\n                const arr_2 = arrays_1[idx_1];\r\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\r\n                    result[totalIdx] = arr_2[j];\r\n                    totalIdx = ((totalIdx + 1) | 0);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function collect(mapping, array, cons) {\r\n    return concat(map(mapping, array, null), cons);\r\n}\r\n\r\nexport function where(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function contains(value, array, eq) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return false;\r\n            }\r\n            else if (eq.Equals(value, array[i])) {\r\n                return true;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function empty(cons) {\r\n    return Helpers_allocateArrayFromCons(cons, 0);\r\n}\r\n\r\nexport function singleton(value, cons) {\r\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\r\n    ar[0] = value;\r\n    return ar;\r\n}\r\n\r\nexport function initialize(count, initializer, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (count - 1); i++) {\r\n        result[i] = initializer(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function pairwise(array) {\r\n    if (array.length < 2) {\r\n        return [];\r\n    }\r\n    else {\r\n        const count = (array.length - 1) | 0;\r\n        const result = new Array(count);\r\n        for (let i = 0; i <= (count - 1); i++) {\r\n            result[i] = [array[i], array[i + 1]];\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function replicate(count, initial, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (result.length - 1); i++) {\r\n        result[i] = initial;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function copy(array) {\r\n    return array.slice();\r\n}\r\n\r\nexport function reverse(array) {\r\n    const array_2 = array.slice();\r\n    return array_2.reverse();\r\n}\r\n\r\nexport function scan(folder, state, array, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[0] = state;\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        res[i + 1] = folder(res[i], array[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function scanBack(folder, array, state, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[array.length] = state;\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n        res[i] = folder(array[i], res[i + 1]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function skip(count, array, cons) {\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = ((count < 0) ? 0 : count) | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) && predicate(array[count])) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = count | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function take(count, array, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        return array.slice(start, (start + count));\r\n    }\r\n}\r\n\r\nexport function takeWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) && predicate(array[count])) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        const count_1 = count | 0;\r\n        return array.slice(start, (start + count_1));\r\n    }\r\n}\r\n\r\nexport function addInPlace(x, array) {\r\n    array.push(x);\r\n}\r\n\r\nexport function addRangeInPlace(range, array) {\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(enumerator);\r\n    }\r\n}\r\n\r\nexport function insertRangeInPlace(index, range, array) {\r\n    let index_1;\r\n    let i = index;\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            (index_1 = (i | 0), array.splice(index_1, 0, x));\r\n            i = ((i + 1) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(enumerator);\r\n    }\r\n}\r\n\r\nexport function removeInPlace(item_1, array) {\r\n    const i = (array.indexOf(item_1, 0)) | 0;\r\n    if (i > -1) {\r\n        array.splice(i, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function removeAllInPlace(predicate, array) {\r\n    const countRemoveAll = (count) => {\r\n        const i = (array.findIndex(predicate)) | 0;\r\n        if (i > -1) {\r\n            array.splice(i, 1);\r\n            return (countRemoveAll(count) + 1) | 0;\r\n        }\r\n        else {\r\n            return count | 0;\r\n        }\r\n    };\r\n    return countRemoveAll(0) | 0;\r\n}\r\n\r\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\r\n    const diff = (targetIndex - sourceIndex) | 0;\r\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\r\n        target[i + diff] = source[i];\r\n    }\r\n}\r\n\r\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\r\n    try {\r\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\r\n    }\r\n    catch (matchValue) {\r\n        copyTo(source, sourceIndex, target, targetIndex, count);\r\n    }\r\n}\r\n\r\nexport function indexOf(array, item_1, start, count) {\r\n    const start_1 = defaultArg(start, 0) | 0;\r\n    const i = (array.indexOf(item_1, start_1)) | 0;\r\n    if ((count != null) && (i >= (start_1 + value_2(count)))) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return i | 0;\r\n    }\r\n}\r\n\r\nexport function partition(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\r\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\r\n    let iTrue = 0;\r\n    let iFalse = 0;\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        if (f(source[i])) {\r\n            res1[iTrue] = source[i];\r\n            iTrue = ((iTrue + 1) | 0);\r\n        }\r\n        else {\r\n            res2[iFalse] = source[i];\r\n            iFalse = ((iFalse + 1) | 0);\r\n        }\r\n    }\r\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\r\n}\r\n\r\nexport function find(predicate, array) {\r\n    const matchValue = array.find(predicate);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_2(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, array) {\r\n    return array.find(predicate);\r\n}\r\n\r\nexport function findIndex(predicate, array) {\r\n    const matchValue = (array.findIndex(predicate)) | 0;\r\n    if (matchValue > -1) {\r\n        return matchValue | 0;\r\n    }\r\n    else {\r\n        return indexNotFound() | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, array) {\r\n    const matchValue = (array.findIndex(predicate)) | 0;\r\n    if (matchValue > -1) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function pick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return indexNotFound();\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue != null) {\r\n                    return value_2(matchValue);\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function tryPick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue == null) {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function findBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound();\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return array[i];\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function tryFindBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return some(array[i]);\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function findLastIndex(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return -1;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function findIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound() | 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function choose(chooser, array, cons) {\r\n    const res = [];\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        const matchValue = chooser(array[i]);\r\n        if (matchValue != null) {\r\n            const y = value_2(matchValue);\r\n            res.push(y);\r\n        }\r\n    }\r\n    if ((typeof cons) === \"function\") {\r\n        return map((x) => x, res, cons);\r\n    }\r\n    else {\r\n        return res;\r\n    }\r\n}\r\n\r\nexport function foldIndexed(folder, state, array) {\r\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\r\n}\r\n\r\nexport function fold(folder, state, array) {\r\n    return array.reduce((folder), state);\r\n}\r\n\r\nexport function iterate(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(array[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(i, array[i]);\r\n    }\r\n}\r\n\r\nexport function iterate2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(i, array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function isEmpty(array) {\r\n    return array.length === 0;\r\n}\r\n\r\nexport function forAll(predicate, array) {\r\n    return array.every(predicate);\r\n}\r\n\r\nexport function permute(f, array) {\r\n    const size = array.length | 0;\r\n    const res = array.slice();\r\n    const checkFlags = new Array(size);\r\n    iterateIndexed((i, x) => {\r\n        const j = f(i) | 0;\r\n        if ((j < 0) ? true : (j >= size)) {\r\n            throw (new Error(\"Not a valid permutation\"));\r\n        }\r\n        res[j] = x;\r\n        checkFlags[j] = 1;\r\n    }, array);\r\n    if (!(checkFlags.every((y) => (1 === y)))) {\r\n        throw (new Error(\"Not a valid permutation\"));\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function setSlice(target, lower, upper, source) {\r\n    const lower_1 = defaultArg(lower, 0) | 0;\r\n    const upper_1 = defaultArg(upper, -1) | 0;\r\n    const length = (((upper_1 >= 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\r\n    for (let i = 0; i <= length; i++) {\r\n        target[i + lower_1] = source[i];\r\n    }\r\n}\r\n\r\nexport function sortInPlaceBy(projection, xs, comparer) {\r\n    xs.sort((x, y) => comparer.Compare(projection(x), projection(y)));\r\n}\r\n\r\nexport function sortInPlace(xs, comparer) {\r\n    xs.sort((x, y) => comparer.Compare(x, y));\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => comparer.Compare(x, y));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => comparer.Compare(projection(x), projection(y)));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => (comparer.Compare(x, y) * -1));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => (comparer.Compare(projection(x), projection(y)) * -1));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const comparer_1 = comparer;\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(comparer_1);\r\n    return xs_1;\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const len1 = xs.length | 0;\r\n    const len2 = ys.length | 0;\r\n    const res = new Array(len1 * len2);\r\n    for (let i = 0; i <= (xs.length - 1); i++) {\r\n        for (let j = 0; j <= (ys.length - 1); j++) {\r\n            res[(i * len2) + j] = [xs[i], ys[j]];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    const res = [];\r\n    const loop = (state_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const state_1 = state_1_mut;\r\n            const matchValue = generator(state_1);\r\n            if (matchValue != null) {\r\n                const x = matchValue[0];\r\n                const s = matchValue[1];\r\n                res.push(x);\r\n                state_1_mut = s;\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(state);\r\n    return res;\r\n}\r\n\r\nexport function unzip(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n    }, array);\r\n    return [res1, res2];\r\n}\r\n\r\nexport function unzip3(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    const res3 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n        res3[i] = tupledArg[2];\r\n    }, array);\r\n    return [res1, res2, res3];\r\n}\r\n\r\nexport function zip(array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function zip3(array1, array2, array3) {\r\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i], array3[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function chunkBySize(chunkSize, array) {\r\n    if (chunkSize < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\r\n            let slice;\r\n            const start_1 = (x * chunkSize) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            result.push(slice);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function splitAt(index, array) {\r\n    let start;\r\n    if ((index < 0) ? true : (index > array.length)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\r\n}\r\n\r\nexport function compareWith(comparer, array1, array2) {\r\n    if (array1 == null) {\r\n        if (array2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (array2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        let i = 0;\r\n        let result = 0;\r\n        const length1 = array1.length | 0;\r\n        const length2 = array2.length | 0;\r\n        if (length1 > length2) {\r\n            return 1;\r\n        }\r\n        else if (length1 < length2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            while ((i < length1) && (result === 0)) {\r\n                result = (comparer(array1[i], array2[i]) | 0);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return result | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function equalsWith(equals, array1, array2) {\r\n    if (array1 == null) {\r\n        if (array2 == null) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else if (array2 == null) {\r\n        return false;\r\n    }\r\n    else {\r\n        let i = 0;\r\n        let result = true;\r\n        const length1 = array1.length | 0;\r\n        const length2 = array2.length | 0;\r\n        if (length1 > length2) {\r\n            return false;\r\n        }\r\n        else if (length1 < length2) {\r\n            return false;\r\n        }\r\n        else {\r\n            while ((i < length1) && result) {\r\n                result = equals(array1[i], array2[i]);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function exactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return array[0];\r\n    }\r\n    else if (array.length === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return some(array[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function head(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        return array[0];\r\n    }\r\n}\r\n\r\nexport function tryHead(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[0]);\r\n    }\r\n}\r\n\r\nexport function tail(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\r\n    }\r\n    return array.slice(1);\r\n}\r\n\r\nexport function item(index, array) {\r\n    return array[index];\r\n}\r\n\r\nexport function tryItem(index, array) {\r\n    if ((index < 0) ? true : (index >= array.length)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[index]);\r\n    }\r\n}\r\n\r\nexport function foldBackIndexed(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldBack(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldIndexed2(folder, state, array1, array2) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        throw (new Error(\"Arrays have different lengths\"));\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        acc = folder(i, acc, array1[i], array2[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function fold2(folder, state, array1, array2) {\r\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\r\n}\r\n\r\nexport function foldBackIndexed2(folder, array1, array2, state) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const size = array1.length | 0;\r\n    for (let i = 1; i <= size; i++) {\r\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(f, array1, array2, state) {\r\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\r\n}\r\n\r\nexport function reduce(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduce(reduction_1);\r\n}\r\n\r\nexport function reduceBack(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduceRight(reduction_1);\r\n}\r\n\r\nexport function forAll2(predicate, array1, array2) {\r\n    return fold2((acc, x, y) => (acc && predicate(x, y)), true, array1, array2);\r\n}\r\n\r\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\r\n    existsOffset:\r\n    while (true) {\r\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\r\n        if (index === array.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array_mut = array;\r\n            index_mut = (index + 1);\r\n            continue existsOffset;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists(predicate, array) {\r\n    return existsOffset(predicate, array, 0);\r\n}\r\n\r\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\r\n    existsOffset2:\r\n    while (true) {\r\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\r\n        if (index === array1.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array1[index], array2[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array1_mut = array1;\r\n            array2_mut = array2;\r\n            index_mut = (index + 1);\r\n            continue existsOffset2;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    return existsOffset2(predicate, array1, array2, 0);\r\n}\r\n\r\nexport function sum(array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, array[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function sumBy(projection, array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, projection(array[i]));\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, array[i]);\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function averageBy(projection, array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, projection(array[i]));\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function windowed(windowSize, source) {\r\n    if (windowSize <= 0) {\r\n        throw (new Error(\"windowSize must be positive\"));\r\n    }\r\n    let res;\r\n    const len = max_1(comparePrimitives, 0, (source.length - windowSize) + 1) | 0;\r\n    res = (new Array(len));\r\n    for (let i = windowSize; i <= source.length; i++) {\r\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function splitInto(chunks, array) {\r\n    if (chunks < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        const chunks_1 = min_1(comparePrimitives, chunks, array.length) | 0;\r\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\r\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\r\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\r\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\r\n            let slice;\r\n            const start_1 = ((i * minChunkSize) + min_1(comparePrimitives, chunksWithExtraItem, i)) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            result.push(slice);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function transpose(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const len = arrays_1.length | 0;\r\n    if (len === 0) {\r\n        return new Array(0);\r\n    }\r\n    else {\r\n        const firstArray = arrays_1[0];\r\n        const lenInner = firstArray.length | 0;\r\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\r\n            differentLengths();\r\n        }\r\n        const result = new Array(lenInner);\r\n        for (let i = 0; i <= (lenInner - 1); i++) {\r\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\r\n            for (let j = 0; j <= (len - 1); j++) {\r\n                result[i][j] = arrays_1[j][i];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function insertAt(index, y, xs) {\r\n    const len = xs.length | 0;\r\n    if ((index < 0) ? true : (index > len)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    const target = new xs.constructor(len + 1);\r\n    for (let i = 0; i <= (index - 1); i++) {\r\n        target[i] = xs[i];\r\n    }\r\n    target[index] = y;\r\n    for (let i_1 = index; i_1 <= (len - 1); i_1++) {\r\n        target[i_1 + 1] = xs[i_1];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function insertManyAt(index, ys, xs) {\r\n    const len = xs.length | 0;\r\n    if ((index < 0) ? true : (index > len)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    const ys_1 = Array.from(ys);\r\n    const len2 = ys_1.length | 0;\r\n    const target = new xs.constructor(len + len2);\r\n    for (let i = 0; i <= (index - 1); i++) {\r\n        target[i] = xs[i];\r\n    }\r\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\r\n        target[index + i_1] = ys_1[i_1];\r\n    }\r\n    for (let i_2 = index; i_2 <= (len - 1); i_2++) {\r\n        target[i_2 + len2] = xs[i_2];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function removeAt(index, xs) {\r\n    if ((index < 0) ? true : (index >= xs.length)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    let i = -1;\r\n    return filter((_arg1) => {\r\n        i = ((i + 1) | 0);\r\n        return i !== index;\r\n    }, xs);\r\n}\r\n\r\nexport function removeManyAt(index, count, xs) {\r\n    let i = -1;\r\n    let status = -1;\r\n    const ys = filter((_arg1) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            status = 0;\r\n            return false;\r\n        }\r\n        else if (i > index) {\r\n            if (i < (index + count)) {\r\n                return false;\r\n            }\r\n            else {\r\n                status = 1;\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, xs);\r\n    const status_1 = (((status === 0) && ((i + 1) === (index + count))) ? 1 : status) | 0;\r\n    if (status_1 < 1) {\r\n        const arg = (status_1 < 0) ? \"index\" : \"count\";\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + arg));\r\n    }\r\n    return ys;\r\n}\r\n\r\nexport function updateAt(index, y, xs) {\r\n    const len = xs.length | 0;\r\n    if ((index < 0) ? true : (index >= len)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    const target = new xs.constructor(len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = ((i === index) ? y : xs[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\n","import { join } from \"./String.js\";\r\nimport { uncurry, disposeSafe, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\r\nimport { Record } from \"./Types.js\";\r\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\r\nimport { SR_inputSequenceTooLong, SR_inputSequenceEmpty, SR_inputMustBeNonNegative, SR_notEnoughElements, SR_differentLengths, SR_keyNotFoundAlt, SR_indexOutOfBounds, SR_inputWasEmpty } from \"./Global.js\";\r\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\r\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\r\n\r\nexport class FSharpList extends Record {\r\n    constructor(head, tail) {\r\n        super();\r\n        this.head = head;\r\n        this.tail = tail;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        return (\"[\" + join(\"; \", xs)) + \"]\";\r\n    }\r\n    Equals(other) {\r\n        const xs = this;\r\n        if (xs === other) {\r\n            return true;\r\n        }\r\n        else {\r\n            const loop = (xs_1_mut, ys_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                    const matchValue = [xs_1.tail, ys_1.tail];\r\n                    if (matchValue[0] != null) {\r\n                        if (matchValue[1] != null) {\r\n                            const xt = matchValue[0];\r\n                            const yt = matchValue[1];\r\n                            if (equals(xs_1.head, ys_1.head)) {\r\n                                xs_1_mut = xt;\r\n                                ys_1_mut = yt;\r\n                                continue loop;\r\n                            }\r\n                            else {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (matchValue[1] != null) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(xs, other);\r\n        }\r\n    }\r\n    GetHashCode() {\r\n        const xs = this;\r\n        const loop = (i_mut, h_mut, xs_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\r\n                const matchValue = xs_1.tail;\r\n                if (matchValue != null) {\r\n                    const t = matchValue;\r\n                    if (i > 18) {\r\n                        return h | 0;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\r\n                        xs_1_mut = t;\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return h | 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0, 0, xs) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    CompareTo(other) {\r\n        const xs = this;\r\n        const loop = (xs_1_mut, ys_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                const matchValue = [xs_1.tail, ys_1.tail];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const xt = matchValue[0];\r\n                        const yt = matchValue[1];\r\n                        const c = compare(xs_1.head, ys_1.head) | 0;\r\n                        if (c === 0) {\r\n                            xs_1_mut = xt;\r\n                            ys_1_mut = yt;\r\n                            continue loop;\r\n                        }\r\n                        else {\r\n                            return c | 0;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                else if (matchValue[1] != null) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(xs, other) | 0;\r\n    }\r\n    GetEnumerator() {\r\n        const xs = this;\r\n        return ListEnumerator$1_$ctor_3002E699(xs);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const xs = this;\r\n        return getEnumerator(xs);\r\n    }\r\n}\r\n\r\nexport function FSharpList$reflection(gen0) {\r\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\r\n}\r\n\r\nexport class ListEnumerator$1 {\r\n    constructor(xs) {\r\n        this.xs = xs;\r\n        this.it = this.xs;\r\n        this.current = null;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        const matchValue = __.it.tail;\r\n        if (matchValue != null) {\r\n            const t = matchValue;\r\n            __.current = __.it.head;\r\n            __.it = t;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        const __ = this;\r\n        __.it = __.xs;\r\n        __.current = null;\r\n    }\r\n    Dispose() {\r\n    }\r\n}\r\n\r\nexport function ListEnumerator$1$reflection(gen0) {\r\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\r\n}\r\n\r\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\r\n    return new ListEnumerator$1(xs);\r\n}\r\n\r\nexport function FSharpList_get_Empty() {\r\n    return new FSharpList(null, void 0);\r\n}\r\n\r\nexport function FSharpList_Cons_305B8EAC(x, xs) {\r\n    return new FSharpList(x, xs);\r\n}\r\n\r\nexport function FSharpList__get_IsEmpty(xs) {\r\n    return xs.tail == null;\r\n}\r\n\r\nexport function FSharpList__get_Length(xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = matchValue;\r\n                continue loop;\r\n            }\r\n            else {\r\n                return i | 0;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs) | 0;\r\n}\r\n\r\nexport function FSharpList__get_Head(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return xs.head;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Tail(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                if (i === index) {\r\n                    return xs_1.head;\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    xs_1_mut = matchValue;\r\n                    continue loop;\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function empty() {\r\n    return FSharpList_get_Empty();\r\n}\r\n\r\nexport function cons(x, xs) {\r\n    return FSharpList_Cons_305B8EAC(x, xs);\r\n}\r\n\r\nexport function singleton(x) {\r\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    return FSharpList__get_IsEmpty(xs);\r\n}\r\n\r\nexport function length(xs) {\r\n    return FSharpList__get_Length(xs);\r\n}\r\n\r\nexport function head(xs) {\r\n    return FSharpList__get_Head(xs);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n}\r\n\r\nexport function tail(xs) {\r\n    return FSharpList__get_Tail(xs);\r\n}\r\n\r\nexport function tryLast(xs_mut) {\r\n    tryLast:\r\n    while (true) {\r\n        const xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return void 0;\r\n        }\r\n        else {\r\n            const t = FSharpList__get_Tail(xs);\r\n            if (FSharpList__get_IsEmpty(t)) {\r\n                return some(FSharpList__get_Head(xs));\r\n            }\r\n            else {\r\n                xs_mut = t;\r\n                continue tryLast;\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_inputWasEmpty));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const loop = (xs_1_mut, ys_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\r\n            if (matchValue[0]) {\r\n                if (matchValue[1]) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return -1;\r\n                }\r\n            }\r\n            else if (matchValue[1]) {\r\n                return 1;\r\n            }\r\n            else {\r\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\r\n                if (c === 0) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return c | 0;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs, ys) | 0;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    const len = FSharpList__get_Length(xs) | 0;\r\n    const res = fill(new Array(len), 0, len, null);\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (!FSharpList__get_IsEmpty(xs_1)) {\r\n                res[i] = FSharpList__get_Head(xs_1);\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(0, xs);\r\n    return res;\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_1)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function foldIndexed(folder, state, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, state, xs);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    let ys_1 = ys;\r\n    while ((!FSharpList__get_IsEmpty(xs_1)) && (!FSharpList__get_IsEmpty(ys_1))) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n        ys_1 = FSharpList__get_Tail(ys_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function unfold(gen, state) {\r\n    const loop = (acc_mut, node_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, node = node_mut;\r\n            const matchValue = gen(acc);\r\n            if (matchValue != null) {\r\n                acc_mut = matchValue[1];\r\n                node_mut = ((t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t)));\r\n                continue loop;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(state, root);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function toSeq(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function ofArrayWithTail(xs, tail_1) {\r\n    let res = tail_1;\r\n    for (let i = xs.length - 1; i >= 0; i--) {\r\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function ofArray(xs) {\r\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    let xs_3, t;\r\n    if (isArrayLike(xs)) {\r\n        return ofArray(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        const root = FSharpList_get_Empty();\r\n        let node = root;\r\n        const enumerator = getEnumerator(xs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                node = ((xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t))));\r\n            }\r\n        }\r\n        finally {\r\n            disposeSafe(enumerator);\r\n        }\r\n        const xs_5 = node;\r\n        const t_2 = FSharpList_get_Empty();\r\n        xs_5.tail = t_2;\r\n        return FSharpList__get_Tail(root);\r\n    }\r\n}\r\n\r\nexport function concat(lists) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    const action = (xs) => {\r\n        node = fold((acc, x) => {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }, node, xs);\r\n    };\r\n    if (isArrayLike(lists)) {\r\n        lists.forEach(action);\r\n    }\r\n    else if (lists instanceof FSharpList) {\r\n        iterate(action, lists);\r\n    }\r\n    else {\r\n        const enumerator = getEnumerator(lists);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n        }\r\n        finally {\r\n            disposeSafe(enumerator);\r\n        }\r\n    }\r\n    const xs_6 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_6.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    let xs_4, t_2;\r\n    const root = FSharpList_get_Empty();\r\n    let node;\r\n    const t = new FSharpList(state, void 0);\r\n    root.tail = t;\r\n    node = t;\r\n    let acc = state;\r\n    let xs_3 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_3)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_3));\r\n        node = ((xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2))));\r\n        xs_3 = FSharpList__get_Tail(xs_3);\r\n    }\r\n    const xs_6 = node;\r\n    const t_4 = FSharpList_get_Empty();\r\n    xs_6.tail = t_4;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return ofArray(scanBack_1(folder, toArray(xs), state));\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    let xs_1, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    let ys = xs;\r\n    while (!FSharpList__get_IsEmpty(ys)) {\r\n        let zs = mapping(FSharpList__get_Head(ys));\r\n        while (!FSharpList__get_IsEmpty(zs)) {\r\n            node = ((xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t))));\r\n            zs = FSharpList__get_Tail(zs);\r\n        }\r\n        ys = FSharpList__get_Tail(ys);\r\n    }\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = foldIndexed((i, acc, x) => {\r\n        const t = new FSharpList(mapping(i, x), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const t = new FSharpList(mapping(x), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold2((acc, x, y) => {\r\n        const t = new FSharpList(mapping(x, y), void 0);\r\n        acc.tail = t;\r\n        return t;\r\n    }, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = ((t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(0, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\r\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                zs_1_mut = FSharpList__get_Tail(zs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(root, xs, ys, zs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const patternInput_1 = fold((tupledArg, x) => {\r\n        let t;\r\n        const patternInput = mapping(tupledArg[1], x);\r\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\r\n    }, [root, state], xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_2;\r\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\r\n}\r\n\r\nexport function tryPick(f, xs) {\r\n    const loop = (xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = f(FSharpList__get_Head(xs_1));\r\n                if (matchValue == null) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs);\r\n}\r\n\r\nexport function pick(f, xs) {\r\n    const matchValue = tryPick(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(f, xs) {\r\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\r\n}\r\n\r\nexport function find(f, xs) {\r\n    const matchValue = tryFind(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(f, xs) {\r\n    return tryFindBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findBack(f, xs) {\r\n    const matchValue = tryFindBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(f, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (f(FSharpList__get_Head(xs_1))) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function findIndex(f, xs) {\r\n    const matchValue = tryFindIndex(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(f, xs) {\r\n    return tryFindIndexBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(f, xs) {\r\n    const matchValue = tryFindIndexBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryItem(n, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (i === n) {\r\n                return some(FSharpList__get_Head(xs_1));\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function item(n, xs) {\r\n    return FSharpList__get_Item_Z524259A4(xs, n);\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        if (f(x)) {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function partition(f, xs) {\r\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\r\n    const root2 = patternInput[1];\r\n    const root1 = patternInput[0];\r\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\r\n        const lacc = tupledArg[0];\r\n        const racc = tupledArg[1];\r\n        return (x) => {\r\n            let t, t_2;\r\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\r\n        };\r\n    }), [root1, root2], xs);\r\n    const t_4 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_4;\r\n    const t_5 = FSharpList_get_Empty();\r\n    patternInput_1[1].tail = t_5;\r\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\r\n}\r\n\r\nexport function choose(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const matchValue = f(x);\r\n        if (matchValue == null) {\r\n            return acc;\r\n        }\r\n        else {\r\n            const t = new FSharpList(value_1(matchValue), void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function contains(value, xs, eq) {\r\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\r\n}\r\n\r\nexport function initialize(n, f) {\r\n    let xs, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    for (let i = 0; i <= (n - 1); i++) {\r\n        node = ((xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t))));\r\n    }\r\n    const xs_2 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_2.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reduce(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputWasEmpty));\r\n    }\r\n    else {\r\n        return fold(f, head(xs), tail(xs));\r\n    }\r\n}\r\n\r\nexport function reduceBack(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputWasEmpty));\r\n    }\r\n    else {\r\n        return foldBack(f, tail(xs), head(xs));\r\n    }\r\n}\r\n\r\nexport function forAll(f, xs) {\r\n    return fold((acc, x) => (acc && f(x)), true, xs);\r\n}\r\n\r\nexport function forAll2(f, xs, ys) {\r\n    return fold2((acc, x, y) => (acc && f(x, y)), true, xs, ys);\r\n}\r\n\r\nexport function exists(f, xs) {\r\n    return tryFindIndex(f, xs) != null;\r\n}\r\n\r\nexport function exists2(f_mut, xs_mut, ys_mut) {\r\n    exists2:\r\n    while (true) {\r\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\r\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0]) {\r\n            if (matchValue[1]) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 2;\r\n            }\r\n        }\r\n        else if (matchValue[1]) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return false;\r\n            }\r\n            case 1: {\r\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    xs_mut = FSharpList__get_Tail(xs);\r\n                    ys_mut = FSharpList__get_Tail(ys);\r\n                    continue exists2;\r\n                }\r\n            }\r\n            case 2: {\r\n                throw (new Error((SR_differentLengths + \"\\\\nParameter name: \") + \"list2\"));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function unzip(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function unzip3(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const arr = toArray(xs);\r\n    arr.sort(comparer);\r\n    return ofArray(arr);\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs);\r\n    return averager.DivideByInt(total, count);\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs);\r\n    return averager.DivideByInt(total, count);\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return ofArray(permute_1(f, toArray(xs)));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return ofArray(map_1(ofArray, chunkBySize_1(chunkSize, toArray(xs))));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    iterate((x) => {\r\n        iterate((y) => {\r\n            let xs_1, t;\r\n            node = ((xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t))));\r\n        }, ys);\r\n    }, xs);\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function skip(count_mut, xs_mut) {\r\n    skip:\r\n    while (true) {\r\n        const count = count_mut, xs = xs_mut;\r\n        if (count <= 0) {\r\n            return xs;\r\n        }\r\n        else if (FSharpList__get_IsEmpty(xs)) {\r\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n        }\r\n        else {\r\n            count_mut = (count - 1);\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skip;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate_mut, xs_mut) {\r\n    skipWhile:\r\n    while (true) {\r\n        const predicate = predicate_mut, xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return xs;\r\n        }\r\n        else if (!predicate(FSharpList__get_Head(xs))) {\r\n            return xs;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skipWhile;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function take(count, xs) {\r\n    if (count < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\r\n    }\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    const loop = (acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function getSlice(startIndex, endIndex, xs) {\r\n    const len = length(xs) | 0;\r\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\r\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\r\n    if (startIndex_1 < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\r\n    }\r\n    else if (endIndex_1 >= len) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\r\n    }\r\n    else if (endIndex_1 < startIndex_1) {\r\n        return FSharpList_get_Empty();\r\n    }\r\n    else {\r\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\r\n    }\r\n}\r\n\r\nexport function splitAt(index, xs) {\r\n    if (index < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    if (index > FSharpList__get_Length(xs)) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return [take(index, xs), skip(index, xs)];\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return FSharpList__get_Head(xs);\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    if ((!FSharpList__get_IsEmpty(xs)) && FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return ofArray(pairwise_1(toArray(xs)));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return ofArray(map_1(ofArray, windowed_1(windowSize, toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return ofArray(map_1(ofArray, splitInto_1(chunks, toArray(xs))));\r\n}\r\n\r\nexport function transpose(lists) {\r\n    return ofArray(map_1(ofArray, transpose_1(map_1(toArray, Array.from(lists)))));\r\n}\r\n\r\nexport function insertAt(index, y, xs) {\r\n    let i = -1;\r\n    let isDone = false;\r\n    const result = fold((acc, x) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            isDone = true;\r\n            return FSharpList_Cons_305B8EAC(x, FSharpList_Cons_305B8EAC(y, acc));\r\n        }\r\n        else {\r\n            return FSharpList_Cons_305B8EAC(x, acc);\r\n        }\r\n    }, FSharpList_get_Empty(), xs);\r\n    return reverse(isDone ? result : (((i + 1) === index) ? FSharpList_Cons_305B8EAC(y, result) : (() => {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    })()));\r\n}\r\n\r\nexport function insertManyAt(index, ys, xs) {\r\n    let i = -1;\r\n    let isDone = false;\r\n    const ys_1 = ofSeq(ys);\r\n    const result = fold((acc, x) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            isDone = true;\r\n            return FSharpList_Cons_305B8EAC(x, append(ys_1, acc));\r\n        }\r\n        else {\r\n            return FSharpList_Cons_305B8EAC(x, acc);\r\n        }\r\n    }, FSharpList_get_Empty(), xs);\r\n    return reverse(isDone ? result : (((i + 1) === index) ? append(ys_1, result) : (() => {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    })()));\r\n}\r\n\r\nexport function removeAt(index, xs) {\r\n    let i = -1;\r\n    let isDone = false;\r\n    const ys = filter((_arg1) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            isDone = true;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, xs);\r\n    if (!isDone) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return ys;\r\n}\r\n\r\nexport function removeManyAt(index, count, xs) {\r\n    let i = -1;\r\n    let status = -1;\r\n    const ys = filter((_arg1) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            status = 0;\r\n            return false;\r\n        }\r\n        else if (i > index) {\r\n            if (i < (index + count)) {\r\n                return false;\r\n            }\r\n            else {\r\n                status = 1;\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, xs);\r\n    const status_1 = (((status === 0) && ((i + 1) === (index + count))) ? 1 : status) | 0;\r\n    if (status_1 < 1) {\r\n        const arg = (status_1 < 0) ? \"index\" : \"count\";\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + arg));\r\n    }\r\n    return ys;\r\n}\r\n\r\nexport function updateAt(index, y, xs) {\r\n    let isDone = false;\r\n    const ys = mapIndexed((i, x) => {\r\n        if (i === index) {\r\n            isDone = true;\r\n            return y;\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n    }, xs);\r\n    if (!isDone) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return ys;\r\n}\r\n\r\n","import { clear, equals, isArrayLike, isDisposable, toIterator, disposeSafe, getEnumerator } from \"./Util.js\";\r\nimport { toString } from \"./Types.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { Operators_Lock, Operators_NullArg } from \"./FSharp.Core.js\";\r\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\r\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\r\nimport { SR_indexOutOfBounds } from \"./Global.js\";\r\n\r\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\r\n\r\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\r\n\r\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\r\n\r\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\r\n\r\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\r\n\r\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\r\n\r\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\r\n\r\nexport function Enumerator_noReset() {\r\n    throw (new Error(SR_resetNotSupported));\r\n}\r\n\r\nexport function Enumerator_notStarted() {\r\n    throw (new Error(SR_enumerationNotStarted));\r\n}\r\n\r\nexport function Enumerator_alreadyFinished() {\r\n    throw (new Error(SR_enumerationAlreadyFinished));\r\n}\r\n\r\nexport class Enumerator_Seq {\r\n    constructor(f) {\r\n        this.f = f;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        const maxCount = 4;\r\n        let i = 0;\r\n        let str = \"seq [\";\r\n        const e = getEnumerator(xs);\r\n        try {\r\n            while ((i < maxCount) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                if (i > 0) {\r\n                    str = (str + \"; \");\r\n                }\r\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                i = ((i + 1) | 0);\r\n            }\r\n            if (i === maxCount) {\r\n                str = (str + \"; ...\");\r\n            }\r\n            return str + \"]\";\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n    GetEnumerator() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n}\r\n\r\nexport function Enumerator_Seq$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\r\n}\r\n\r\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\r\n    return new Enumerator_Seq(f);\r\n}\r\n\r\nexport class Enumerator_FromFunctions$1 {\r\n    constructor(current, next, dispose) {\r\n        this.current = current;\r\n        this.next = next;\r\n        this.dispose = dispose;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        return __.next();\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        Enumerator_noReset();\r\n    }\r\n    Dispose() {\r\n        const __ = this;\r\n        __.dispose();\r\n    }\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\r\n    return new Enumerator_FromFunctions$1(current, next, dispose);\r\n}\r\n\r\nexport function Enumerator_cast(e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        if (isDisposable(e)) {\r\n            disposeSafe(e);\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_concat(sources) {\r\n    let outerOpt = void 0;\r\n    let innerOpt = void 0;\r\n    let started = false;\r\n    let finished = false;\r\n    let curr = void 0;\r\n    const finish = () => {\r\n        finished = true;\r\n        if (innerOpt != null) {\r\n            const inner = innerOpt;\r\n            try {\r\n                disposeSafe(inner);\r\n            }\r\n            finally {\r\n                innerOpt = (void 0);\r\n            }\r\n        }\r\n        if (outerOpt != null) {\r\n            const outer = outerOpt;\r\n            try {\r\n                disposeSafe(outer);\r\n            }\r\n            finally {\r\n                outerOpt = (void 0);\r\n            }\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        else if (finished) {\r\n            Enumerator_alreadyFinished();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        let copyOfStruct;\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (finished) {\r\n            return false;\r\n        }\r\n        else {\r\n            let res = void 0;\r\n            while (res == null) {\r\n                const matchValue = [outerOpt, innerOpt];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const inner_1 = matchValue[1];\r\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                            res = true;\r\n                        }\r\n                        else {\r\n                            try {\r\n                                disposeSafe(inner_1);\r\n                            }\r\n                            finally {\r\n                                innerOpt = (void 0);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        const outer_1 = matchValue[0];\r\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                            innerOpt = ((copyOfStruct = ie, getEnumerator(copyOfStruct)));\r\n                        }\r\n                        else {\r\n                            finish();\r\n                            res = false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    outerOpt = getEnumerator(sources);\r\n                }\r\n            }\r\n            return value_1(res);\r\n        }\r\n    }, () => {\r\n        if (!finished) {\r\n            finish();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_enumerateThenFinally(f, e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        try {\r\n            disposeSafe(e);\r\n        }\r\n        finally {\r\n            f();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\r\n    let started = false;\r\n    let curr = void 0;\r\n    let state = some(openf());\r\n    const dispose = () => {\r\n        if (state != null) {\r\n            const x_1 = value_1(state);\r\n            try {\r\n                closef(x_1);\r\n            }\r\n            finally {\r\n                state = (void 0);\r\n            }\r\n        }\r\n    };\r\n    const finish = () => {\r\n        try {\r\n            dispose();\r\n        }\r\n        finally {\r\n            curr = (void 0);\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (state != null) {\r\n            const s = value_1(state);\r\n            let matchValue_1;\r\n            try {\r\n                matchValue_1 = compute(s);\r\n            }\r\n            catch (matchValue) {\r\n                finish();\r\n                throw matchValue;\r\n            }\r\n            if (matchValue_1 != null) {\r\n                curr = matchValue_1;\r\n                return true;\r\n            }\r\n            else {\r\n                finish();\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, dispose);\r\n}\r\n\r\nexport function Enumerator_unfold(f, state) {\r\n    let curr = void 0;\r\n    let acc = state;\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (curr != null) {\r\n            const x = curr[0];\r\n            const st = curr[1];\r\n            return x;\r\n        }\r\n        else {\r\n            return Enumerator_notStarted();\r\n        }\r\n    }, () => {\r\n        curr = f(acc);\r\n        if (curr != null) {\r\n            const x_1 = curr[0];\r\n            const st_1 = curr[1];\r\n            acc = st_1;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, () => {\r\n    });\r\n}\r\n\r\nexport function indexNotFound() {\r\n    throw (new Error(SR_keyNotFoundAlt));\r\n}\r\n\r\nexport function checkNonNull(argName, arg) {\r\n    if (arg == null) {\r\n        Operators_NullArg(argName);\r\n    }\r\n}\r\n\r\nexport function mkSeq(f) {\r\n    return Enumerator_Seq_$ctor_673A07F2(f);\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return getEnumerator(xs);\r\n}\r\n\r\nexport function delay(generator) {\r\n    return mkSeq(() => getEnumerator(generator()));\r\n}\r\n\r\nexport function concat(sources) {\r\n    return mkSeq(() => Enumerator_concat(sources));\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    return mkSeq(() => Enumerator_unfold(generator, state));\r\n}\r\n\r\nexport function empty() {\r\n    return delay(() => (new Array(0)));\r\n}\r\n\r\nexport function singleton(x) {\r\n    return delay(() => singleton_1(x));\r\n}\r\n\r\nexport function ofArray(arr) {\r\n    return arr;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    if (xs instanceof FSharpList) {\r\n        return toArray_1(xs);\r\n    }\r\n    else {\r\n        return Array.from(xs);\r\n    }\r\n}\r\n\r\nexport function ofList(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function toList(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return ofArray_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        return ofSeq_1(xs);\r\n    }\r\n}\r\n\r\nexport function generate(create, compute, dispose) {\r\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\r\n}\r\n\r\nexport function generateIndexed(create, compute, dispose) {\r\n    return mkSeq(() => {\r\n        let i = -1;\r\n        return Enumerator_generateWhileSome(create, (x) => {\r\n            i = ((i + 1) | 0);\r\n            return compute(i, x);\r\n        }, dispose);\r\n    });\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return concat([xs, ys]);\r\n}\r\n\r\nexport function cast(xs) {\r\n    return mkSeq(() => {\r\n        checkNonNull(\"source\", xs);\r\n        return Enumerator_cast(getEnumerator(xs));\r\n    });\r\n}\r\n\r\nexport function choose(chooser, xs) {\r\n    return generate(() => ofSeq(xs), (e) => {\r\n        let curr = void 0;\r\n        while ((curr == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return curr;\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let c = 0;\r\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            while (((c === 0) && b1) && b2) {\r\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\r\n                if (c === 0) {\r\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                }\r\n            }\r\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\r\n        }\r\n        finally {\r\n            disposeSafe(e2);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e1);\r\n    }\r\n}\r\n\r\nexport function contains(value, xs, comparer) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function enumerateFromFunctions(create, moveNext, current) {\r\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\r\n        const matchValue = x_1;\r\n        if (isDisposable(matchValue)) {\r\n            disposeSafe(matchValue);\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateThenFinally(source, compensation) {\r\n    const compensation_1 = compensation;\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\r\n        }\r\n        catch (matchValue) {\r\n            compensation_1();\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateUsing(resource, source) {\r\n    const compensation = () => {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            let copyOfStruct = resource;\r\n            disposeSafe(copyOfStruct);\r\n        }\r\n    };\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\r\n        }\r\n        catch (matchValue_1) {\r\n            compensation();\r\n            throw matchValue_1;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateWhile(guard, xs) {\r\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    return choose((x) => {\r\n        if (f(x)) {\r\n            return some(x);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, xs);\r\n}\r\n\r\nexport function exists(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let found = false;\r\n            while (((!found) && e1[\"System.Collections.IEnumerator.MoveNext\"]()) && e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return found;\r\n        }\r\n        finally {\r\n            disposeSafe(e2);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e1);\r\n    }\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n            else {\r\n                return v;\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (predicate(c)) {\r\n                res = some(c);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function find(predicate, xs) {\r\n    const matchValue = tryFind(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(predicate, xs) {\r\n    return tryFindBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findBack(predicate, xs) {\r\n    const matchValue = tryFindBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (i_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\r\n                        return i;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return void 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0);\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function findIndex(predicate, xs) {\r\n    const matchValue = tryFindIndex(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, xs) {\r\n    return tryFindIndexBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(predicate, xs) {\r\n    const matchValue = tryFindIndexBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let acc = state;\r\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return acc;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let acc = state;\r\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return acc;\r\n        }\r\n        finally {\r\n            disposeSafe(e2);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e1);\r\n    }\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function forAll(predicate, xs) {\r\n    return !exists((x) => (!predicate(x)), xs);\r\n}\r\n\r\nexport function forAll2(predicate, xs, ys) {\r\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryHead_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryHead_2(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function head(xs) {\r\n    const matchValue = tryHead(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function initialize(count, f) {\r\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\r\n}\r\n\r\nexport function initializeInfinite(f) {\r\n    return initialize(2147483647, f);\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length === 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return isEmpty_1(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function tryItem(index, xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryItem_1(index, xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryItem_2(index, xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            const loop = (index_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const index_1 = index_1_mut;\r\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        return void 0;\r\n                    }\r\n                    else if (index_1 === 0) {\r\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    }\r\n                    else {\r\n                        index_1_mut = (index_1 - 1);\r\n                        continue loop;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(index);\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function item(index, xs) {\r\n    const matchValue = tryItem(index, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function tryLast(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    return acc;\r\n                }\r\n                else {\r\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                    continue loop;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function length(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length | 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return length_1(xs) | 0;\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            let count = 0;\r\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                count = ((count + 1) | 0);\r\n            }\r\n            return count | 0;\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            disposeSafe(tupledArg_1[0]);\r\n        }\r\n        finally {\r\n            disposeSafe(tupledArg_1[1]);\r\n        }\r\n    });\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            disposeSafe(tupledArg_1[0]);\r\n        }\r\n        finally {\r\n            disposeSafe(tupledArg_1[1]);\r\n        }\r\n    });\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        const e3 = tupledArg[2];\r\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) && e3[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            disposeSafe(tupledArg_1[0]);\r\n        }\r\n        finally {\r\n            try {\r\n                disposeSafe(tupledArg_1[1]);\r\n            }\r\n            finally {\r\n                disposeSafe(tupledArg_1[2]);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function readOnly(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return map((x) => x, xs);\r\n}\r\n\r\nexport class CachedSeq$1 {\r\n    constructor(cleanup, res) {\r\n        this.cleanup = cleanup;\r\n        this.res = res;\r\n    }\r\n    Dispose() {\r\n        const _ = this;\r\n        _.cleanup();\r\n    }\r\n    GetEnumerator() {\r\n        const _ = this;\r\n        return getEnumerator(_.res);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const _ = this;\r\n        return getEnumerator(_.res);\r\n    }\r\n}\r\n\r\nexport function CachedSeq$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.CachedSeq`1\", [gen0], CachedSeq$1);\r\n}\r\n\r\nexport function CachedSeq$1_$ctor_Z7A8347D4(cleanup, res) {\r\n    return new CachedSeq$1(cleanup, res);\r\n}\r\n\r\nexport function CachedSeq$1__Clear(_) {\r\n    _.cleanup();\r\n}\r\n\r\nexport function cache(source) {\r\n    checkNonNull(\"source\", source);\r\n    const prefix = [];\r\n    let enumeratorR = void 0;\r\n    return CachedSeq$1_$ctor_Z7A8347D4(() => {\r\n        Operators_Lock(prefix, () => {\r\n            clear(prefix);\r\n            let pattern_matching_result, e;\r\n            if (enumeratorR != null) {\r\n                if (value_1(enumeratorR) != null) {\r\n                    pattern_matching_result = 0;\r\n                    e = value_1(enumeratorR);\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n            switch (pattern_matching_result) {\r\n                case 0: {\r\n                    disposeSafe(e);\r\n                    break;\r\n                }\r\n            }\r\n            enumeratorR = (void 0);\r\n        });\r\n    }, unfold((i_1) => Operators_Lock(prefix, () => {\r\n        if (i_1 < prefix.length) {\r\n            return [prefix[i_1], i_1 + 1];\r\n        }\r\n        else {\r\n            if (i_1 >= prefix.length) {\r\n                let optEnumerator_2;\r\n                if (enumeratorR != null) {\r\n                    optEnumerator_2 = value_1(enumeratorR);\r\n                }\r\n                else {\r\n                    const optEnumerator = getEnumerator(source);\r\n                    enumeratorR = some(optEnumerator);\r\n                    optEnumerator_2 = optEnumerator;\r\n                }\r\n                if (optEnumerator_2 == null) {\r\n                }\r\n                else {\r\n                    const enumerator = optEnumerator_2;\r\n                    if (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        void (prefix.push(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                    }\r\n                    else {\r\n                        disposeSafe(enumerator);\r\n                        enumeratorR = some(void 0);\r\n                    }\r\n                }\r\n            }\r\n            return (i_1 < prefix.length) ? [prefix[i_1], i_1 + 1] : (void 0);\r\n        }\r\n    }), 0));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const ysCache = cache(ys);\r\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function tryPick(chooser, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function pick(chooser, xs) {\r\n    const matchValue = tryPick(chooser, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function reduce(folder, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return acc;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else {\r\n            throw (new Error(SR_inputSequenceEmpty));\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function reduceBack(folder, xs) {\r\n    const arr = toArray(xs);\r\n    if (arr.length > 0) {\r\n        return arr.reduceRight(folder);\r\n    }\r\n    else {\r\n        throw (new Error(SR_inputSequenceEmpty));\r\n    }\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return delay(() => ofArray(reverse_1(toArray(xs))));\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    return delay(() => {\r\n        let acc = state;\r\n        return concat([singleton(state), map((x) => {\r\n            acc = folder(acc, x);\r\n            return acc;\r\n        }, xs)]);\r\n    });\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\r\n}\r\n\r\nexport function skip(count, source) {\r\n    return mkSeq(() => {\r\n        const e = ofSeq(source);\r\n        try {\r\n            for (let _ = 1; _ <= count; _++) {\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n                }\r\n            }\r\n            return Enumerator_enumerateThenFinally(() => {\r\n            }, e);\r\n        }\r\n        catch (matchValue) {\r\n            disposeSafe(e);\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function skipWhile(predicate, xs) {\r\n    return delay(() => {\r\n        let skipped = true;\r\n        return filter((x) => {\r\n            if (skipped) {\r\n                skipped = predicate(x);\r\n            }\r\n            return !skipped;\r\n        }, xs);\r\n    });\r\n}\r\n\r\nexport function tail(xs) {\r\n    return skip(1, xs);\r\n}\r\n\r\nexport function take(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if (i < count) {\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() && predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) && e[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    return delay(() => concat(map(mapping, xs)));\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return delay(() => ofArray(map_1(ofArray, splitInto_1(chunks, toArray(xs)))));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return delay(() => ofArray(map_1(ofArray, windowed_1(windowSize, toArray(xs)))));\r\n}\r\n\r\nexport function transpose(xss) {\r\n    return delay(() => ofArray(map_1(ofArray, transpose_1(map_1(toArray, toArray(xss))))));\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    return delay(() => {\r\n        const arr = toArray(xs);\r\n        arr.sort(comparer);\r\n        return ofArray(arr);\r\n    });\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return delay(() => ofArray(map_1(ofArray, chunkBySize_1(chunkSize, toArray(xs)))));\r\n}\r\n\r\nexport function insertAt(index, y, xs) {\r\n    let isDone = false;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if ((isDone ? true : (i < index)) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else if (i === index) {\r\n            isDone = true;\r\n            return some(y);\r\n        }\r\n        else {\r\n            if (!isDone) {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function insertManyAt(index, ys, xs) {\r\n    let status = -1;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        if (i === index) {\r\n            status = 0;\r\n        }\r\n        let inserted;\r\n        if (status === 0) {\r\n            if (e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                inserted = some(e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                status = 1;\r\n                inserted = (void 0);\r\n            }\r\n        }\r\n        else {\r\n            inserted = (void 0);\r\n        }\r\n        if (inserted == null) {\r\n            if (e1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                if (status < 1) {\r\n                    throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n                }\r\n                return void 0;\r\n            }\r\n        }\r\n        else {\r\n            return some(value_1(inserted));\r\n        }\r\n    }, (tupledArg_1) => {\r\n        disposeSafe(tupledArg_1[0]);\r\n        disposeSafe(tupledArg_1[1]);\r\n    });\r\n}\r\n\r\nexport function removeAt(index, xs) {\r\n    let isDone = false;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if ((isDone ? true : (i < index)) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else if ((i === index) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            isDone = true;\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n        else {\r\n            if (!isDone) {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function removeManyAt(index, count, xs) {\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if (i < index) {\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n        }\r\n        else {\r\n            if (i === index) {\r\n                for (let _ = 1; _ <= count; _++) {\r\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"count\"));\r\n                    }\r\n                }\r\n            }\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function updateAt(index, y, xs) {\r\n    let isDone = false;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if ((isDone ? true : (i < index)) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else if ((i === index) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            isDone = true;\r\n            return some(y);\r\n        }\r\n        else {\r\n            if (!isDone) {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\n","import { disposeSafe, structuralHash, equals } from \"./Util.js\";\r\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\r\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\r\n\r\nexport const LanguagePrimitives_GenericEqualityComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport const LanguagePrimitives_GenericEqualityERComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport function LanguagePrimitives_FastGenericComparer() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function Operators_Failure(message) {\r\n    return new Error(message);\r\n}\r\n\r\nexport function Operators_FailurePattern(exn) {\r\n    return exn.message;\r\n}\r\n\r\nexport function Operators_NullArg(x) {\r\n    throw (new Error(x));\r\n}\r\n\r\nexport function Operators_Using(resource, action) {\r\n    try {\r\n        return action(resource);\r\n    }\r\n    finally {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            disposeSafe(resource);\r\n        }\r\n    }\r\n}\r\n\r\nexport function Operators_Lock(_lockObj, action) {\r\n    return action();\r\n}\r\n\r\nexport function ExtraTopLevelOperators_LazyPattern(input) {\r\n    return input.Value;\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\r\n    return format.cont((s) => {\r\n        StringBuilder__Append_Z721C83C5(builder, s);\r\n        return continuation();\r\n    });\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\r\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\r\n    }, builder, format);\r\n}\r\n\r\n","import { ensureErrorOrException } from './Types.js';\nexport class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(ensureErrorOrException(err));\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(ensureErrorOrException(err));\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (err) {\n                    ctx.onError(ensureErrorOrException(err));\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (err) {\n                        ctx.onError(ensureErrorOrException(err));\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\nimport { TimeoutException } from \"./SystemException.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// see AsyncBuilder.Delay\nfunction delay(generator) {\n    return protectedCont((ctx) => generator()(ctx));\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nfunction throwAfter(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onError(new TimeoutException());\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function startChild(computation, ms) {\n    if (ms) {\n        const computationWithTimeout = protectedBind(parallel2(computation, throwAfter(ms)), xs => protectedReturn(xs[0]));\n        return startChild(computationWithTimeout);\n    }\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return delay(() => awaitPromise(Promise.all(Array.from(computations, (w) => startAsPromise(w)))));\n}\nfunction parallel2(a, b) {\n    return delay(() => awaitPromise(Promise.all([startAsPromise(a), startAsPromise(b)])));\n}\nexport function sequential(computations) {\n    function _sequential(computations) {\n        let pr = Promise.resolve([]);\n        for (const c of computations) {\n            pr = pr.then(results => startAsPromise(c).then(r => results.concat([r])));\n        }\n        return pr;\n    }\n    return delay(() => awaitPromise(_sequential(computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function runSynchronously() {\n    throw new Error(\"Asynchronous code cannot be run synchronously in JS\");\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","namespace Elmish\n\n(**\nLog\n---------\nBasic cross-platform logging API.\n\n*)\nmodule internal Log =\n\n#if FABLE_COMPILER\n    open Fable.Core.JS\n\n    let onError (text: string, ex: exn) = console.error (text,ex)\n    let toConsole(text: string, o: #obj) = console.log(text,o)\n\n#else\n#if NETSTANDARD2_0\n    let onError (text: string, ex: exn) = System.Diagnostics.Trace.TraceError(\"{0}: {1}\", text, ex)\n    let toConsole(text: string, o: #obj) = printfn \"%s: %A\" text o\n#else\n    let onError (text: string, ex: exn) = System.Console.Error.WriteLine(\"{0}: {1}\", text, ex)\n    let toConsole(text: string, o: #obj) = printfn \"%s: %A\" text o\n#endif\n#endif\n\n#if FABLE_COMPILER\nmodule internal Timer =\n    open System.Timers\n    let delay interval callback =\n        let t = new Timer(float interval, AutoReset = false)\n        t.Elapsed.Add callback\n        t.Enabled <- true\n        t.Start()\n#endif\n","(**\nCmd\n---------\nCore abstractions for dispatching messages in Elmish.\n\n*)\n\nnamespace Elmish\n\nopen System\n\n/// Dispatch - feed new message into the processing loop\ntype Dispatch<'msg> = 'msg -> unit\n\n/// Subscription - return immediately, but may schedule dispatch of a message at any time\ntype Sub<'msg> = Dispatch<'msg> -> unit\n\n/// Cmd - container for subscriptions that may produce messages\ntype Cmd<'msg> = Sub<'msg> list\n\n/// Cmd module for creating and manipulating commands\n[<RequireQualifiedAccess>]\nmodule Cmd =\n    /// Execute the commands using the supplied dispatcher\n    let internal exec onError (dispatch: Dispatch<'msg>) (cmd: Cmd<'msg>) =\n        cmd |> List.iter (fun call -> try call dispatch with ex -> onError ex)\n\n    /// None - no commands, also known as `[]`\n    let none : Cmd<'msg> =\n        []\n\n    /// When emitting the message, map to another type\n    let map (f: 'a -> 'msg) (cmd: Cmd<'a>) : Cmd<'msg> =\n        cmd |> List.map (fun g -> (fun dispatch -> f >> dispatch) >> g)\n\n    /// Aggregate multiple commands\n    let batch (cmds: #seq<Cmd<'msg>>) : Cmd<'msg> =\n        cmds |> List.concat\n\n    /// Command to call the subscriber\n    let ofSub (sub: Sub<'msg>) : Cmd<'msg> =\n        [sub]\n\n    module OfFunc =\n        /// Command to evaluate a simple function and map the result\n        /// into success or error (of exception)\n        let either (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to evaluate a simple function and map the success to a message\n        /// discarding any possible error\n        let perform (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    ()\n            [bind]\n\n        /// Command to evaluate a simple function and map the error (in case of exception)\n        let attempt (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to issue a specific message\n        let result (msg:'msg) : Cmd<'msg> =\n            [fun dispatch -> dispatch msg]\n\n    module OfAsyncWith =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let either (start: Async<unit> -> unit) \n                   (task: 'a -> Async<_>)\n                   (arg: 'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    dispatch (match r with\n                             | Choice1Of2 x -> ofSuccess x\n                             | Choice2Of2 x -> ofError x)\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the success\n        let perform (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch (ofSuccess x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let attempt (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice2Of2 x -> dispatch (ofError x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block to the message\n        let result (start: Async<unit> -> unit) \n                   (task: Async<'msg>) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task\n                    dispatch r\n                }\n            [bind >> start]\n\n    module OfAsync =\n#if FABLE_COMPILER\n        let start x = Timer.delay 0 (fun _ -> Async.StartImmediate x)\n#else\n        let inline start x = Async.Start x\n#endif    \n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either start task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform start task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt start task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result start task\n\n    module OfAsyncImmediate =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either Async.StartImmediate task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform Async.StartImmediate task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt Async.StartImmediate task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result Async.StartImmediate task\n\n#if FABLE_COMPILER\n    module OfPromise =\n        /// Command to call `promise` block and map the results\n        let either (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the success\n        let perform (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg) =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the error\n        let attempt (task: 'a -> Fable.Core.JS.Promise<_>)\n                    (arg:'a)\n                    (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to dispatch the `promise` result\n        let result (task: Fable.Core.JS.Promise<'msg>) =\n            let bind dispatch =\n                task.``then`` dispatch\n                |> ignore\n            [bind]\n\n    [<Obsolete(\"Use `OfPromise.either` instead\")>]\n    let inline ofPromise (task: 'a -> Fable.Core.JS.Promise<_>)\n                         (arg:'a)\n                         (ofSuccess: _ -> 'msg)\n                         (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfPromise.either task arg ofSuccess ofError                     \n#else\n    open System.Threading.Tasks\n    module OfTask =\n        /// Command to call a task and map the results\n        let inline either (task: 'a -> Task<_>)\n                          (arg:'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.either (task >> Async.AwaitTask) arg ofSuccess ofError\n\n        /// Command to call a task and map the success\n        let inline perform (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.perform (task >> Async.AwaitTask) arg ofSuccess\n\n        /// Command to call a task and map the error\n        let inline attempt (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.attempt (task >> Async.AwaitTask) arg ofError\n\n        /// Command and map the task success\n        let inline result (task: Task<'msg>) : Cmd<'msg> =\n            OfAsync.result (task |> Async.AwaitTask)\n\n    [<Obsolete(\"Use OfTask.either instead\")>]\n    let inline ofTask (task: 'a -> Task<_>)\n                      (arg:'a)\n                      (ofSuccess: _ -> 'msg)\n                      (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfTask.either task arg ofSuccess ofError\n#endif\n\n    // Synonymous with `OfFunc.result`, may be removed in the future\n    let inline ofMsg (msg:'msg) : Cmd<'msg> =\n        OfFunc.result msg\n\n    [<Obsolete(\"Use `Cmd.OfAsync.either` instead\")>]\n    let inline ofAsync (task: 'a -> Async<_>)\n                       (arg: 'a)\n                       (ofSuccess: _ -> 'msg)\n                       (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfAsync.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.either` instead\")>]\n    let inline ofFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.perform` instead\")>]\n    let inline performFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.perform task arg ofSuccess\n\n    [<Obsolete(\"Use `Cmd.OfFunc.attempt` instead\")>]\n    let attemptFunc (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.attempt task arg ofError\n\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options, Fragment, Component } from 'preact';\n\nexport function initDevTools() {\n\tif (typeof window != 'undefined' && window.__PREACT_DEVTOOLS__) {\n\t\twindow.__PREACT_DEVTOOLS__.attachPreact('10.7.2', options, {\n\t\t\tFragment,\n\t\t\tComponent\n\t\t});\n\t}\n}\n","const ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nlet loggedTypeFailures = {};\n\n/**\n * Reset the history of which prop type warnings have been logged.\n */\nexport function resetPropWarnings() {\n\tloggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * Adapted from https://github.com/facebook/prop-types/blob/master/checkPropTypes.js\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n */\nexport function checkPropTypes(\n\ttypeSpecs,\n\tvalues,\n\tlocation,\n\tcomponentName,\n\tgetStack\n) {\n\tObject.keys(typeSpecs).forEach(typeSpecName => {\n\t\tlet error;\n\t\ttry {\n\t\t\terror = typeSpecs[typeSpecName](\n\t\t\t\tvalues,\n\t\t\t\ttypeSpecName,\n\t\t\t\tcomponentName,\n\t\t\t\tlocation,\n\t\t\t\tnull,\n\t\t\t\tReactPropTypesSecret\n\t\t\t);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\t\tif (error && !(error.message in loggedTypeFailures)) {\n\t\t\tloggedTypeFailures[error.message] = true;\n\t\t\tconsole.error(\n\t\t\t\t`Failed ${location} type: ${error.message}${(getStack &&\n\t\t\t\t\t`\\n${getStack()}`) ||\n\t\t\t\t\t''}`\n\t\t\t);\n\t\t}\n\t});\n}\n","import { options, Fragment } from 'preact';\n\n/**\n * Get human readable name of the component/dom node\n * @param {import('./internal').VNode} vnode\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function getDisplayName(vnode) {\n\tif (vnode.type === Fragment) {\n\t\treturn 'Fragment';\n\t} else if (typeof vnode.type == 'function') {\n\t\treturn vnode.type.displayName || vnode.type.name;\n\t} else if (typeof vnode.type == 'string') {\n\t\treturn vnode.type;\n\t}\n\n\treturn '#text';\n}\n\n/**\n * Used to keep track of the currently rendered `vnode` and print it\n * in debug messages.\n */\nlet renderStack = [];\n\n/**\n * Keep track of the current owners. An owner describes a component\n * which was responsible to render a specific `vnode`. This exclude\n * children that are passed via `props.children`, because they belong\n * to the parent owner.\n *\n * ```jsx\n * const Foo = props => <div>{props.children}</div> // div's owner is Foo\n * const Bar = props => {\n *   return (\n *     <Foo><span /></Foo> // Foo's owner is Bar, span's owner is Bar\n *   )\n * }\n * ```\n *\n * Note: A `vnode` may be hoisted to the root scope due to compiler\n * optimiztions. In these cases the `_owner` will be different.\n */\nlet ownerStack = [];\n\n/**\n * Get the currently rendered `vnode`\n * @returns {import('./internal').VNode | null}\n */\nexport function getCurrentVNode() {\n\treturn renderStack.length > 0 ? renderStack[renderStack.length - 1] : null;\n}\n\n/**\n * If the user doesn't have `@babel/plugin-transform-react-jsx-source`\n * somewhere in his tool chain we can't print the filename and source\n * location of a component. In that case we just omit that, but we'll\n * print a helpful message to the console, notifying the user of it.\n */\nlet hasBabelPlugin = false;\n\n/**\n * Check if a `vnode` is a possible owner.\n * @param {import('./internal').VNode} vnode\n */\nfunction isPossibleOwner(vnode) {\n\treturn typeof vnode.type == 'function' && vnode.type != Fragment;\n}\n\n/**\n * Return the component stack that was captured up to this point.\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function getOwnerStack(vnode) {\n\tconst stack = [vnode];\n\tlet next = vnode;\n\twhile (next._owner != null) {\n\t\tstack.push(next._owner);\n\t\tnext = next._owner;\n\t}\n\n\treturn stack.reduce((acc, owner) => {\n\t\tacc += `  in ${getDisplayName(owner)}`;\n\n\t\tconst source = owner.__source;\n\t\tif (source) {\n\t\t\tacc += ` (at ${source.fileName}:${source.lineNumber})`;\n\t\t} else if (!hasBabelPlugin) {\n\t\t\thasBabelPlugin = true;\n\t\t\tconsole.warn(\n\t\t\t\t'Add @babel/plugin-transform-react-jsx-source to get a more detailed component stack. Note that you should not add it to production builds of your App for bundle size reasons.'\n\t\t\t);\n\t\t}\n\n\t\treturn (acc += '\\n');\n\t}, '');\n}\n\n/**\n * Setup code to capture the component trace while rendering. Note that\n * we cannot simply traverse `vnode._parent` upwards, because we have some\n * debug messages for `this.setState` where the `vnode` is `undefined`.\n */\nexport function setupComponentStack() {\n\tlet oldDiff = options._diff;\n\tlet oldDiffed = options.diffed;\n\tlet oldRoot = options._root;\n\tlet oldVNode = options.vnode;\n\tlet oldRender = options._render;\n\n\toptions.diffed = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\townerStack.pop();\n\t\t}\n\t\trenderStack.pop();\n\t\tif (oldDiffed) oldDiffed(vnode);\n\t};\n\n\toptions._diff = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\trenderStack.push(vnode);\n\t\t}\n\t\tif (oldDiff) oldDiff(vnode);\n\t};\n\n\toptions._root = (vnode, parent) => {\n\t\townerStack = [];\n\t\tif (oldRoot) oldRoot(vnode, parent);\n\t};\n\n\toptions.vnode = vnode => {\n\t\tvnode._owner =\n\t\t\townerStack.length > 0 ? ownerStack[ownerStack.length - 1] : null;\n\t\tif (oldVNode) oldVNode(vnode);\n\t};\n\n\toptions._render = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\townerStack.push(vnode);\n\t\t}\n\n\t\tif (oldRender) oldRender(vnode);\n\t};\n}\n","import { checkPropTypes } from './check-props';\nimport { options, Component } from 'preact';\nimport {\n\tELEMENT_NODE,\n\tDOCUMENT_NODE,\n\tDOCUMENT_FRAGMENT_NODE\n} from './constants';\nimport {\n\tgetOwnerStack,\n\tsetupComponentStack,\n\tgetCurrentVNode,\n\tgetDisplayName\n} from './component-stack';\nimport { assign } from './util';\n\nconst isWeakMapSupported = typeof WeakMap == 'function';\n\nfunction getClosestDomNodeParent(parent) {\n\tif (!parent) return {};\n\tif (typeof parent.type == 'function') {\n\t\treturn getClosestDomNodeParent(parent._parent);\n\t}\n\treturn parent;\n}\n\nexport function initDebug() {\n\tsetupComponentStack();\n\n\tlet hooksAllowed = false;\n\n\t/* eslint-disable no-console */\n\tlet oldBeforeDiff = options._diff;\n\tlet oldDiffed = options.diffed;\n\tlet oldVnode = options.vnode;\n\tlet oldCatchError = options._catchError;\n\tlet oldRoot = options._root;\n\tlet oldHook = options._hook;\n\tconst warnedComponents = !isWeakMapSupported\n\t\t? null\n\t\t: {\n\t\t\t\tuseEffect: new WeakMap(),\n\t\t\t\tuseLayoutEffect: new WeakMap(),\n\t\t\t\tlazyPropTypes: new WeakMap()\n\t\t  };\n\tconst deprecations = [];\n\n\toptions._catchError = (error, vnode, oldVNode, errorInfo) => {\n\t\tlet component = vnode && vnode._component;\n\t\tif (component && typeof error.then == 'function') {\n\t\t\tconst promise = error;\n\t\t\terror = new Error(\n\t\t\t\t`Missing Suspense. The throwing component was: ${getDisplayName(vnode)}`\n\t\t\t);\n\n\t\t\tlet parent = vnode;\n\t\t\tfor (; parent; parent = parent._parent) {\n\t\t\t\tif (parent._component && parent._component._childDidSuspend) {\n\t\t\t\t\terror = promise;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// We haven't recovered and we know at this point that there is no\n\t\t\t// Suspense component higher up in the tree\n\t\t\tif (error instanceof Error) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\terrorInfo = errorInfo || {};\n\t\t\terrorInfo.componentStack = getOwnerStack(vnode);\n\t\t\toldCatchError(error, vnode, oldVNode, errorInfo);\n\n\t\t\t// when an error was handled by an ErrorBoundary we will nontheless emit an error\n\t\t\t// event on the window object. This is to make up for react compatibility in dev mode\n\t\t\t// and thus make the Next.js dev overlay work.\n\t\t\tif (typeof error.then != 'function') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\toptions._root = (vnode, parentNode) => {\n\t\tif (!parentNode) {\n\t\t\tthrow new Error(\n\t\t\t\t'Undefined parent passed to render(), this is the second argument.\\n' +\n\t\t\t\t\t'Check if the element is available in the DOM/has the correct id.'\n\t\t\t);\n\t\t}\n\n\t\tlet isValid;\n\t\tswitch (parentNode.nodeType) {\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\tcase DOCUMENT_NODE:\n\t\t\t\tisValid = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tisValid = false;\n\t\t}\n\n\t\tif (!isValid) {\n\t\t\tlet componentName = getDisplayName(vnode);\n\t\t\tthrow new Error(\n\t\t\t\t`Expected a valid HTML node as a second argument to render.\tReceived ${parentNode} instead: render(<${componentName} />, ${parentNode});`\n\t\t\t);\n\t\t}\n\n\t\tif (oldRoot) oldRoot(vnode, parentNode);\n\t};\n\n\toptions._diff = vnode => {\n\t\tlet { type, _parent: parent } = vnode;\n\t\tlet parentVNode = getClosestDomNodeParent(parent);\n\n\t\thooksAllowed = true;\n\n\t\tif (type === undefined) {\n\t\t\tthrow new Error(\n\t\t\t\t'Undefined component passed to createElement()\\n\\n' +\n\t\t\t\t\t'You likely forgot to export your component or might have mixed up default and named imports' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type != null && typeof type == 'object') {\n\t\t\tif (type._children !== undefined && type._dom !== undefined) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Invalid type passed to createElement(): ${type}\\n\\n` +\n\t\t\t\t\t\t'Did you accidentally pass a JSX literal as JSX twice?\\n\\n' +\n\t\t\t\t\t\t`  let My${getDisplayName(vnode)} = ${serializeVNode(type)};\\n` +\n\t\t\t\t\t\t`  let vnode = <My${getDisplayName(vnode)} />;\\n\\n` +\n\t\t\t\t\t\t'This usually happens when you export a JSX literal and not the component.' +\n\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid type passed to createElement(): ' +\n\t\t\t\t\t(Array.isArray(type) ? 'array' : type)\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\t(type === 'thead' || type === 'tfoot' || type === 'tbody') &&\n\t\t\tparentVNode.type !== 'table'\n\t\t) {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <thead/tbody/tfoot> should have a <table> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (\n\t\t\ttype === 'tr' &&\n\t\t\tparentVNode.type !== 'thead' &&\n\t\t\tparentVNode.type !== 'tfoot' &&\n\t\t\tparentVNode.type !== 'tbody' &&\n\t\t\tparentVNode.type !== 'table'\n\t\t) {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <tr> should have a <thead/tbody/tfoot/table> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type === 'td' && parentVNode.type !== 'tr') {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <td> should have a <tr> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type === 'th' && parentVNode.type !== 'tr') {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <th> should have a <tr>.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tvnode.ref !== undefined &&\n\t\t\ttypeof vnode.ref != 'function' &&\n\t\t\ttypeof vnode.ref != 'object' &&\n\t\t\t!('$$typeof' in vnode) // allow string refs when preact-compat is installed\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t`Component's \"ref\" property should be a function, or an object created ` +\n\t\t\t\t\t`by createRef(), but got [${typeof vnode.ref}] instead\\n` +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t}\n\n\t\tif (typeof vnode.type == 'string') {\n\t\t\tfor (const key in vnode.props) {\n\t\t\t\tif (\n\t\t\t\t\tkey[0] === 'o' &&\n\t\t\t\t\tkey[1] === 'n' &&\n\t\t\t\t\ttypeof vnode.props[key] != 'function' &&\n\t\t\t\t\tvnode.props[key] != null\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Component's \"${key}\" property should be a function, ` +\n\t\t\t\t\t\t\t`but got [${typeof vnode.props[key]}] instead\\n` +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check prop-types if available\n\t\tif (typeof vnode.type == 'function' && vnode.type.propTypes) {\n\t\t\tif (\n\t\t\t\tvnode.type.displayName === 'Lazy' &&\n\t\t\t\twarnedComponents &&\n\t\t\t\t!warnedComponents.lazyPropTypes.has(vnode.type)\n\t\t\t) {\n\t\t\t\tconst m =\n\t\t\t\t\t'PropTypes are not supported on lazy(). Use propTypes on the wrapped component itself. ';\n\t\t\t\ttry {\n\t\t\t\t\tconst lazyVNode = vnode.type();\n\t\t\t\t\twarnedComponents.lazyPropTypes.set(vnode.type, true);\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\tm + `Component wrapped in lazy() is ${getDisplayName(lazyVNode)}`\n\t\t\t\t\t);\n\t\t\t\t} catch (promise) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\tm + \"We will log the wrapped component's name once it is loaded.\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet values = vnode.props;\n\t\t\tif (vnode.type._forwarded) {\n\t\t\t\tvalues = assign({}, values);\n\t\t\t\tdelete values.ref;\n\t\t\t}\n\n\t\t\tcheckPropTypes(\n\t\t\t\tvnode.type.propTypes,\n\t\t\t\tvalues,\n\t\t\t\t'prop',\n\t\t\t\tgetDisplayName(vnode),\n\t\t\t\t() => getOwnerStack(vnode)\n\t\t\t);\n\t\t}\n\n\t\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n\t};\n\n\toptions._hook = (comp, index, type) => {\n\t\tif (!comp || !hooksAllowed) {\n\t\t\tthrow new Error('Hook can only be invoked from render methods.');\n\t\t}\n\n\t\tif (oldHook) oldHook(comp, index, type);\n\t};\n\n\t// Ideally we'd want to print a warning once per component, but we\n\t// don't have access to the vnode that triggered it here. As a\n\t// compromise and to avoid flooding the console with warnings we\n\t// print each deprecation warning only once.\n\tconst warn = (property, message) => ({\n\t\tget() {\n\t\t\tconst key = 'get' + property + message;\n\t\t\tif (deprecations && deprecations.indexOf(key) < 0) {\n\t\t\t\tdeprecations.push(key);\n\t\t\t\tconsole.warn(`getting vnode.${property} is deprecated, ${message}`);\n\t\t\t}\n\t\t},\n\t\tset() {\n\t\t\tconst key = 'set' + property + message;\n\t\t\tif (deprecations && deprecations.indexOf(key) < 0) {\n\t\t\t\tdeprecations.push(key);\n\t\t\t\tconsole.warn(`setting vnode.${property} is not allowed, ${message}`);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst deprecatedAttributes = {\n\t\tnodeName: warn('nodeName', 'use vnode.type'),\n\t\tattributes: warn('attributes', 'use vnode.props'),\n\t\tchildren: warn('children', 'use vnode.props.children')\n\t};\n\n\tconst deprecatedProto = Object.create({}, deprecatedAttributes);\n\n\toptions.vnode = vnode => {\n\t\tconst props = vnode.props;\n\t\tif (\n\t\t\tvnode.type !== null &&\n\t\t\tprops != null &&\n\t\t\t('__source' in props || '__self' in props)\n\t\t) {\n\t\t\tconst newProps = (vnode.props = {});\n\t\t\tfor (let i in props) {\n\t\t\t\tconst v = props[i];\n\t\t\t\tif (i === '__source') vnode.__source = v;\n\t\t\t\telse if (i === '__self') vnode.__self = v;\n\t\t\t\telse newProps[i] = v;\n\t\t\t}\n\t\t}\n\n\t\t// eslint-disable-next-line\n\t\tvnode.__proto__ = deprecatedProto;\n\t\tif (oldVnode) oldVnode(vnode);\n\t};\n\n\toptions.diffed = vnode => {\n\t\t// Check if the user passed plain objects as children. Note that we cannot\n\t\t// move this check into `options.vnode` because components can receive\n\t\t// children in any shape they want (e.g.\n\t\t// `<MyJSONFormatter>{{ foo: 123, bar: \"abc\" }}</MyJSONFormatter>`).\n\t\t// Putting this check in `options.diffed` ensures that\n\t\t// `vnode._children` is set and that we only validate the children\n\t\t// that were actually rendered.\n\t\tif (vnode._children) {\n\t\t\tvnode._children.forEach(child => {\n\t\t\t\tif (child && child.type === undefined) {\n\t\t\t\t\t// Remove internal vnode keys that will always be patched\n\t\t\t\t\tdelete child._parent;\n\t\t\t\t\tdelete child._depth;\n\t\t\t\t\tconst keys = Object.keys(child).join(',');\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Objects are not valid as a child. Encountered an object with the keys {${keys}}.` +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\thooksAllowed = false;\n\n\t\tif (oldDiffed) oldDiffed(vnode);\n\n\t\tif (vnode._children != null) {\n\t\t\tconst keys = [];\n\t\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\t\tconst child = vnode._children[i];\n\t\t\t\tif (!child || child.key == null) continue;\n\n\t\t\t\tconst key = child.key;\n\t\t\t\tif (keys.indexOf(key) !== -1) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Following component has two or more children with the ' +\n\t\t\t\t\t\t\t`same key attribute: \"${key}\". This may cause glitches and misbehavior ` +\n\t\t\t\t\t\t\t'in rendering process. Component: \\n\\n' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\n\t\t\t\t\t// Break early to not spam the console\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\t};\n}\n\nconst setState = Component.prototype.setState;\nComponent.prototype.setState = function(update, callback) {\n\tif (this._vnode == null) {\n\t\t// `this._vnode` will be `null` during componentWillMount. But it\n\t\t// is perfectly valid to call `setState` during cWM. So we\n\t\t// need an additional check to verify that we are dealing with a\n\t\t// call inside constructor.\n\t\tif (this.state == null) {\n\t\t\tconsole.warn(\n\t\t\t\t`Calling \"this.setState\" inside the constructor of a component is a ` +\n\t\t\t\t\t`no-op and might be a bug in your application. Instead, set ` +\n\t\t\t\t\t`\"this.state = {}\" directly.\\n\\n${getOwnerStack(getCurrentVNode())}`\n\t\t\t);\n\t\t}\n\t} else if (this._parentDom == null) {\n\t\tconsole.warn(\n\t\t\t`Can't call \"this.setState\" on an unmounted component. This is a no-op, ` +\n\t\t\t\t`but it indicates a memory leak in your application. To fix, cancel all ` +\n\t\t\t\t`subscriptions and asynchronous tasks in the componentWillUnmount method.` +\n\t\t\t\t`\\n\\n${getOwnerStack(this._vnode)}`\n\t\t);\n\t}\n\n\treturn setState.call(this, update, callback);\n};\n\nconst forceUpdate = Component.prototype.forceUpdate;\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode == null) {\n\t\tconsole.warn(\n\t\t\t`Calling \"this.forceUpdate\" inside the constructor of a component is a ` +\n\t\t\t\t`no-op and might be a bug in your application.\\n\\n${getOwnerStack(\n\t\t\t\t\tgetCurrentVNode()\n\t\t\t\t)}`\n\t\t);\n\t} else if (this._parentDom == null) {\n\t\tconsole.warn(\n\t\t\t`Can't call \"this.forceUpdate\" on an unmounted component. This is a no-op, ` +\n\t\t\t\t`but it indicates a memory leak in your application. To fix, cancel all ` +\n\t\t\t\t`subscriptions and asynchronous tasks in the componentWillUnmount method.` +\n\t\t\t\t`\\n\\n${getOwnerStack(this._vnode)}`\n\t\t);\n\t}\n\treturn forceUpdate.call(this, callback);\n};\n\n/**\n * Serialize a vnode tree to a string\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function serializeVNode(vnode) {\n\tlet { props } = vnode;\n\tlet name = getDisplayName(vnode);\n\n\tlet attrs = '';\n\tfor (let prop in props) {\n\t\tif (props.hasOwnProperty(prop) && prop !== 'children') {\n\t\t\tlet value = props[prop];\n\n\t\t\t// If it is an object but doesn't have toString(), use Object.toString\n\t\t\tif (typeof value == 'function') {\n\t\t\t\tvalue = `function ${value.displayName || value.name}() {}`;\n\t\t\t}\n\n\t\t\tvalue =\n\t\t\t\tObject(value) === value && !value.toString\n\t\t\t\t\t? Object.prototype.toString.call(value)\n\t\t\t\t\t: value + '';\n\n\t\t\tattrs += ` ${prop}=${JSON.stringify(value)}`;\n\t\t}\n\t}\n\n\tlet children = props.children;\n\treturn `<${name}${attrs}${\n\t\tchildren && children.length ? '>..</' + name + '>' : ' />'\n\t}`;\n}\n","export const ELEMENT_NODE = 1;\nexport const DOCUMENT_NODE = 9;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => ref.current = null;\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n","import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref || null);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n","import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode, errorInfo) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function(vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._hydrating === true) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function() {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n","import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tthis._map.forEach((node, child) => {\n\t\tresolve(this, child, node);\n\t});\n};\n","import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\n\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/i\n\t\t: /fil|che|ra/i\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nlet classNameDescriptor = {\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tlet type = vnode.type;\n\tlet props = vnode.props;\n\tlet normalizedProps = props;\n\n\t// only normalize props on Element nodes\n\tif (typeof type === 'string') {\n\t\tconst nonCustomElement = type.indexOf('-') === -1;\n\t\tnormalizedProps = {};\n\n\t\tfor (let i in props) {\n\t\t\tlet value = props[i];\n\n\t\t\tif (IS_DOM && i === 'children' && type === 'noscript') {\n\t\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t\tcontinue;\n\t\t\t} else if (i === 'value' && 'defaultValue' in props && value == null) {\n\t\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t\t// a default value\n\t\t\t\tcontinue;\n\t\t\t} else if (\n\t\t\t\ti === 'defaultValue' &&\n\t\t\t\t'value' in props &&\n\t\t\t\tprops.value == null\n\t\t\t) {\n\t\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\t\ti = 'value';\n\t\t\t} else if (i === 'download' && value === true) {\n\t\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t\t// value will be used as the file name and the file will be called\n\t\t\t\t// \"true\" upon downloading it.\n\t\t\t\tvalue = '';\n\t\t\t} else if (/ondoubleclick/i.test(i)) {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\t/^onchange(textarea|input)/i.test(i + type) &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\ti = 'oninput';\n\t\t\t} else if (/^onfocus$/i.test(i)) {\n\t\t\t\ti = 'onfocusin';\n\t\t\t} else if (/^onblur$/i.test(i)) {\n\t\t\t\ti = 'onfocusout';\n\t\t\t} else if (/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t} else if (nonCustomElement && CAMEL_PROPS.test(i)) {\n\t\t\t\ti = i.replace(/[A-Z0-9]/, '-$&').toLowerCase();\n\t\t\t} else if (value === null) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\n\t\t\tnormalizedProps[i] = value;\n\t\t}\n\n\t\t// Add support for array select values: <select multiple value={[]} />\n\t\tif (\n\t\t\ttype == 'select' &&\n\t\t\tnormalizedProps.multiple &&\n\t\t\tArray.isArray(normalizedProps.value)\n\t\t) {\n\t\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t\t});\n\t\t}\n\n\t\t// Adding support for defaultValue in select tag\n\t\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tif (normalizedProps.multiple) {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t\t} else {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvnode.props = normalizedProps;\n\n\t\tif (props.class != props.className) {\n\t\t\tclassNameDescriptor.enumerable = 'className' in props;\n\t\t\tif (props.className != null) normalizedProps.class = props.className;\n\t\t\tObject.defineProperty(normalizedProps, 'className', classNameDescriptor);\n\t\t}\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function(vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection. So far\n// only `react-relay` makes use of it. It uses it to read the\n// context value.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t}\n\t\t}\n\t}\n};\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","import { FSharpRef } from \"./Types.js\";\nexport function tryParse(str, defValue) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            defValue.contents = v;\n            return true;\n        }\n    }\n    return false;\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(0);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n","[<AutoOpen>]\r\nmodule Fable.React.Extensions\r\n\r\ntype Browser.Types.Event with\r\n    /// Access the value from target\r\n    /// Equivalent to `(this.target :?> HTMLInputElement).value`\r\n    member this.Value =\r\n        (this.target :?> Browser.Types.HTMLInputElement).value\r\n\r\n    /// Access the checked property from target\r\n    /// Equivalent to `(this.target :?> HTMLInputElement).checked`\r\n    member this.Checked =\r\n        (this.target :?> Browser.Types.HTMLInputElement).``checked``\r\n","namespace Elmish.React\n\nopen Fable.React\nopen Elmish\n\ntype LazyProps<'model> = {\n    model:'model\n    render:unit->ReactElement\n    equal:'model->'model->bool\n}\n\nmodule Components =\n    type LazyView<'model>(props) =\n        inherit Component<LazyProps<'model>,obj>(props)\n\n        override this.shouldComponentUpdate(nextProps, _nextState) =\n            not <| this.props.equal this.props.model nextProps.model\n\n        override this.render () =\n            this.props.render ()\n\n[<AutoOpen>]\nmodule Common =\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model\n    /// state: new state to render\n    let lazyViewWith (equal:'model->'model->bool)\n                     (view:'model->ReactElement)\n                     (state:'model) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model using the dispatch\n    /// state: new state to render\n    /// dispatch: dispatch function\n    let lazyView2With (equal:'model->'model->bool)\n                      (view:'model->'msg Dispatch->ReactElement)\n                      (state:'model)\n                      (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state dispatch\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new model (a tuple of two states)\n    /// view: function to render the model using the dispatch\n    /// state1: new state to render\n    /// state2: new state to render\n    /// dispatch: dispatch function\n    let lazyView3With (equal:_->_->bool) (view:_->_->_->ReactElement) state1 state2 (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state1 state2 dispatch\n              equal = equal\n              model = (state1,state2) }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of model to render the view\n    let lazyView (view:'model->ReactElement) =\n        lazyViewWith (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of two arguments to render the model using the dispatch\n    let lazyView2 (view:'model->'msg Dispatch->ReactElement) =\n        lazyView2With (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of three arguments to render the model using the dispatch\n    let lazyView3 (view:_->_->_->ReactElement) =\n        lazyView3With (=) view\n\n\n","import { Record } from \"../Types.js\";\r\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\r\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\r\nimport { copy, initialize, map, fill } from \"../Array.js\";\r\nimport { toArray, empty, head, tail, isEmpty, cons } from \"../List.js\";\r\nimport { int32ToString } from \"../Util.js\";\r\nimport { isNullOrEmpty, join } from \"../String.js\";\r\n\r\nexport class BigNat extends Record {\r\n    constructor(bound, digits) {\r\n        super();\r\n        this.bound = (bound | 0);\r\n        this.digits = digits;\r\n    }\r\n}\r\n\r\nexport function BigNat$reflection() {\r\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\r\n}\r\n\r\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\r\n    BigNatModule_FFT_pow32:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return 1;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (x * x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_FFT_pow32;\r\n        }\r\n        else {\r\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_leastBounding2Power(b) {\r\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\r\n        findBounding2Power:\r\n        while (true) {\r\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\r\n            if (b_1 <= tp) {\r\n                return [tp, i];\r\n            }\r\n            else {\r\n                b_1_mut = b_1;\r\n                tp_mut = (tp * 2);\r\n                i_mut = (i + 1);\r\n                continue findBounding2Power;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return findBounding2Power(b, 1, 0);\r\n}\r\n\r\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\r\n\r\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\r\n\r\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\r\n\r\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\r\n\r\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\r\n\r\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\r\n\r\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\r\n\r\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\r\n\r\nexport const BigNatModule_FFT_Fp_p = 2013265921;\r\n\r\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\r\n\r\nexport function BigNatModule_FFT_Fp_toInt(x) {\r\n    return ~(~x);\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\r\n    return x >>> 0;\r\n}\r\n\r\nexport const BigNatModule_FFT_Fp_mzero = 0;\r\n\r\nexport const BigNatModule_FFT_Fp_mone = 1;\r\n\r\nexport const BigNatModule_FFT_Fp_mtwo = 2;\r\n\r\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\r\n    BigNatModule_FFT_Fp_mpow:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return BigNatModule_FFT_Fp_mone;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_FFT_Fp_mpow;\r\n        }\r\n        else {\r\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\r\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\r\n    BigNatModule_FFT_Fp_mpowL:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (equals(n, fromBits(0, 0, false))) {\r\n            return BigNatModule_FFT_Fp_mone;\r\n        }\r\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\r\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\r\n            n_mut = op_Division(n, fromBits(2, 0, false));\r\n            continue BigNatModule_FFT_Fp_mpowL;\r\n        }\r\n        else {\r\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\r\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\r\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\r\n}\r\n\r\nexport function BigNatModule_FFT_Fp_minv(x) {\r\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\r\n}\r\n\r\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\r\n    let x_1, x_3, y_5;\r\n    if (n === 1) {\r\n        res[offset] = u[mu];\r\n    }\r\n    else {\r\n        const halfN = (~(~(n / 2))) | 0;\r\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n        const offsetHalfN = (offset + halfN) | 0;\r\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\r\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\r\n        let wj = BigNatModule_FFT_Fp_mone;\r\n        for (let j = 0; j <= (halfN - 1); j++) {\r\n            const even = res[offset + j];\r\n            const odd = res[offsetHalfN + j];\r\n            res[offset + j] = ((even + ((x_1 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0))) % BigNatModule_FFT_Fp_p);\r\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - ((x_3 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0))) % BigNatModule_FFT_Fp_p);\r\n            wj = ((y_5 = wj, toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\r\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\r\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\r\n    return res;\r\n}\r\n\r\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\r\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\r\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\r\n}\r\n\r\nexport const BigNatModule_FFT_maxTwoPower = 29;\r\n\r\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\r\n\r\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\r\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\r\n    const n = bigK | 0;\r\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\r\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\r\n    return BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\r\n        const x = uT[i];\r\n        const y = vT[i];\r\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n    }, Uint32Array));\r\n}\r\n\r\nexport function BigNatModule_FFT_padTo(n, u) {\r\n    const uBound = u.length | 0;\r\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\r\n}\r\n\r\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\r\n    const patternInput = BigNatModule_FFT_leastBounding2Power((degu + degv) + 1);\r\n    const bigK = patternInput[0] | 0;\r\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\r\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\r\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\r\n    const n = bigK | 0;\r\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\r\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\r\n    return map(BigNatModule_FFT_Fp_toInt, BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\r\n        const x = uT[i];\r\n        const y = vT[i];\r\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\r\n    }, Uint32Array)), Int32Array);\r\n}\r\n\r\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\r\n\r\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\r\n\r\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\r\n\r\nexport function BigNatModule_bound(n) {\r\n    return n.bound;\r\n}\r\n\r\nexport function BigNatModule_setBound(n, v) {\r\n    n.bound = (v | 0);\r\n}\r\n\r\nexport function BigNatModule_coeff(n, i) {\r\n    return n.digits[i];\r\n}\r\n\r\nexport function BigNatModule_coeff64(n, i) {\r\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\r\n}\r\n\r\nexport function BigNatModule_setCoeff(n, i, v) {\r\n    n.digits[i] = (v | 0);\r\n}\r\n\r\nexport function BigNatModule_pow64(x_mut, n_mut) {\r\n    BigNatModule_pow64:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return fromBits(1, 0, false);\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = op_Multiply(x, x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_pow64;\r\n        }\r\n        else {\r\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_pow32(x_mut, n_mut) {\r\n    BigNatModule_pow32:\r\n    while (true) {\r\n        const x = x_mut, n = n_mut;\r\n        if (n === 0) {\r\n            return 1;\r\n        }\r\n        else if ((n % 2) === 0) {\r\n            x_mut = (x * x);\r\n            n_mut = (~(~(n / 2)));\r\n            continue BigNatModule_pow32;\r\n        }\r\n        else {\r\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_hash(n) {\r\n    let res = 0;\r\n    for (let i = 0; i <= (n.bound - 1); i++) {\r\n        res = ((n.digits[i] + (res << 3)) | 0);\r\n    }\r\n    return res | 0;\r\n}\r\n\r\nexport function BigNatModule_maxInt(a, b) {\r\n    if (a < b) {\r\n        return b | 0;\r\n    }\r\n    else {\r\n        return a | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_minInt(a, b) {\r\n    if (a < b) {\r\n        return a | 0;\r\n    }\r\n    else {\r\n        return b | 0;\r\n    }\r\n}\r\n\r\nexport const BigNatModule_baseBits = 24;\r\n\r\nexport const BigNatModule_baseN = 16777216;\r\n\r\nexport const BigNatModule_baseMask = 16777215;\r\n\r\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\r\n\r\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\r\n\r\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\r\n\r\nexport const BigNatModule_baseMask32A = 16777215;\r\n\r\nexport const BigNatModule_baseMask32B = 255;\r\n\r\nexport const BigNatModule_baseShift32B = 24;\r\n\r\nexport const BigNatModule_baseMask64A = 16777215;\r\n\r\nexport const BigNatModule_baseMask64B = 16777215;\r\n\r\nexport const BigNatModule_baseMask64C = 65535;\r\n\r\nexport const BigNatModule_baseShift64B = 24;\r\n\r\nexport const BigNatModule_baseShift64C = 48;\r\n\r\nexport function BigNatModule_divbase(x) {\r\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\r\n}\r\n\r\nexport function BigNatModule_modbase(x) {\r\n    return x & BigNatModule_baseMask;\r\n}\r\n\r\nexport function BigNatModule_createN(b) {\r\n    return new BigNat(b, new Int32Array(b));\r\n}\r\n\r\nexport function BigNatModule_copyN(x) {\r\n    return new BigNat(x.bound, copy(x.digits));\r\n}\r\n\r\nexport function BigNatModule_normN(n) {\r\n    const findLeastBound = (na_mut, i_mut) => {\r\n        findLeastBound:\r\n        while (true) {\r\n            const na = na_mut, i = i_mut;\r\n            if ((i === -1) ? true : (na[i] !== 0)) {\r\n                return (i + 1) | 0;\r\n            }\r\n            else {\r\n                na_mut = na;\r\n                i_mut = (i - 1);\r\n                continue findLeastBound;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\r\n    n.bound = (bound | 0);\r\n    return n;\r\n}\r\n\r\nexport const BigNatModule_boundInt = 2;\r\n\r\nexport const BigNatModule_boundInt64 = 3;\r\n\r\nexport const BigNatModule_boundBase = 1;\r\n\r\nexport function BigNatModule_embed(x) {\r\n    const x_1 = ((x < 0) ? 0 : x) | 0;\r\n    if (x_1 < BigNatModule_baseN) {\r\n        const r = BigNatModule_createN(1);\r\n        r.digits[0] = (x_1 | 0);\r\n        return BigNatModule_normN(r);\r\n    }\r\n    else {\r\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\r\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\r\n            r_1.digits[i] = (((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN) | 0);\r\n        }\r\n        return BigNatModule_normN(r_1);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_embed64(x) {\r\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\r\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\r\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\r\n        r.digits[i] = ((~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64)))) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_eval32(n) {\r\n    if (n.bound === 1) {\r\n        return n.digits[0] | 0;\r\n    }\r\n    else {\r\n        let acc = 0;\r\n        for (let i = n.bound - 1; i >= 0; i--) {\r\n            acc = ((n.digits[i] + (BigNatModule_baseN * acc)) | 0);\r\n        }\r\n        return acc | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_eval64(n) {\r\n    if (n.bound === 1) {\r\n        return fromInteger(n.digits[0], false, 2);\r\n    }\r\n    else {\r\n        let acc = fromBits(0, 0, false);\r\n        for (let i = n.bound - 1; i >= 0; i--) {\r\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\r\n        }\r\n        return acc;\r\n    }\r\n}\r\n\r\nexport const BigNatModule_one = BigNatModule_embed(1);\r\n\r\nexport const BigNatModule_zero = BigNatModule_embed(0);\r\n\r\nexport function BigNatModule_restrictTo(d, n) {\r\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\r\n}\r\n\r\nexport function BigNatModule_shiftUp(d, n) {\r\n    const m = BigNatModule_createN(n.bound + d);\r\n    for (let i = 0; i <= (n.bound - 1); i++) {\r\n        m.digits[i + d] = (n.digits[i] | 0);\r\n    }\r\n    return m;\r\n}\r\n\r\nexport function BigNatModule_shiftDown(d, n) {\r\n    if ((n.bound - d) <= 0) {\r\n        return BigNatModule_zero;\r\n    }\r\n    else {\r\n        const m = BigNatModule_createN(n.bound - d);\r\n        for (let i = 0; i <= (m.bound - 1); i++) {\r\n            m.digits[i] = (n.digits[i + d] | 0);\r\n        }\r\n        return m;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_degree(n) {\r\n    return n.bound - 1;\r\n}\r\n\r\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\r\n    let z, i_1, z_1, i_2;\r\n    BigNatModule_addP:\r\n    while (true) {\r\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\r\n        if (i < n) {\r\n            const x = ((((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0))) + ((z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0)))) + c) | 0;\r\n            r.digits[i] = (BigNatModule_modbase(x) | 0);\r\n            i_mut = (i + 1);\r\n            n_mut = n;\r\n            c_mut = BigNatModule_divbase(x);\r\n            p_mut = p;\r\n            q_mut = q;\r\n            r_mut = r;\r\n            continue BigNatModule_addP;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_add(p, q) {\r\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    BigNatModule_addP(0, rbound, 0, p, q, r);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\r\n    let z, i_1, z_1, i_2;\r\n    BigNatModule_subP:\r\n    while (true) {\r\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\r\n        if (i < n) {\r\n            const x = ((((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0))) - ((z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0)))) + c) | 0;\r\n            if (x > 0) {\r\n                r.digits[i] = (BigNatModule_modbase(x) | 0);\r\n                i_mut = (i + 1);\r\n                n_mut = n;\r\n                c_mut = BigNatModule_divbase(x);\r\n                p_mut = p;\r\n                q_mut = q;\r\n                r_mut = r;\r\n                continue BigNatModule_subP;\r\n            }\r\n            else {\r\n                const x_1 = (x + BigNatModule_baseN) | 0;\r\n                r.digits[i] = (BigNatModule_modbase(x_1) | 0);\r\n                i_mut = (i + 1);\r\n                n_mut = n;\r\n                c_mut = (BigNatModule_divbase(x_1) - 1);\r\n                p_mut = p;\r\n                q_mut = q;\r\n                r_mut = r;\r\n                continue BigNatModule_subP;\r\n            }\r\n        }\r\n        else {\r\n            return c !== 0;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_sub(p, q) {\r\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\r\n        return BigNatModule_embed(0);\r\n    }\r\n    else {\r\n        return BigNatModule_normN(r);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_isZero(p) {\r\n    return p.bound === 0;\r\n}\r\n\r\nexport function BigNatModule_IsZero(p) {\r\n    return BigNatModule_isZero(p);\r\n}\r\n\r\nexport function BigNatModule_isOne(p) {\r\n    if (p.bound === 1) {\r\n        return p.digits[0] === 1;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_equal(p, q) {\r\n    if (p.bound === q.bound) {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return true;\r\n                }\r\n                else if (pa[i] === qa[i]) {\r\n                    pa_mut = pa;\r\n                    qa_mut = qa;\r\n                    i_mut = (i - 1);\r\n                    continue check;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, p.bound - 1);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\r\n    if ((p.bound + pn) < (q.bound + qn)) {\r\n        return -1;\r\n    }\r\n    else if ((p.bound + pn) > (q.bound + pn)) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\r\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\r\n                    if (pai === qai) {\r\n                        pa_mut = pa;\r\n                        qa_mut = qa;\r\n                        i_mut = (i - 1);\r\n                        continue check;\r\n                    }\r\n                    else if (pai < qai) {\r\n                        return -1;\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_compare(p, q) {\r\n    if (p.bound < q.bound) {\r\n        return -1;\r\n    }\r\n    else if (p.bound > q.bound) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const check = (pa_mut, qa_mut, i_mut) => {\r\n            check:\r\n            while (true) {\r\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\r\n                if (i === -1) {\r\n                    return 0;\r\n                }\r\n                else if (pa[i] === qa[i]) {\r\n                    pa_mut = pa;\r\n                    qa_mut = qa;\r\n                    i_mut = (i - 1);\r\n                    continue check;\r\n                }\r\n                else if (pa[i] < qa[i]) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return check(p.digits, q.digits, p.bound - 1) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_lt(p, q) {\r\n    return BigNatModule_compare(p, q) === -1;\r\n}\r\n\r\nexport function BigNatModule_gt(p, q) {\r\n    return BigNatModule_compare(p, q) === 1;\r\n}\r\n\r\nexport function BigNatModule_lte(p, q) {\r\n    return BigNatModule_compare(p, q) !== 1;\r\n}\r\n\r\nexport function BigNatModule_gte(p, q) {\r\n    return BigNatModule_compare(p, q) !== -1;\r\n}\r\n\r\nexport function BigNatModule_min(a, b) {\r\n    if (BigNatModule_lt(a, b)) {\r\n        return a;\r\n    }\r\n    else {\r\n        return b;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_max(a, b) {\r\n    if (BigNatModule_lt(a, b)) {\r\n        return b;\r\n    }\r\n    else {\r\n        return a;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\r\n    BigNatModule_contributeArr:\r\n    while (true) {\r\n        const a = a_mut, i = i_mut, c = c_mut;\r\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\r\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\r\n        const x_3 = (~(~toInt(op_BitwiseAnd(x, BigNatModule_baseMaski64)))) | 0;\r\n        a[i] = (x_3 | 0);\r\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\r\n            a_mut = a;\r\n            i_mut = (i + 1);\r\n            c_mut = c_1;\r\n            continue BigNatModule_contributeArr;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_scale(k, p) {\r\n    const r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\r\n    const k_1 = fromInteger(k, false, 2);\r\n    for (let i = 0; i <= (p.bound - 1); i++) {\r\n        BigNatModule_contributeArr(r.digits, i, op_Multiply(k_1, fromInteger(p.digits[i], false, 2)));\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\r\n    const r = BigNatModule_createN(2);\r\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\r\n    BigNatModule_setCoeff(r, 0, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\r\n    BigNatModule_mulSchoolBookCarry:\r\n    while (true) {\r\n        const r = r_mut, c = c_mut, k = k_mut;\r\n        if (compare(c, fromBits(0, 0, false)) > 0) {\r\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\r\n            BigNatModule_setCoeff(r, k, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n            r_mut = r;\r\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\r\n            k_mut = (k + 1);\r\n            continue BigNatModule_mulSchoolBookCarry;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\r\n    const bp = BigNatModule_bound(p) | 0;\r\n    const r = BigNatModule_createN(bp + 1);\r\n    const q_1 = fromInteger(q, false, 2);\r\n    let c = fromBits(0, 0, false);\r\n    for (let i = 0; i <= (bp - 1); i++) {\r\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\r\n        BigNatModule_setCoeff(r, i, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\r\n        c = op_Division(rak, BigNatModule_baseNi64);\r\n    }\r\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\r\n    const r = BigNatModule_createN(p.bound + q.bound);\r\n    const ra = r.digits;\r\n    for (let i = 0; i <= (p.bound - 1); i++) {\r\n        const pai = fromInteger(p.digits[i], false, 2);\r\n        let c = fromBits(0, 0, false);\r\n        let k = i;\r\n        for (let j = 0; j <= (q.bound - 1); j++) {\r\n            const qaj = fromInteger(q.digits[j], false, 2);\r\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\r\n            ra[k] = ((~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64)))) | 0);\r\n            c = op_Division(rak, BigNatModule_baseNi64);\r\n            k = ((k + 1) | 0);\r\n        }\r\n        BigNatModule_mulSchoolBookCarry(r, c, k);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_mulSchoolBook(p, q) {\r\n    const pSmall = BigNatModule_bound(p) === 1;\r\n    const qSmall = BigNatModule_bound(q) === 1;\r\n    if (pSmall && qSmall) {\r\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\r\n    }\r\n    else if (pSmall) {\r\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\r\n    }\r\n    else if (qSmall) {\r\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\r\n    }\r\n    else {\r\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\r\n    }\r\n}\r\n\r\nexport class BigNatModule_encoding extends Record {\r\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\r\n        super();\r\n        this.bigL = (bigL | 0);\r\n        this.twoToBigL = (twoToBigL | 0);\r\n        this.k = (k | 0);\r\n        this.bigK = (bigK | 0);\r\n        this.bigN = (bigN | 0);\r\n        this.split = (split | 0);\r\n        this.splits = splits;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_encoding$reflection() {\r\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\r\n}\r\n\r\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\r\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\r\n}\r\n\r\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\r\n\r\nexport function BigNatModule_calculateTableTow(bigL) {\r\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\r\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\r\n    return [bigL, k, bigK, op_Multiply(bigK, fromInteger(bigL, false, 2))];\r\n}\r\n\r\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\r\n    const selectFrom = (i_mut) => {\r\n        selectFrom:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (((i + 1) < BigNatModule_table.length) && (bitsRes < BigNatModule_table[i + 1].bigN)) {\r\n                i_mut = (i + 1);\r\n                continue selectFrom;\r\n            }\r\n            else {\r\n                return BigNatModule_table[i];\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (bitsRes >= BigNatModule_table[0].bigN) {\r\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\r\n    }\r\n    else {\r\n        return selectFrom(0);\r\n    }\r\n}\r\n\r\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\r\n\r\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\r\n\r\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\r\n\r\nexport function BigNatModule_wordBits(word) {\r\n    const hi = (k_mut) => {\r\n        hi:\r\n        while (true) {\r\n            const k = k_mut;\r\n            if (k === 0) {\r\n                return 0;\r\n            }\r\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\r\n                return k | 0;\r\n            }\r\n            else {\r\n                k_mut = (k - 1);\r\n                continue hi;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return hi(BigNatModule_baseBits) | 0;\r\n}\r\n\r\nexport function BigNatModule_bits(u) {\r\n    if (u.bound === 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_extractBits(n, enc, bi) {\r\n    let z, i, z_1, i_1, z_2, i_2;\r\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\r\n    const bjw = (~(~(((bi + enc.bigL) - 1) / BigNatModule_baseBits))) | 0;\r\n    if (biw !== bjw) {\r\n        const xbit = (bi % BigNatModule_baseBits) | 0;\r\n        return (((((z = n, (i = (biw | 0), (i < z.bound) ? z.digits[i] : 0))) >> xbit) | (((z_1 = n, (i_1 = (bjw | 0), (i_1 < z_1.bound) ? z_1.digits[i_1] : 0))) << (BigNatModule_baseBits - xbit))) & BigNatModule_bitmask[enc.bigL]) | 0;\r\n    }\r\n    else {\r\n        return ((((z_2 = n, (i_2 = (biw | 0), (i_2 < z_2.bound) ? z_2.digits[i_2] : 0))) >> (bi % BigNatModule_baseBits)) & BigNatModule_bitmask[enc.bigL]) | 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_encodePoly(enc, n) {\r\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\r\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\r\n    const encoder = (i_mut, bi_mut) => {\r\n        encoder:\r\n        while (true) {\r\n            const i = i_mut, bi = bi_mut;\r\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\r\n            }\r\n            else {\r\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\r\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\r\n                i_mut = (i + 1);\r\n                bi_mut = (bi + enc.bigL);\r\n                continue encoder;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    encoder(0, 0);\r\n    return poly;\r\n}\r\n\r\nexport function BigNatModule_decodeResultBits(enc, poly) {\r\n    let n = 0;\r\n    for (let i = 0; i <= (poly.length - 1); i++) {\r\n        if (poly[i] !== BigNatModule_FFT_mzero) {\r\n            n = (i | 0);\r\n        }\r\n    }\r\n    return (((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) + 1) | 0;\r\n}\r\n\r\nexport function BigNatModule_decodePoly(enc, poly) {\r\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\r\n    const r = BigNatModule_createN(rbound);\r\n    const evaluate = (i_mut, j_mut, d_mut) => {\r\n        evaluate:\r\n        while (true) {\r\n            const i = i_mut, j = j_mut, d = d_mut;\r\n            if (i === enc.bigK) {\r\n            }\r\n            else {\r\n                if (j >= rbound) {\r\n                }\r\n                else {\r\n                    BigNatModule_contributeArr(r.digits, j, op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\r\n                }\r\n                const d_1 = (d + enc.bigL) | 0;\r\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\r\n                i_mut = (i + 1);\r\n                j_mut = patternInput[0];\r\n                d_mut = patternInput[1];\r\n                continue evaluate;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    evaluate(0, 0, 0);\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_quickMulUsingFft(u, v) {\r\n    const enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\r\n    return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\r\n}\r\n\r\nexport const BigNatModule_minDigitsKaratsuba = 16;\r\n\r\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\r\n    const bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\r\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\r\n        const k = (~(~(bmax / 2))) | 0;\r\n        const a0 = BigNatModule_restrictTo(k, p);\r\n        const a1 = BigNatModule_shiftDown(k, p);\r\n        const b0 = BigNatModule_restrictTo(k, q);\r\n        const b1 = BigNatModule_shiftDown(k, q);\r\n        const q0 = mul(a0, b0);\r\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\r\n        const q2 = mul(a1, b1);\r\n        return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\r\n    }\r\n    else {\r\n        return BigNatModule_mulSchoolBook(p, q);\r\n    }\r\n}\r\n\r\nexport function BigNatModule_mulKaratsuba(x, y) {\r\n    return BigNatModule_recMulKaratsuba(BigNatModule_mulKaratsuba, x, y);\r\n}\r\n\r\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\r\n\r\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\r\n\r\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\r\n\r\nexport function BigNatModule_mul(p, q) {\r\n    return BigNatModule_mulSchoolBook(p, q);\r\n}\r\n\r\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\r\n    const patternInput = [x.digits, BigNatModule_degree(x)];\r\n    const x_1 = patternInput[0];\r\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\r\n    const ad = patternInput_1[1] | 0;\r\n    const a_1 = patternInput_1[0];\r\n    const f_1 = fromInteger(f, false, 2);\r\n    let j = 0;\r\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\r\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\r\n        if (j > patternInput[1]) {\r\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\r\n        }\r\n        let zLo = ~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)));\r\n        let zHi = op_Division(z, BigNatModule_baseNi64);\r\n        if (zLo <= x_1[j + n]) {\r\n            x_1[j + n] = ((x_1[j + n] - zLo) | 0);\r\n        }\r\n        else {\r\n            x_1[j + n] = ((x_1[j + n] + (BigNatModule_baseN - zLo)) | 0);\r\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\r\n        }\r\n        if (j < ad) {\r\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\r\n        }\r\n        else {\r\n            z = zHi;\r\n        }\r\n        j = ((j + 1) | 0);\r\n    }\r\n    BigNatModule_normN(x);\r\n}\r\n\r\nexport function BigNatModule_scaleSub(x, f, a, n) {\r\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\r\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\r\n    return BigNatModule_normN(freshx);\r\n}\r\n\r\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\r\n    const patternInput = [x.digits, BigNatModule_degree(x)];\r\n    const x_1 = patternInput[0];\r\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\r\n    const ad = patternInput_1[1] | 0;\r\n    const a_1 = patternInput_1[0];\r\n    const f_1 = fromInteger(f, false, 2);\r\n    let j = 0;\r\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\r\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\r\n        if (j > patternInput[1]) {\r\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\r\n        }\r\n        let zLo = ~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)));\r\n        let zHi = op_Division(z, BigNatModule_baseNi64);\r\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\r\n            x_1[j + n] = ((x_1[j + n] + zLo) | 0);\r\n        }\r\n        else {\r\n            x_1[j + n] = ((zLo - (BigNatModule_baseN - x_1[j + n])) | 0);\r\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\r\n        }\r\n        if (j < ad) {\r\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\r\n        }\r\n        else {\r\n            z = zHi;\r\n        }\r\n        j = ((j + 1) | 0);\r\n    }\r\n    BigNatModule_normN(x);\r\n}\r\n\r\nexport function BigNatModule_scaleAdd(x, f, a, n) {\r\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\r\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\r\n    return BigNatModule_normN(freshx);\r\n}\r\n\r\nexport function BigNatModule_removeFactor(x, a, n) {\r\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\r\n    const degx = patternInput[1] | 0;\r\n    const dega = patternInput[0] | 0;\r\n    if (degx < (dega + n)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        const patternInput_1 = [a.digits, x.digits];\r\n        const xa = patternInput_1[1];\r\n        const aa = patternInput_1[0];\r\n        const f = ((dega === 0) ? ((degx === n) ? (~(~(xa[n] / aa[0]))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2)))))) : ((degx === (dega + n)) ? (~(~(xa[degx] / (aa[dega] + 1)))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)))))))) | 0;\r\n        if (f === 0) {\r\n            if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n        else {\r\n            return f | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_divmod(b, a) {\r\n    if (BigNatModule_isZero(a)) {\r\n        throw (new Error());\r\n    }\r\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\r\n        return [BigNatModule_zero, b];\r\n    }\r\n    else {\r\n        const x = BigNatModule_copyN(b);\r\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\r\n        let p = BigNatModule_degree(b);\r\n        const m = BigNatModule_degree(a) | 0;\r\n        let n = p - m;\r\n        const Invariant = (tupledArg) => {\r\n        };\r\n        let finished = false;\r\n        while (!finished) {\r\n            Invariant([d, x, n, p]);\r\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\r\n            if (f > 0) {\r\n                BigNatModule_scaleSubInPlace(x, f, a, n);\r\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\r\n                Invariant([d, x, n, p]);\r\n            }\r\n            else {\r\n                finished = ((f === 0) && (n === 0));\r\n                if (!finished) {\r\n                    if (p === (m + n)) {\r\n                        Invariant([d, x, n - 1, p]);\r\n                        n = ((n - 1) | 0);\r\n                    }\r\n                    else {\r\n                        Invariant([d, x, n - 1, p - 1]);\r\n                        n = ((n - 1) | 0);\r\n                        p = ((p - 1) | 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\r\n    }\r\n}\r\n\r\nexport function BigNatModule_div(b, a) {\r\n    return BigNatModule_divmod(b, a)[0];\r\n}\r\n\r\nexport function BigNatModule_rem(b, a) {\r\n    return BigNatModule_divmod(b, a)[1];\r\n}\r\n\r\nexport function BigNatModule_bitAnd(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (r.bound - 1); i++) {\r\n        r.digits[i] = ((a.digits[i] & b.digits[i]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_bitOr(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (a.bound - 1); i++) {\r\n        r.digits[i] = ((r.digits[i] | a.digits[i]) | 0);\r\n    }\r\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\r\n        r.digits[i_1] = ((r.digits[i_1] | b.digits[i_1]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_bitXor(a, b) {\r\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\r\n    for (let i = 0; i <= (a.bound - 1); i++) {\r\n        r.digits[i] = ((r.digits[i] ^ a.digits[i]) | 0);\r\n    }\r\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\r\n        r.digits[i_1] = ((r.digits[i_1] ^ b.digits[i_1]) | 0);\r\n    }\r\n    return BigNatModule_normN(r);\r\n}\r\n\r\nexport function BigNatModule_hcf(a, b) {\r\n    const hcfloop = (a_1_mut, b_1_mut) => {\r\n        hcfloop:\r\n        while (true) {\r\n            const a_1 = a_1_mut, b_1 = b_1_mut;\r\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\r\n                return b_1;\r\n            }\r\n            else {\r\n                a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\r\n                b_1_mut = a_1;\r\n                continue hcfloop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    if (BigNatModule_lt(a, b)) {\r\n        return hcfloop(a, b);\r\n    }\r\n    else {\r\n        return hcfloop(b, a);\r\n    }\r\n}\r\n\r\nexport const BigNatModule_two = BigNatModule_embed(2);\r\n\r\nexport function BigNatModule_powi(x, n) {\r\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\r\n        power:\r\n        while (true) {\r\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\r\n            if (n_1 === 0) {\r\n                return acc;\r\n            }\r\n            else if ((n_1 % 2) === 0) {\r\n                acc_mut = acc;\r\n                x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                n_1_mut = (~(~(n_1 / 2)));\r\n                continue power;\r\n            }\r\n            else {\r\n                acc_mut = BigNatModule_mul(x_1, acc);\r\n                x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                n_1_mut = (~(~(n_1 / 2)));\r\n                continue power;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return power(BigNatModule_one, x, n);\r\n}\r\n\r\nexport function BigNatModule_pow(x, n) {\r\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\r\n        power:\r\n        while (true) {\r\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\r\n            if (BigNatModule_isZero(n_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\r\n                const ndiv2 = patternInput[0];\r\n                if (BigNatModule_isZero(patternInput[1])) {\r\n                    acc_mut = acc;\r\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                    n_1_mut = ndiv2;\r\n                    continue power;\r\n                }\r\n                else {\r\n                    acc_mut = BigNatModule_mul(x_1, acc);\r\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\r\n                    n_1_mut = ndiv2;\r\n                    continue power;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return power(BigNatModule_one, x, n);\r\n}\r\n\r\nexport function BigNatModule_toFloat(n) {\r\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\r\n        evalFloat:\r\n        while (true) {\r\n            const acc = acc_mut, k = k_mut, i = i_mut;\r\n            if (i === n.bound) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = (acc + (k * n.digits[i]));\r\n                k_mut = (k * BigNatModule_baseN);\r\n                i_mut = (i + 1);\r\n                continue evalFloat;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return evalFloat(0, 1, 0);\r\n}\r\n\r\nexport function BigNatModule_ofInt32(n) {\r\n    return BigNatModule_embed(n);\r\n}\r\n\r\nexport function BigNatModule_ofInt64(n) {\r\n    return BigNatModule_embed64(n);\r\n}\r\n\r\nexport function BigNatModule_toUInt32(n) {\r\n    const matchValue = n.bound | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return 0;\r\n        }\r\n        case 1: {\r\n            const value = n.digits[0] | 0;\r\n            return value >>> 0;\r\n        }\r\n        case 2: {\r\n            const patternInput = [n.digits[0], n.digits[1]];\r\n            const xB = patternInput[1] | 0;\r\n            if (xB > BigNatModule_baseMask32B) {\r\n                throw (new Error());\r\n            }\r\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\r\n        }\r\n        default: {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_toUInt64(n) {\r\n    const matchValue = n.bound | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return fromBits(0, 0, true);\r\n        }\r\n        case 1: {\r\n            return fromInteger(n.digits[0], true, 2);\r\n        }\r\n        case 2: {\r\n            const patternInput = [n.digits[0], n.digits[1]];\r\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\r\n        }\r\n        case 3: {\r\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\r\n            const xC = patternInput_1[2] | 0;\r\n            if (xC > BigNatModule_baseMask64C) {\r\n                throw (new Error());\r\n            }\r\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\r\n        }\r\n        default: {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigNatModule_toString(n) {\r\n    const degn = BigNatModule_degree(n) | 0;\r\n    const route = (prior_mut, k_mut, ten2k_mut) => {\r\n        route:\r\n        while (true) {\r\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\r\n            if (BigNatModule_degree(ten2k) > degn) {\r\n                return cons([k, ten2k], prior);\r\n            }\r\n            else {\r\n                prior_mut = cons([k, ten2k], prior);\r\n                k_mut = (k + 1);\r\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\r\n                continue route;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const collect = (isLeading_mut, digits_mut, n_1_mut, _arg1_mut) => {\r\n        collect:\r\n        while (true) {\r\n            const isLeading = isLeading_mut, digits = digits_mut, n_1 = n_1_mut, _arg1 = _arg1_mut;\r\n            if (!isEmpty(_arg1)) {\r\n                const prior_1 = tail(_arg1);\r\n                const patternInput = BigNatModule_divmod(n_1, head(_arg1)[1]);\r\n                const nL = patternInput[1];\r\n                const nH = patternInput[0];\r\n                if (isLeading && BigNatModule_isZero(nH)) {\r\n                    isLeading_mut = isLeading;\r\n                    digits_mut = digits;\r\n                    n_1_mut = nL;\r\n                    _arg1_mut = prior_1;\r\n                    continue collect;\r\n                }\r\n                else {\r\n                    isLeading_mut = isLeading;\r\n                    digits_mut = collect(false, digits, nL, prior_1);\r\n                    n_1_mut = nH;\r\n                    _arg1_mut = prior_1;\r\n                    continue collect;\r\n                }\r\n            }\r\n            else {\r\n                const n_2 = BigNatModule_eval32(n_1) | 0;\r\n                if (isLeading && (n_2 === 0)) {\r\n                    return digits;\r\n                }\r\n                else {\r\n                    return cons(int32ToString(n_2), digits);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const digits_4 = collect(true, empty(), n, route(empty(), 0, BigNatModule_embed(10)));\r\n    if (isEmpty(digits_4)) {\r\n        return \"0\";\r\n    }\r\n    else {\r\n        return join(\"\", toArray(digits_4));\r\n    }\r\n}\r\n\r\nexport function BigNatModule_ofString(str) {\r\n    const len = str.length | 0;\r\n    if (isNullOrEmpty(str)) {\r\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\r\n    }\r\n    const ten = BigNatModule_embed(10);\r\n    const build = (acc_mut, i_mut) => {\r\n        build:\r\n        while (true) {\r\n            const acc = acc_mut, i = i_mut;\r\n            if (i === len) {\r\n                return acc;\r\n            }\r\n            else {\r\n                const c = str[i];\r\n                const d = (c.charCodeAt(0) - 48) | 0;\r\n                if ((0 <= d) && (d <= 9)) {\r\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\r\n                    i_mut = (i + 1);\r\n                    continue build;\r\n                }\r\n                else {\r\n                    throw (new Error());\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return build(BigNatModule_embed(0), 0);\r\n}\r\n\r\nexport function BigNatModule_isSmall(n) {\r\n    return n.bound <= 1;\r\n}\r\n\r\nexport function BigNatModule_getSmall(n) {\r\n    const z = n;\r\n    const i = 0;\r\n    if (i < z.bound) {\r\n        return z.digits[i] | 0;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport function BigNatModule_factorial(n) {\r\n    const productR = (a, b) => {\r\n        if (BigNatModule_equal(a, b)) {\r\n            return a;\r\n        }\r\n        else {\r\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\r\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\r\n        }\r\n    };\r\n    return productR(BigNatModule_one, n);\r\n}\r\n\r\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\r\nimport { Record, toString } from \"../Types.js\";\r\nimport { class_type } from \"../Reflection.js\";\r\nimport { initialize } from \"../Array.js\";\r\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\r\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\r\nimport Decimal from \"../Decimal.js\";\r\n\r\nexport class BigInteger extends Record {\r\n    constructor(signInt, v) {\r\n        super();\r\n        this.signInt = (signInt | 0);\r\n        this.v = v;\r\n    }\r\n    toString() {\r\n        const x = this;\r\n        const matchValue = BigInteger__get_SignInt(x) | 0;\r\n        switch (matchValue) {\r\n            case -1: {\r\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\r\n            }\r\n            case 0: {\r\n                return \"0\";\r\n            }\r\n            case 1: {\r\n                return BigNatModule_toString(BigInteger__get_V(x));\r\n            }\r\n            default: {\r\n                throw (new Error(\"signs should be +/- 1 or 0\"));\r\n            }\r\n        }\r\n    }\r\n    Equals(obj) {\r\n        const this$ = this;\r\n        return (obj instanceof BigInteger) && BigInteger_op_Equality_56F059C0(this$, obj);\r\n    }\r\n    GetHashCode() {\r\n        const x = this;\r\n        return BigInteger_hash_Z665282C2(x) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return toString(this$);\r\n    }\r\n    CompareTo(obj) {\r\n        const this$ = this;\r\n        if (obj instanceof BigInteger) {\r\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\r\n        }\r\n        else {\r\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger$reflection() {\r\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\r\n}\r\n\r\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\r\n    return new BigInteger(signInt, v);\r\n}\r\n\r\n(() => {\r\n    BigInteger.smallLim = 4096;\r\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, BigNatModule_ofInt32);\r\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\r\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\r\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\r\n})();\r\n\r\nexport function BigInteger_nat_Z67CCE57D(n) {\r\n    if (BigNatModule_isSmall(n) && (BigNatModule_getSmall(n) < BigInteger.smallLim)) {\r\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\r\n    }\r\n    else {\r\n        return n;\r\n    }\r\n}\r\n\r\nexport function BigInteger_create_Z2BE94A1(s, n) {\r\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger_posn_Z67CCE57D(n) {\r\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger_negn_Z67CCE57D(n) {\r\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\r\n}\r\n\r\nexport function BigInteger__get_Sign(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return x.signInt | 0;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_SignInt(x) {\r\n    return x.signInt;\r\n}\r\n\r\nexport function BigInteger__get_V(x) {\r\n    return x.v;\r\n}\r\n\r\nexport function BigInteger_op_Equality_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 2: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 3: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 6: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 7: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 8: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\r\n    return !BigInteger_op_Equality_56F059C0(x, y);\r\n}\r\n\r\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            return false;\r\n        }\r\n        case 3: {\r\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return true;\r\n            }\r\n            else {\r\n                return !BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n        }\r\n        case 4: {\r\n            return false;\r\n        }\r\n        case 5: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 6: {\r\n            return false;\r\n        }\r\n        case 7: {\r\n            return false;\r\n        }\r\n        case 8: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return true;\r\n            }\r\n            else {\r\n                return !BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n        }\r\n        case 3: {\r\n            return false;\r\n        }\r\n        case 4: {\r\n            return false;\r\n        }\r\n        case 5: {\r\n            return false;\r\n        }\r\n        case 6: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 7: {\r\n            return !BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 8: {\r\n            return false;\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_compare_56F059C0(n, nn) {\r\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\r\n        return -1;\r\n    }\r\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n\r\nexport function BigInteger_hash_Z665282C2(z) {\r\n    if (BigInteger__get_SignInt(z) === 0) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_StructuredDisplayString(x) {\r\n    return toString(x);\r\n}\r\n\r\nexport function BigInteger_$ctor_Z524259A4(n) {\r\n    if (n >= 0) {\r\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\r\n    }\r\n    else if (n === -2147483648) {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\r\n    }\r\n}\r\n\r\nexport function BigInteger_$ctor_Z524259C1(n) {\r\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\r\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\r\n    }\r\n    else if (equals(n, fromBits(0, 2147483648, false))) {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\r\n    }\r\n}\r\n\r\nexport function BigInteger_get_One() {\r\n    return BigInteger.one;\r\n}\r\n\r\nexport function BigInteger_get_Two() {\r\n    return BigInteger.two;\r\n}\r\n\r\nexport function BigInteger_get_Zero() {\r\n    return BigInteger.zero;\r\n}\r\n\r\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\r\n    const matchValue = BigInteger__get_SignInt(z) | 0;\r\n    if (matchValue === 0) {\r\n        return BigInteger_get_Zero();\r\n    }\r\n    else {\r\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\r\n    }\r\n}\r\n\r\nexport function BigInteger_Scale_Z320F31E(k, z) {\r\n    if (BigInteger__get_SignInt(z) === 0) {\r\n        return BigInteger_get_Zero();\r\n    }\r\n    else if (k < 0) {\r\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\r\n    }\r\n    else {\r\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\r\n    }\r\n}\r\n\r\nexport function BigInteger_subnn_6A57060(nx, ny) {\r\n    if (BigNatModule_gte(nx, ny)) {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\r\n    }\r\n    else {\r\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\r\n    }\r\n}\r\n\r\nexport function BigInteger_addnn_6A57060(nx, ny) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\r\n}\r\n\r\nexport function BigInteger__get_IsZero(x) {\r\n    if (BigInteger__get_SignInt(x) === 0) {\r\n        return true;\r\n    }\r\n    else {\r\n        return BigNatModule_isZero(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsOne(x) {\r\n    if (BigInteger__get_SignInt(x) === 1) {\r\n        return BigNatModule_isOne(BigInteger__get_V(x));\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Addition_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(x)) {\r\n        return y;\r\n    }\r\n    else {\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 1: {\r\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n            }\r\n            case 2: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 3: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(x)) {\r\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\r\n    }\r\n    else {\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 1: {\r\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\r\n            }\r\n            case 2: {\r\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\r\n            }\r\n            case 3: {\r\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return x;\r\n    }\r\n    else if (BigInteger__get_IsZero(y)) {\r\n        return y;\r\n    }\r\n    else if (BigInteger__get_IsOne(x)) {\r\n        return y;\r\n    }\r\n    else if (BigInteger__get_IsOne(y)) {\r\n        return x;\r\n    }\r\n    else {\r\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\r\n    }\r\n}\r\n\r\nexport function BigInteger_DivRem_56F059C0(x, y) {\r\n    if (BigInteger__get_IsZero(y)) {\r\n        throw (new Error());\r\n    }\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\r\n    }\r\n    else {\r\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        const r = patternInput[1];\r\n        const d = patternInput[0];\r\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0] === -1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 1;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 3;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else if (matchValue[0] === 1) {\r\n            if (matchValue[1] === -1) {\r\n                pattern_matching_result = 2;\r\n            }\r\n            else if (matchValue[1] === 1) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 4;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 4;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\r\n            }\r\n            case 1: {\r\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\r\n            }\r\n            case 2: {\r\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\r\n            }\r\n            case 3: {\r\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\r\n            }\r\n            case 4: {\r\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_Division_56F059C0(x, y) {\r\n    return BigInteger_DivRem_56F059C0(x, y)[0];\r\n}\r\n\r\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\r\n    return BigInteger_DivRem_56F059C0(x, y)[1];\r\n}\r\n\r\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\r\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\r\n}\r\n\r\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\r\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\r\n}\r\n\r\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\r\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n}\r\n\r\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    if (matchValue[0] === 0) {\r\n        if (matchValue[1] === 0) {\r\n            return BigInteger_get_Zero();\r\n        }\r\n        else {\r\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\r\n        }\r\n    }\r\n    else if (matchValue[1] === 0) {\r\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\r\n    }\r\n    else {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsNegative(x) {\r\n    if (BigInteger__get_SignInt(x) === -1) {\r\n        return !BigInteger__get_IsZero(x);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsPositive(x) {\r\n    if (BigInteger__get_SignInt(x) === 1) {\r\n        return !BigInteger__get_IsZero(x);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BigInteger_Abs_Z665282C2(x) {\r\n    if (BigInteger__get_SignInt(x) === -1) {\r\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\r\n    }\r\n    else {\r\n        return x;\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 3: {\r\n            return true;\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 6: {\r\n            return true;\r\n        }\r\n        case 7: {\r\n            return true;\r\n        }\r\n        case 8: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\r\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\r\n    let pattern_matching_result;\r\n    if (matchValue[0] === -1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 1;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 6;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 3;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 8;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 4;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 7;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else if (matchValue[0] === 1) {\r\n        if (matchValue[1] === -1) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else if (matchValue[1] === 0) {\r\n            pattern_matching_result = 5;\r\n        }\r\n        else if (matchValue[1] === 1) {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 9;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 9;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\r\n        }\r\n        case 1: {\r\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\r\n        }\r\n        case 2: {\r\n            return true;\r\n        }\r\n        case 3: {\r\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\r\n                return BigNatModule_isZero(BigInteger__get_V(y));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        case 4: {\r\n            return true;\r\n        }\r\n        case 5: {\r\n            return true;\r\n        }\r\n        case 6: {\r\n            return BigNatModule_isZero(BigInteger__get_V(x));\r\n        }\r\n        case 7: {\r\n            return BigNatModule_isZero(BigInteger__get_V(y));\r\n        }\r\n        case 8: {\r\n            return true;\r\n        }\r\n        case 9: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger_Pow_62E082A2(x, y) {\r\n    if (y < 0) {\r\n        throw (new Error(\"y\"));\r\n    }\r\n    const matchValue = [BigInteger__get_IsZero(x), y];\r\n    if (matchValue[0]) {\r\n        if (matchValue[1] === 0) {\r\n            return BigInteger_get_One();\r\n        }\r\n        else {\r\n            return BigInteger_get_Zero();\r\n        }\r\n    }\r\n    else {\r\n        const yval = BigInteger_$ctor_Z524259A4(y);\r\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToInt32(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\r\n        if (u <= (2147483647 >>> 0)) {\r\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\r\n        }\r\n        else if ((BigInteger__get_SignInt(x) === -1) && (u === ((2147483647 + 1) >>> 0))) {\r\n            return -2147483648;\r\n        }\r\n        else {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToUInt32(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToInt64(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return fromBits(0, 0, false);\r\n    }\r\n    else {\r\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\r\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\r\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\r\n        }\r\n        else if ((BigInteger__get_SignInt(x) === -1) && equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true))) {\r\n            return fromBits(0, 2147483648, false);\r\n        }\r\n        else {\r\n            throw (new Error());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToUInt64(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return fromBits(0, 0, true);\r\n    }\r\n    else {\r\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToDouble(x) {\r\n    const matchValue = BigInteger__get_SignInt(x) | 0;\r\n    switch (matchValue) {\r\n        case -1: {\r\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\r\n        }\r\n        case 0: {\r\n            return 0;\r\n        }\r\n        case 1: {\r\n            return BigNatModule_toFloat(BigInteger__get_V(x));\r\n        }\r\n        default: {\r\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_ToSByte(x) {\r\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\r\n}\r\n\r\nexport function BigInteger__get_ToByte(x) {\r\n    return BigInteger__get_ToUInt32(x) & 0xFF;\r\n}\r\n\r\nexport function BigInteger__get_ToInt16(x) {\r\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\r\n}\r\n\r\nexport function BigInteger__get_ToUInt16(x) {\r\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\r\n}\r\n\r\nexport function BigInteger__get_ToSingle(x) {\r\n    return BigInteger__get_ToDouble(x);\r\n}\r\n\r\nexport function BigInteger__get_ToDecimal(x) {\r\n    return new Decimal(BigInteger__get_ToDouble(x));\r\n}\r\n\r\nexport function BigInteger_Parse_Z721C83C5(text) {\r\n    if (text == null) {\r\n        throw (new Error(\"text\"));\r\n    }\r\n    const text_1 = text.trim();\r\n    const len = text_1.length | 0;\r\n    if (len === 0) {\r\n        throw (new Error());\r\n    }\r\n    const matchValue = [text_1[0], len];\r\n    if (matchValue[0] === \"+\") {\r\n        if (matchValue[1] === 1) {\r\n            throw (new Error());\r\n        }\r\n        else {\r\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\r\n        }\r\n    }\r\n    else if (matchValue[0] === \"-\") {\r\n        if (matchValue[1] === 1) {\r\n            throw (new Error());\r\n        }\r\n        else {\r\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\r\n        }\r\n    }\r\n    else {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\r\n    }\r\n}\r\n\r\nexport function BigInteger__get_IsSmall(x) {\r\n    if (BigInteger__get_IsZero(x)) {\r\n        return true;\r\n    }\r\n    else {\r\n        return BigNatModule_isSmall(BigInteger__get_V(x));\r\n    }\r\n}\r\n\r\nexport function BigInteger_Factorial_Z665282C2(x) {\r\n    if (BigInteger__get_IsNegative(x)) {\r\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\r\n    }\r\n    if (BigInteger__get_IsPositive(x)) {\r\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\r\n    }\r\n    else {\r\n        return BigInteger_get_One();\r\n    }\r\n}\r\n\r\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\r\n    return n1;\r\n}\r\n\r\nexport function BigInteger_FromInt64_Z524259C1(x) {\r\n    return BigInteger_$ctor_Z524259C1(x);\r\n}\r\n\r\nexport function BigInteger_FromInt32_Z524259A4(x) {\r\n    return BigInteger_$ctor_Z524259A4(x);\r\n}\r\n\r\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\r\nimport { fromInteger } from \"./Long.js\";\r\nimport { comparePrimitives, min, compare as compare_1, equals as equals_1, safeHash } from \"./Util.js\";\r\nimport { toString as toString_1 } from \"./Types.js\";\r\nimport { fold, empty, ofArrayWithTail, cons, toArray, head, skipWhile } from \"./List.js\";\r\nimport { fill, reverse } from \"./Array.js\";\r\n\r\nexport function isBigInt(x) {\r\n    return x instanceof BigInteger;\r\n}\r\n\r\nexport function tryParse(str, res) {\r\n    try {\r\n        res.contents = BigInteger_Parse_Z721C83C5(str);\r\n        return true;\r\n    }\r\n    catch (matchValue) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function divRem(x, y, remainder) {\r\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\r\n    remainder.contents = patternInput[1];\r\n    return patternInput[0];\r\n}\r\n\r\nexport function parse(arg00) {\r\n    return BigInteger_Parse_Z721C83C5(arg00);\r\n}\r\n\r\nexport function greatestCommonDivisor(arg00, arg01) {\r\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function pow(arg00, arg01) {\r\n    return BigInteger_Pow_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function abs(arg00) {\r\n    return BigInteger_Abs_Z665282C2(arg00);\r\n}\r\n\r\nexport const zero = BigInteger_get_Zero();\r\n\r\nexport const one = BigInteger_get_One();\r\n\r\nexport const two = BigInteger_get_Two();\r\n\r\nexport function fromString(s) {\r\n    return BigInteger_Parse_Z721C83C5(s);\r\n}\r\n\r\nexport function fromZero() {\r\n    return BigInteger_get_Zero();\r\n}\r\n\r\nexport function fromOne() {\r\n    return BigInteger_get_One();\r\n}\r\n\r\nexport function fromInt64(i) {\r\n    return BigInteger_$ctor_Z524259C1(i);\r\n}\r\n\r\nexport function fromInt32(i) {\r\n    if (i > 2147483647) {\r\n        return BigInteger_$ctor_Z524259C1(fromInteger(i, false, 6));\r\n    }\r\n    else {\r\n        return BigInteger_$ctor_Z524259A4(i);\r\n    }\r\n}\r\n\r\nexport function toSByte(x) {\r\n    return BigInteger__get_ToSByte(x);\r\n}\r\n\r\nexport function toByte(x) {\r\n    return BigInteger__get_ToByte(x);\r\n}\r\n\r\nexport function toInt16(x) {\r\n    return BigInteger__get_ToInt16(x);\r\n}\r\n\r\nexport function toUInt16(x) {\r\n    return BigInteger__get_ToUInt16(x);\r\n}\r\n\r\nexport function toInt32(x) {\r\n    return BigInteger__get_ToInt32(x);\r\n}\r\n\r\nexport function toUInt32(x) {\r\n    return BigInteger__get_ToUInt32(x);\r\n}\r\n\r\nexport function toInt64(x) {\r\n    return BigInteger__get_ToInt64(x);\r\n}\r\n\r\nexport function toUInt64(x) {\r\n    return BigInteger__get_ToUInt64(x);\r\n}\r\n\r\nexport function toSingle(x) {\r\n    return BigInteger__get_ToSingle(x);\r\n}\r\n\r\nexport function toDouble(x) {\r\n    return BigInteger__get_ToDouble(x);\r\n}\r\n\r\nexport function toDecimal(x) {\r\n    return BigInteger__get_ToDecimal(x);\r\n}\r\n\r\nexport function sign(x) {\r\n    return BigInteger__get_Sign(x);\r\n}\r\n\r\nexport function isZero(x) {\r\n    return BigInteger__get_IsZero(x);\r\n}\r\n\r\nexport function isOne(x) {\r\n    return BigInteger__get_IsOne(x);\r\n}\r\n\r\nexport function hash(x) {\r\n    return safeHash(x);\r\n}\r\n\r\nexport function compare(x, y) {\r\n    return x.CompareTo(y);\r\n}\r\n\r\nexport function equals(x, y) {\r\n    return equals_1(x, y);\r\n}\r\n\r\nexport function toString(x) {\r\n    return toString_1(x);\r\n}\r\n\r\nexport const get_Zero = BigInteger_get_Zero();\r\n\r\nexport const get_One = BigInteger_get_One();\r\n\r\nexport function op_Addition(arg00, arg01) {\r\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Subtraction(arg00, arg01) {\r\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Multiply(arg00, arg01) {\r\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Division(arg00, arg01) {\r\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Modulus(arg00, arg01) {\r\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_UnaryNegation(arg00) {\r\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\r\n}\r\n\r\nexport function op_UnaryPlus(arg00) {\r\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\r\n}\r\n\r\nexport function op_RightShift(arg00, arg01) {\r\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function op_LeftShift(arg00, arg01) {\r\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\r\n}\r\n\r\nexport function op_BitwiseAnd(arg00, arg01) {\r\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_BitwiseOr(arg00, arg01) {\r\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_ExclusiveOr(arg00, arg01) {\r\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_LessThan(arg00, arg01) {\r\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_LessThanOrEqual(arg00, arg01) {\r\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_GreaterThan(arg00, arg01) {\r\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_GreaterThanOrEqual(arg00, arg01) {\r\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Equality(arg00, arg01) {\r\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\r\n}\r\n\r\nexport function op_Inequality(arg00, arg01) {\r\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\r\n}\r\n\r\nfunction flipTwosComplement(currByte, lowBitFound) {\r\n    let array;\r\n    const matchValue = [currByte, lowBitFound];\r\n    if (matchValue[1]) {\r\n        return [(currByte ^ 255) & 255, true];\r\n    }\r\n    else if (matchValue[0] === 0) {\r\n        return [0, false];\r\n    }\r\n    else {\r\n        return [(currByte ^ (254 << ((array = (new Int32Array([0, 1, 2, 3, 4, 5, 6, 7])), array.find((i) => ((currByte & (1 << i)) > 0)))))) & 255, true];\r\n    }\r\n}\r\n\r\nexport function toByteArray(value) {\r\n    if (equals_1(value, zero)) {\r\n        return new Uint8Array([0]);\r\n    }\r\n    else {\r\n        const isPositive = compare_1(value, zero) > 0;\r\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\r\n        const mask32 = fromInt64(fromInteger(4294967295, false, 6));\r\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\r\n            let value_6, value_8, value_9, value_10;\r\n            loop:\r\n            while (true) {\r\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\r\n                if (compare_1(consumeValue, zero) <= 0) {\r\n                    const accumBytes_1 = isPositive ? skipWhile((b) => (b === 0), accumBytes) : skipWhile((b_1) => (b_1 === 255), accumBytes);\r\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\r\n                    return reverse(toArray((isPositive && isHighBitOne) ? cons(0, accumBytes_1) : (((!isPositive) && (!isHighBitOne)) ? cons(255, accumBytes_1) : accumBytes_1)));\r\n                }\r\n                else {\r\n                    const currValue = toUInt32(BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32));\r\n                    if (isPositive) {\r\n                        const b0 = currValue & 0xFF;\r\n                        let b1;\r\n                        const value_4 = currValue >>> 8;\r\n                        b1 = (value_4 & 0xFF);\r\n                        let b2;\r\n                        const value_5 = currValue >>> 16;\r\n                        b2 = (value_5 & 0xFF);\r\n                        accumBytes_mut = ofArrayWithTail([(value_6 = (currValue >>> 24), value_6 & 0xFF), b2, b1, b0], accumBytes);\r\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\r\n                        lowBitFound_mut = false;\r\n                        continue loop;\r\n                    }\r\n                    else {\r\n                        const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\r\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), value_8 & 0xFF), patternInput[1]);\r\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), value_9 & 0xFF), patternInput_1[1]);\r\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), value_10 & 0xFF), patternInput_2[1]);\r\n                        accumBytes_mut = ofArrayWithTail([patternInput_3[0], patternInput_2[0], patternInput_1[0], patternInput[0]], accumBytes);\r\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\r\n                        lowBitFound_mut = patternInput_3[1];\r\n                        continue loop;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(empty(), value_1, false);\r\n    }\r\n}\r\n\r\nexport function fromByteArray(bytes) {\r\n    if (bytes == null) {\r\n        throw (new Error(\"bytes\"));\r\n    }\r\n    if (bytes.length === 0) {\r\n        return zero;\r\n    }\r\n    else {\r\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\r\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\r\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\r\n                if (bytesRemaining === 0) {\r\n                    const value_2 = fold((acc, value) => BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), fromInt64(fromInteger(value, false, 6))), zero, accumUInt32);\r\n                    if (isPositive) {\r\n                        return value_2;\r\n                    }\r\n                    else {\r\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\r\n                    }\r\n                }\r\n                else {\r\n                    const bytesToProcess = min(comparePrimitives, bytesRemaining, 4) | 0;\r\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\r\n                        buffer[i_1] = bytes[currIndex + i_1];\r\n                    }\r\n                    if (isPositive) {\r\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\r\n                        accumUInt32_mut = cons((((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0, accumUInt32);\r\n                        currIndex_mut = (currIndex + bytesToProcess);\r\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\r\n                        lowBitFound_mut = false;\r\n                        continue loop;\r\n                    }\r\n                    else {\r\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\r\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\r\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\r\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\r\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\r\n                        accumUInt32_mut = cons((((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0, accumUInt32);\r\n                        currIndex_mut = (currIndex + bytesToProcess);\r\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\r\n                        lowBitFound_mut = patternInput_3[1];\r\n                        continue loop;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(empty(), 0, bytes.length, false);\r\n    }\r\n}\r\n\r\n","import { compare } from \"./Util.js\";\r\nimport { unfold, delay } from \"./Seq.js\";\r\nimport { op_Addition, fromZero } from \"./BigInt.js\";\r\nimport { op_Addition as op_Addition_1, fromParts } from \"./Decimal.js\";\r\nimport { op_Addition as op_Addition_2, fromBits } from \"./Long.js\";\r\n\r\nexport function makeRangeStepFunction(step, stop, zero, add) {\r\n    const stepComparedWithZero = compare(step, zero) | 0;\r\n    if (stepComparedWithZero === 0) {\r\n        throw (new Error(\"The step of a range cannot be zero\"));\r\n    }\r\n    const stepGreaterThanZero = stepComparedWithZero > 0;\r\n    return (x) => {\r\n        const comparedWithLast = compare(x, stop) | 0;\r\n        return ((stepGreaterThanZero && (comparedWithLast <= 0)) ? true : ((!stepGreaterThanZero) && (comparedWithLast >= 0))) ? [x, add(x, step)] : (void 0);\r\n    };\r\n}\r\n\r\nexport function integralRangeStep(start, step, stop, zero, add) {\r\n    const stepFn = makeRangeStepFunction(step, stop, zero, add);\r\n    return delay(() => unfold(stepFn, start));\r\n}\r\n\r\nexport function rangeBigInt(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromZero(), op_Addition);\r\n}\r\n\r\nexport function rangeDecimal(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromParts(0, 0, 0, false, 0), op_Addition_1);\r\n}\r\n\r\nexport function rangeDouble(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, 0, (x, y) => (x + y));\r\n}\r\n\r\nexport function rangeInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, false), op_Addition_2);\r\n}\r\n\r\nexport function rangeUInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, true), op_Addition_2);\r\n}\r\n\r\nexport function rangeChar(start, stop) {\r\n    const intStop = stop.charCodeAt(0) | 0;\r\n    return delay(() => unfold((c) => {\r\n        if (c <= intStop) {\r\n            return [String.fromCharCode(c), c + 1];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, start.charCodeAt(0)));\r\n}\r\n\r\n","namespace Elmish\nopen System\n\n[<Struct>]\ntype internal RingState<'item> =\n    | Writable of wx:'item array * ix:int\n    | ReadWritable of rw:'item array * wix:int * rix:int\n\ntype internal RingBuffer<'item>(size) =\n    let doubleSize ix (items: 'item array) =\n        seq { yield! items |> Seq.skip ix\n              yield! items |> Seq.take ix\n              for _ in 0..items.Length do\n                yield Unchecked.defaultof<'item> }\n        |> Array.ofSeq\n\n    let mutable state : 'item RingState =\n        Writable (Array.zeroCreate (max size 10), 0)\n\n    member __.Pop() =\n        match state with\n        | ReadWritable (items, wix, rix) ->\n            let rix' = (rix + 1) % items.Length\n            match rix' = wix with\n            | true -> \n                state <- Writable(items, wix)\n            | _ ->\n                state <- ReadWritable(items, wix, rix')\n            Some items.[rix]\n        | _ ->\n            None\n\n    member __.Push (item:'item) =\n        match state with\n        | Writable (items, ix) ->\n            items.[ix] <- item\n            let wix = (ix + 1) % items.Length\n            state <- ReadWritable(items, wix, ix)\n        | ReadWritable (items, wix, rix) ->\n            items.[wix] <- item\n            let wix' = (wix + 1) % items.Length\n            match wix' = rix with\n            | true -> \n                state <- ReadWritable(items |> doubleSize rix, items.Length, 0)\n            | _ -> \n                state <- ReadWritable(items, wix', rix)","(**\nProgram\n---------\nCore abstractions for creating and running the dispatch loop.\n\n*)\n\nnamespace Elmish\n\n\n/// Program type captures various aspects of program behavior\ntype Program<'arg, 'model, 'msg, 'view> = private {\n    init : 'arg -> 'model * Cmd<'msg>\n    update : 'msg -> 'model -> 'model * Cmd<'msg>\n    subscribe : 'model -> Cmd<'msg>\n    view : 'model -> Dispatch<'msg> -> 'view\n    setState : 'model -> Dispatch<'msg> -> unit\n    onError : (string*exn) -> unit\n    syncDispatch: Dispatch<'msg> -> Dispatch<'msg>\n}\n\n/// Program module - functions to manipulate program instances\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule Program =\n    /// Typical program, new commands are produced by `init` and `update` along with the new state.\n    let mkProgram \n        (init : 'arg -> 'model * Cmd<'msg>) \n        (update : 'msg -> 'model -> 'model * Cmd<'msg>)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init\n          update = update\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError\n          syncDispatch = id }\n\n    /// Simple program that produces only new state with `init` and `update`.\n    let mkSimple \n        (init : 'arg -> 'model) \n        (update : 'msg -> 'model -> 'model)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init >> fun state -> state,Cmd.none\n          update = fun msg -> update msg >> fun state -> state,Cmd.none\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError\n          syncDispatch = id }\n\n    /// Subscribe to external source of events.\n    /// The subscription is called once - with the initial model, but can dispatch new messages at any time.\n    let withSubscription (subscribe : 'model -> Cmd<'msg>) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let sub model =\n            Cmd.batch [ program.subscribe model\n                        subscribe model ]\n        { program with subscribe = sub }\n\n    /// Trace all the updates to the console\n    let withConsoleTrace (program: Program<'arg, 'model, 'msg, 'view>) =\n        let traceInit (arg:'arg) =\n            let initModel,cmd = program.init arg\n            Log.toConsole (\"Initial state:\", initModel)\n            initModel,cmd\n\n        let traceUpdate msg model =\n            Log.toConsole (\"New message:\", msg)\n            let newModel,cmd = program.update msg model\n            Log.toConsole (\"Updated state:\", newModel)\n            newModel,cmd\n\n        { program with\n            init = traceInit \n            update = traceUpdate }\n\n    /// Trace all the messages as they update the model\n    let withTrace trace (program: Program<'arg, 'model, 'msg, 'view>) =\n        let update msg model =\n            let state,cmd = program.update msg model\n            trace msg state\n            state,cmd\n        { program\n            with update = update }\n\n    /// Handle dispatch loop exceptions\n    let withErrorHandler onError (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = onError }\n\n    /// For library authors only: map existing error handler and return new `Program` \n    let mapErrorHandler map (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = map program.onError }\n\n    /// For library authors only: get the current error handler \n    let onError (program: Program<'arg, 'model, 'msg, 'view>) =\n        program.onError\n\n    /// For library authors only: function to render the view with the latest state \n    let withSetState (setState:'model -> Dispatch<'msg> -> unit)\n                     (program: Program<'arg, 'model, 'msg, 'view>) =        \n        { program\n            with setState = setState }\n\n    /// For library authors only: return the function to render the state \n    let setState (program: Program<'arg, 'model, 'msg, 'view>) =        \n        program.setState\n\n    /// For library authors only: return the view function \n    let view (program: Program<'arg, 'model, 'msg, 'view>) =        \n        program.view\n\n    /// For library authors only: function to synchronize the dispatch function\n    let withSyncDispatch (syncDispatch:Dispatch<'msg> -> Dispatch<'msg>)\n                         (program: Program<'arg, 'model, 'msg, 'view>) =        \n        { program\n            with syncDispatch = syncDispatch }\n\n    /// For library authors only: map the program type\n    let map mapInit mapUpdate mapView mapSetState mapSubscribe\n            (program: Program<'arg, 'model, 'msg, 'view>) =\n        { init = mapInit program.init\n          update = mapUpdate program.update\n          view = mapView program.view\n          setState = mapSetState program.setState\n          subscribe = mapSubscribe program.subscribe\n          onError = program.onError\n          syncDispatch = id }\n\n    /// Start the program loop.\n    /// arg: argument to pass to the init() function.\n    /// program: program created with 'mkSimple' or 'mkProgram'.\n    let runWith (arg: 'arg) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let (model,cmd) = program.init arg\n        let rb = RingBuffer 10\n        let mutable reentered = false\n        let mutable state = model        \n        let rec dispatch msg = \n            if reentered then\n                rb.Push msg\n            else\n                reentered <- true\n                let mutable nextMsg = Some msg\n                while Option.isSome nextMsg do\n                    let msg = nextMsg.Value\n                    try\n                        let (model',cmd') = program.update msg state\n                        program.setState model' syncDispatch\n                        cmd' |> Cmd.exec (fun ex -> program.onError (sprintf \"Error in command while handling: %A\" msg, ex)) syncDispatch\n                        state <- model'\n                    with ex ->\n                        program.onError (sprintf \"Unable to process the message: %A\" msg, ex)\n                    nextMsg <- rb.Pop()\n                reentered <- false\n        and syncDispatch = program.syncDispatch dispatch            \n\n        program.setState model syncDispatch\n        let sub = \n            try \n                program.subscribe model \n            with ex ->\n                program.onError (\"Unable to subscribe:\", ex)\n                Cmd.none\n        Cmd.batch [sub; cmd]\n        |> Cmd.exec (fun ex -> program.onError (\"Error intitializing:\", ex)) syncDispatch\n\n    /// Start the dispatch loop with `unit` for the init() function.\n    let run (program: Program<unit, 'model, 'msg, 'view>) = runWith () program\n","namespace Elmish.React\n\n[<AutoOpen>]\nmodule Helpers =\n    open Fable.React.Props\n    open Fable.Core.JsInterop\n\n    /// `Ref` callback that sets the value of an input textbox after DOM element is created.\n    /// Can be used instead of `DefaultValue` and `Value` props to override input box value.\n    let inline valueOrDefault value =\n        Ref <| (fun e -> if e |> isNull |> not && !!e?value <> !!value then e?value <- !!value)\n\n[<RequireQualifiedAccess>]\nmodule Program =\n\n    module Internal =\n\n        open Fable.React\n        open Browser\n        open Elmish\n\n        let withReactBatchedUsing lazyView2With placeholderId (program:Program<_,_,_,_>) =\n            let mutable lastRequest = None\n            let setState model dispatch =\n                match lastRequest with\n                | Some r -> window.cancelAnimationFrame r\n                | _ -> ()\n\n                lastRequest <- Some (window.requestAnimationFrame (fun _ ->\n                    ReactDom.render(\n                        lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                        document.getElementById placeholderId\n                    )))\n\n            program\n            |> Program.withSetState setState\n\n        let withReactSynchronousUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.render(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n        let withReactHydrateUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.hydrate(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// Uses `requestAnimationFrame` to batch updates to prevent drops in frame rate.\n    /// NOTE: This may have unexpected effects in React controlled inputs, see https://github.com/elmish/react/issues/12\n    let withReactBatched placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// New renders are triggered immediately after an update.\n    let withReactSynchronous placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactBatched\")>]\n    let withReact placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactSynchronous\")>]\n    let withReactUnoptimized placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId using `React.hydrate`.\n    let withReactHydrate placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactHydrateUsing lazyView2With placeholderId program\n","module ProjectilePhysicsSimulation.App\n\nopen FSharp.Data.UnitSystems.SI.UnitSymbols\nopen Physics\n\n// ----Update----\ntype Message =\n  | SetInitialSpeed of float<m/s>\n  | SetInitialAngle of float<deg>\n  | SetInitialX of float<m>\n  | SetInitialY of float<m>\n  | SetMass of float<kg>\n  | SetAccelerationGravity of float<m/s^2>\n  | SetDragConstant of float<kg/m>\n  | ToggleShowTrajectory\n  | ToggleShowVelocity\n  | SetTraceInterval of float<s>\n  | SetJumpStep of float<s>\n  | SetSimulationSpeed of float\n  | StartStop\n  | NextFrame of float<ms>\n  | Jump\n  | Reset\n\n\nlet inline clamp low high = max low >> min high\n\nlet simulateAndDraw sim totalTime =\n  let drawTracer = Simulation.timeSinceLastTracer sim |> Graphics.maybeDrawTracer sim.Settings.TraceInterval\n  let next = Simulation.simulate drawTracer sim totalTime\n  Graphics.redrawProjectile sim.Projectile next.Projectile\n  next\n\nlet newPosition settings sim =\n  let next = sim |> Simulation.withSettings settings\n  Graphics.resetTrajectory next.Projectile\n  Graphics.redrawProjectile sim.Projectile next.Projectile\n  next\n\nlet newVelocity settings sim =\n  let next = sim |> Simulation.withSettings settings\n  Graphics.clearVelocityMarker sim.Projectile\n  Graphics.drawVelocityMarker next.Projectile\n  next\n\nlet newAcceleration settings sim =\n  if sim.Running\n  then { sim with Settings = settings }\n  else sim |> Simulation.withSettings settings\n\nlet startAnimation, cancelAnimation =\n  let window = Browser.Dom.window\n  let mutable lastFrame = None\n  let start dispatch startTime =\n    let rec loop last t =\n      dispatch <| NextFrame ((t - last) * 1.0<ms>)\n      lastFrame <- Some <| window.requestAnimationFrame((loop t))\n    lastFrame <- Some <| window.requestAnimationFrame((loop startTime))\n\n  (fun dispatch -> lastFrame <- dispatch |> start |> window.requestAnimationFrame |> Some),\n  (fun () ->\n    lastFrame |> Option.iter window.cancelAnimationFrame\n    lastFrame <- None)\n\nlet update message sim =\n  match message with\n  | SetInitialSpeed v -> sim |> newVelocity { sim.Settings with InitialSpeed = v }, []\n\n  | SetInitialAngle a -> sim |> newVelocity { sim.Settings with InitialAngle = a }, []\n\n  | SetInitialX x -> sim |> newPosition { sim.Settings with InitialPosition = sim.Settings.InitialPosition |> Vector2.withX x }, []\n\n  | SetInitialY y -> sim |> newPosition { sim.Settings with InitialPosition = sim.Settings.InitialPosition |> Vector2.withY y }, []\n\n  | SetMass m ->\n      let projectile = { sim.Projectile with Mass = max Body.minMass m }\n      if sim.Running\n      then { sim with Projectile = projectile }, []\n      else { sim with Projectile = Simulation.initialProjectile sim.Settings projectile }, []\n\n  | SetAccelerationGravity a -> sim |> newAcceleration { sim.Settings with AccelerationGravity = a }, []\n\n  | SetDragConstant c -> sim |> newAcceleration { sim.Settings with DragConstant = max Simulation.minDragConstant c }, []\n\n  | ToggleShowTrajectory ->\n      Graphics.trajectoryCanvas.hidden <- sim.Settings.ShowTrajectory\n      { sim with Settings = { sim.Settings with ShowTrajectory = not sim.Settings.ShowTrajectory } }, []\n\n  | ToggleShowVelocity ->\n      Graphics.velocityCanvas.hidden <- sim.Settings.ShowVelocityMarker\n      { sim with Settings = { sim.Settings with ShowVelocityMarker = not sim.Settings.ShowVelocityMarker } }, []\n\n  | SetTraceInterval s ->\n      let trace = max Simulation.minTraceInterval s\n      if trace <> sim.Settings.TraceInterval then\n        let lastTracer =\n          if sim.Time - sim.LastTracer >= sim.Settings.TraceInterval then\n            Graphics.drawTracer <| Body.center sim.Projectile\n            sim.Time\n          else\n            sim.LastTracer\n        { sim with\n            LastTracer = lastTracer\n            Settings = { sim.Settings with TraceInterval = trace } }, []\n      else\n        sim, []\n\n  | SetJumpStep j ->\n      { sim with Settings = { sim.Settings with JumpStep = j |> clamp Simulation.minJumpStep Simulation.maxJumpStep } }, []\n\n  | SetSimulationSpeed x ->\n      { sim with Settings = { sim.Settings with SimulationSpeed = x |> clamp Simulation.minSpeed Simulation.maxSpeed } }, []\n\n  | StartStop ->\n      if sim.Running then\n        cancelAnimation ()\n        { sim with\n            Running = false\n            LeftOverTime = 0.0<_> }, []\n      else\n        { sim with Running = true },\n        Elmish.Cmd.ofSub startAnimation\n\n  | NextFrame t ->\n      printf \"%f\" t\n      if sim.Running && sim.Settings.SimulationSpeed > 0.0\n      then simulateAndDraw sim ((min 0.1<_> (t / 1000.0<ms/s>)) * sim.Settings.SimulationSpeed + sim.LeftOverTime), []\n      else sim, []\n\n  | Jump -> simulateAndDraw sim sim.Settings.JumpStep, []\n\n  | Reset ->\n      cancelAnimation ()\n      let projectile = Simulation.initialProjectile sim.Settings sim.Projectile\n      Graphics.resetTrajectory projectile\n      Graphics.redrawProjectile sim.Projectile projectile\n      { sim with\n          Projectile = projectile\n          Time = 0.0<_>\n          LeftOverTime = 0.0<_>\n          LastTracer = 0.0<_>\n          Running = false }, []\n\n\n\n\n// ----View----\nopen Fable.React\nopen Fable.React.Props\nopen Elmish.React\n\nFable.Core.JsInterop.importAll \"preact/debug\"\n\nlet unit unitName = [ str unitName ]\nlet withSub subscript text = [ str text; sub [] [ str subscript ] ]\nlet withSuper superscript text = [ str text; sup [] [ str superscript ] ]\n\n\nlet checkbox text message isChecked dispatch =\n  li []\n    [ label [ ClassName \"checkbox\" ]\n        [ input\n            [ Type \"checkbox\"\n              Checked isChecked\n              OnChange (fun _ -> dispatch message) ]\n          str text ] ]\n\n\nlet inline numberInputUnitWith attributes unit message value dispatch =\n  div [ Style [ Display DisplayOptions.InlineBlock ] ]\n    [ input\n        [ Type \"number\"\n          DefaultValue value\n          Step \"any\"\n\n          OnChange (fun e ->\n            try (float e.Value) * 1.0<_> |> message |> dispatch\n            with | _ -> ())\n\n          yield! attributes ]\n      yield! unit ]\n\nlet inline numberInputUnit unit = numberInputUnitWith [] unit\n\n\nlet inline settingInputUnitWith attributes name unit message value dispatch =\n  li []\n    [ label []\n        [ str <| name + \":\"\n          numberInputUnitWith attributes unit message value dispatch ] ]\n\nlet inline settingInputUnit name = settingInputUnitWith [] name\n\n\nlet controls running settings dispatch =\n  div\n    [ ClassName \"controls\"\n      Style [ MarginTop Graphics.height ] ]\n    [ button\n        [ let playpause = if running then \"Pause\" else \"Play\"\n          Type \"button\"\n          ClassName (playpause.ToLower())\n          Title playpause\n          OnClick <| fun _ -> dispatch StartStop ]\n        []\n      label []\n        [ str \"Speed:\"\n          numberInputUnitWith\n            [ Min 0\n              Max Simulation.maxSpeed ]\n            (unit \"x\")\n            SetSimulationSpeed\n            settings.SimulationSpeed\n            dispatch ]\n      div []\n        [ button\n            [ Type \"button\"\n              ClassName \"jump\"\n              Title \"Jump\"\n              OnClick <| fun _ -> dispatch Jump ]\n            []\n          numberInputUnitWith\n            [ Style\n                [ Width \"3em\"\n                  MarginLeft 0\n                  MarginTop \"0.1em\" ]\n              Min 0\n              Max Simulation.maxJumpStep ]\n            (unit \"s\")\n            SetJumpStep\n            settings.JumpStep\n            dispatch ]\n      button\n        [ Type \"button\"\n          ClassName \"reset\"\n          Title \"Reset\"\n          OnClick <| fun _ -> dispatch Reset ]\n        [] ]\n\n\nlet inline telemetryEntryWith name value =\n  tr []\n    [ td []\n        [ yield! name\n          str \":\" ]\n      td []\n        [ str <| sprintf \"%.3f\" (float value) ] ]\n\nlet inline telemetryEntry name = telemetryEntryWith [ str name ]\n\nlet telemetry time projectile =\n  details\n    [ ClassName \"telemetry\"\n      Open true ]\n    [ summary []\n        [ str \"Telemetry\" ]\n      table []\n        [ tbody []\n            [ telemetryEntry \"T\" time\n              telemetryEntry \"X\" projectile.Position.X\n              telemetryEntry \"Y\" projectile.Position.Y\n              telemetryEntryWith (\"V\" |> withSub \"x\") projectile.Velocity.X\n              telemetryEntryWith (\"V\" |> withSub \"y\") projectile.Velocity.Y\n              telemetryEntryWith (\"A\" |> withSub \"x\") projectile.Acceleration.X\n              telemetryEntryWith (\"A\" |> withSub \"y\") projectile.Acceleration.Y ] ] ]\n\n\nlet viewSettings started mass settings dispatch =\n  div\n    [ ClassName \"settings\"\n      Key \"settings\" ]\n    [ ul []\n        [ checkbox \"Show Velocity Marker\" ToggleShowVelocity settings.ShowVelocityMarker dispatch\n          checkbox \"Show Traced Trajectory\" ToggleShowTrajectory settings.ShowTrajectory dispatch\n          settingInputUnitWith\n            [ Min 0 ]\n            \"Trace Trajectory Every\"\n            (unit \"s\")\n            SetTraceInterval\n            settings.TraceInterval\n            dispatch ]\n      ul []\n        [ settingInputUnitWith\n            [ Min 0 ]\n            \"Mass\"\n            (unit \"kg\")\n            SetMass\n            mass\n            dispatch\n          settingInputUnit\n            \"Gravity\"\n            (\"m/s\" |> withSuper \"2\")\n            SetAccelerationGravity\n            settings.AccelerationGravity\n            dispatch\n          li []\n            [ label []\n                [ span [ Title \"Combined Drag Constant = fluid density (kg/m^3) * contact area (m^2) * drag coefficient (unitless) / 2\" ]\n                    [ u [ ClassName \"tooltip\" ]\n                        [ str \"Combined Drag Constant\" ]\n                      str \":\" ]\n                  numberInputUnitWith\n                    [ Min 0 ]\n                    (unit \"kg/m\")\n                    SetDragConstant\n                    settings.DragConstant\n                    dispatch ] ] ]\n      ul []\n        [ let inline initSetting name u message value = settingInputUnitWith [ Disabled started ] (\"Initial \" + name) (unit u) message value dispatch\n          initSetting \"X\" \"m\" SetInitialX settings.InitialPosition.X\n          initSetting \"Y\" \"m\" SetInitialY settings.InitialPosition.Y\n          initSetting \"Speed\" \"m/s\" SetInitialSpeed settings.InitialSpeed\n          initSetting \"Angle\" \"deg\" SetInitialAngle settings.InitialAngle ] ]\n\n\nlet inline structalThenReferenceEquality (a1, b1: 'b) (a2, b2: 'b) =\n  a1 = a2 && System.Object.ReferenceEquals(b1, b2)\n\nlet view sim dispatch =\n  ofList\n    [ div\n        [ ClassName \"simulation\"\n          Key \"simulation\"\n          Style [ Width Graphics.width ] ]\n        [ lazyView3With\n            structalThenReferenceEquality\n            controls\n            sim.Running\n            sim.Settings\n            dispatch\n          telemetry sim.Time sim.Projectile ]\n      lazyView3With\n        structalThenReferenceEquality\n        (fun (started, mass) settings -> viewSettings started mass settings)\n        (Simulation.started sim, sim.Projectile.Mass)\n        sim.Settings\n        dispatch ]\n\n\n\n\n// ----App----\nopen Elmish\n#if DEBUG\nopen Elmish.HMR\n#endif\n\nlet init () =\n  let sim =\n    let settings =\n      { InitialSpeed = 90.0<m/s>\n        InitialAngle = 60.0<deg>\n        InitialPosition = Vector2(15.0<m>, 15.0<m>)\n        AccelerationGravity = -9.8<m/s^2>\n        DragConstant = 0.0<kg/m>\n        ShowTrajectory = true\n        ShowVelocityMarker = true\n        TraceInterval = 1.0<_>\n        SimulationSpeed = 2.5\n        JumpStep = 1.0<_> }\n\n    let projectile =\n      let projectileLength = 25<m>\n      { Width = projectileLength\n        Height = projectileLength\n        Mass = 1000.0<kg>\n        Position = Vector2.zero\n        Velocity = Vector2.zero\n        Acceleration = Vector2.zero\n        PrevAcceleration = Vector2.zero }\n      |> Simulation.initialProjectile settings\n\n    { Projectile = projectile\n      Running = false\n      Time = 0.0<_>\n      LastTracer = 0.0<_>\n      LeftOverTime = 0.0<_>\n      Settings = settings }\n\n  Graphics.drawBody sim.Projectile\n  Graphics.drawVelocityMarker sim.Projectile\n  Graphics.drawTracer <| Body.center sim.Projectile\n  sim, []\n\nProgram.mkProgram init update view\n|> Program.withReactBatched \"app\"\n|> Program.run\n"],"names":["$6650a188cf121b1f$export$1e2f57719e155213","x","Array","isArray","ArrayBuffer","isView","$6650a188cf121b1f$var$isHashable","GetHashCode","$6650a188cf121b1f$export$e29d65b7eabdc6dd","Dispose","$6650a188cf121b1f$export$466534c54e60af80","$6650a188cf121b1f$export$52febab2880147bb","y","Object","getPrototypeOf","constructor","$6650a188cf121b1f$export$95c529ba89ee4ce7","iter","this","current","cur","next","value","done","Error","$6650a188cf121b1f$export$a41738691dcd8bea","o","GetEnumerator","Symbol","iterator","$6650a188cf121b1f$export$21e0669b7bd01bb4","en","hasNext","undefined","$6650a188cf121b1f$export$eeb1958fe3944641","i","length","str","toString","$6650a188cf121b1f$export$b4360650442640a0","date","date1","offset","kind","getTimezoneOffset","$6650a188cf121b1f$export$afbd86327cbebb03","radix","$6650a188cf121b1f$export$f3f95c9f1920e9b5","static","idMap","has","set","count","get","$6650a188cf121b1f$export$b9b095ec8c02760b","s","h","len","charCodeAt","$6650a188cf121b1f$export$a9844eb73de0a218","$6650a188cf121b1f$export$4a6567c520a28ea3","hashes","reduce","h1","h2","$6650a188cf121b1f$export$2e619f11ca48bee4","$6650a188cf121b1f$export$34638350c54b9a1b","Date","getTime","$6650a188cf121b1f$export$2e003ac3dfcb70a3","values","map","v","id","$6650a188cf121b1f$export$b9a64d2e4daf3c9f","eq","$6650a188cf121b1f$export$dc63f52ecf814bf8","$6650a188cf121b1f$export$e9bab7fafb253603","Equals","$6650a188cf121b1f$var$isEquatable","$6650a188cf121b1f$export$c4c806e061935577","xKeys","keys","yKeys","sort","$6650a188cf121b1f$var$equalObjects","xtime","ytime","$6650a188cf121b1f$export$591cc4a8025fba16","$6650a188cf121b1f$export$fc16749c794bf6ff","comp","j","$6650a188cf121b1f$export$7b00afb96b8966ce","$6650a188cf121b1f$export$398604a469f7de9a","CompareTo","$6650a188cf121b1f$var$isComparable","key","$6650a188cf121b1f$var$compareObjects","$6650a188cf121b1f$export$96ec731ed4dcb222","comparer","$6650a188cf121b1f$export$8960430cfd85939f","WeakMap","$6650a188cf121b1f$var$CURRIED","$6650a188cf121b1f$export$7864d59d01b6d6bf","arity","f","uncurried","args","res","$6650a188cf121b1f$var$_curry","arg","concat","$6650a188cf121b1f$export$c3095a23b368d1f2","$6650a188cf121b1f$export$955fe82a9145db62","$bc6636a471877b8d$export$f84e8e69fd4488a5","callStack","self","$bc6636a471877b8d$export$67548df8c961d303","cons","entries","k","join","name","String","$bc6636a471877b8d$export$6cbb4f8fa0c4c986","cases","tag","toJSON","fields","fieldStr","withParens","indexOf","$bc6636a471877b8d$export$19c5b35f73b7bbbc","splice","other","$bc6636a471877b8d$var$recordToJSON","$bc6636a471877b8d$var$recordToString","$bc6636a471877b8d$var$recordGetHashCode","$bc6636a471877b8d$var$recordEquals","thisNames","$bc6636a471877b8d$var$recordCompareTo","result","$bc6636a471877b8d$export$5b163c6d120341e7","$bc6636a471877b8d$export$be150d1a3c7e94fe","contentsOrGetter","setter","getter","contents","$bc6636a471877b8d$export$e2f174de097e0bcd","message","$bc6636a471877b8d$export$1ad1de0e03fe42fe","e","$4367bd9579264c58$export$8f701197936bc2a6","$4367bd9579264c58$export$e90fb89750dba83f","$4367bd9579264c58$export$2060d2db72cce88f","multiply","$4367bd9579264c58$export$a81f732198733497","dp","toFixed","$4367bd9579264c58$export$3e91a10e66078270","sd","toPrecision","$4367bd9579264c58$export$888cb08ddc4765be","toExponential","$4367bd9579264c58$export$7ea66e3774a60b67","Number","toHex","$0d69e49ba09e7365$var$P","c","cmp","_this","mul","$0d69e49ba09e7365$var$NUMERIC","$0d69e49ba09e7365$var$parse","n","nl","test","$0d69e49ba09e7365$var$INVALID","charAt","slice","replace","search","substring","$0d69e49ba09e7365$var$round","$0d69e49ba09e7365$export$721faf8597f6f672","DP","RM","rm","more","xc","isZero","findIndex","xci","idx","unshift","pop","$0d69e49ba09e7365$var$stringify","doExponential","isNonzero","abs","isneg","yc","l","Math","max","div","a","b","$0d69e49ba09e7365$var$NAME","bl","bt","ri","bz","ai","al","r","rl","q","qc","qi","p","push","shift","gt","gte","lt","lte","minus","sub","t","xlty","plus","xe","ye","reverse","mod","ygtx","times","add","pow","one","prec","round","sqrt","half","NE","PE","toNumber","strict","valueOf","$0d69e49ba09e7365$var$_Big_","x1","$0d69e49ba09e7365$var$normalize","TypeError","prototype","$0d69e49ba09e7365$export$2e2bcd8739ae039","$1422b9212d99d304$export$2fb4bfa701a7ee12","$1422b9212d99d304$export$87c665ad90b41cb3","$eb71e60e298df760$var$wasm","WebAssembly","Instance","Module","Uint8Array","exports","$eb71e60e298df760$export$12ac1d26449d9c2e","low","high","unsigned","$eb71e60e298df760$export$d8c61589c31c4718","obj","$eb71e60e298df760$export$e9bab7fafb253603","$eb71e60e298df760$export$398604a469f7de9a","$eb71e60e298df760$export$f84e8e69fd4488a5","$eb71e60e298df760$export$2060d2db72cce88f","substr","$eb71e60e298df760$export$de2da3025c30316c","$eb71e60e298df760$export$30a71edf0753ed6b","__isLong__","defineProperty","$eb71e60e298df760$var$INT_CACHE","$eb71e60e298df760$var$UINT_CACHE","$eb71e60e298df760$export$62ffe363f1b08494","cachedObj","cache","$eb71e60e298df760$export$af782817a0bb622d","$eb71e60e298df760$export$7bbb4164c9a77bc2","isNaN","$eb71e60e298df760$export$e35e43f82f36d912","$eb71e60e298df760$export$2a1795c9359f92b9","$eb71e60e298df760$var$TWO_PWR_64_DBL","$eb71e60e298df760$export$ece7599f9193150b","$eb71e60e298df760$var$TWO_PWR_63_DBL","$eb71e60e298df760$export$10e1f42189ea83da","$eb71e60e298df760$export$e5fd331eb7ecbb12","$eb71e60e298df760$export$aef51622e549b8b0","$eb71e60e298df760$var$TWO_PWR_32_DBL","lowBits","highBits","$eb71e60e298df760$var$pow_dbl","$eb71e60e298df760$export$3004f64547af360e","RangeError","radixToPower","size","min","parseInt","$eb71e60e298df760$export$e16d8520af44a096","$eb71e60e298df760$export$5f36b26c3833b3ba","val","$eb71e60e298df760$var$TWO_PWR_16_DBL","$eb71e60e298df760$var$TWO_PWR_24","$eb71e60e298df760$export$30f1bb5a4a4a5467","$eb71e60e298df760$export$789f666db4213815","$eb71e60e298df760$export$e5b31325dd05546c","$eb71e60e298df760$export$e7a1baa2fae31f0f","$this","$eb71e60e298df760$export$a0a81dc3380ce7d3","$eb71e60e298df760$export$c46ec7d82fb1f602","$eb71e60e298df760$export$d0909a4f38b5c4d0","radixLong","$eb71e60e298df760$export$cd007d971a5a2143","rem1","$eb71e60e298df760$export$4e2d2ead65e5f7e3","rem","remDiv","digits","$eb71e60e298df760$export$d36793d8f5c37d4d","$eb71e60e298df760$export$9b050841a3a1b328","$eb71e60e298df760$export$f517ea36c68d4644","$eb71e60e298df760$export$1d972cf4acc123bd","thisNeg","otherNeg","$eb71e60e298df760$export$6003a5f097c73977","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","get_high","b00","divisor","approx","div_u","div_s","$eb71e60e298df760$export$908ef9a84e4ca2d4","$eb71e60e298df760$export$fd2d1dabe2e60497","$eb71e60e298df760$export$f613292be21d0bc3","$eb71e60e298df760$export$86c449e29266e58a","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","le","hi","lo","$eb71e60e298df760$export$4e5655041aced948","$eb71e60e298df760$export$7fca740e0e0e35ff","bytes","$eb71e60e298df760$export$c1b063d566627ce9","$eb71e60e298df760$export$3a3e04395cb3b0a4","$d94b01037623cc6b$export$a5fb1fdca49990a","$d94b01037623cc6b$export$bef948e98114a357","$d94b01037623cc6b$export$a6e41fbebc04a9a6","$d94b01037623cc6b$export$ded19a969d94df2c","rem_u","rem_s","$d94b01037623cc6b$export$816012df0c0b827b","$d94b01037623cc6b$export$63100fead1d420ec","$d94b01037623cc6b$export$398604a469f7de9a","$d94b01037623cc6b$export$af782817a0bb622d","$d94b01037623cc6b$export$e7a1baa2fae31f0f","$d94b01037623cc6b$export$ee060913cffc652","xh","$613c9d81400b67c4$export$f0c1fe746ce4bb1e","fullname","generics","construct","parent","enumCases","$613c9d81400b67c4$export$1d6cfa7493842c29","$613c9d81400b67c4$export$c14f61804029af13","$613c9d81400b67c4$export$e9bab7fafb253603","$613c9d81400b67c4$export$18737d7a203fc740","t1","t2","$613c9d81400b67c4$export$b0ab498daed3dd7f","k1","v1","k2","v2","elemType","$613c9d81400b67c4$export$cc56411ddc6ec102","_a","_arg1","_arg2","_arg5","_arg6","scalar","_arg7","_arg8","_arg9","vector","(/)","(*)","$a31a416e6f2d4f0c$export$2acbb18df45e1221","body","X","$a31a416e6f2d4f0c$export$e255327ea99dc1e8","Position","sim","constant","velocity","mass","$a31a416e6f2d4f0c$export$aa5e86f2fd11ac5b","normalizeUnsafe","settings","gravity","accclerationDrag","Mass","time","newAcceleration","deltaPosition","(+)","$a31a416e6f2d4f0c$export$4b2c32e08f77ff18","$a31a416e6f2d4f0c$export$cc95df794565718e","_arg3","$a31a416e6f2d4f0c$export$1951f12d3b741ff0","$a31a416e6f2d4f0c$export$8bc4e9c194888f52","_arg4","projectile","magnitude","degrees","cos","sin","acceleration","$a31a416e6f2d4f0c$export$156b30a852a4aab","$a31a416e6f2d4f0c$export$6187ff8ddf0ceb76","$19f465178eaca5cf$var$phi","$19f465178eaca5cf$export$7e3df82ee760448c","window","screen","availWidth","phi","$19f465178eaca5cf$export$ac607276a8fe9f0a","availHeight","canvas","document","getElementById","width","height","context","$19f465178eaca5cf$var$patternInput$004027","setupCanvas","$19f465178eaca5cf$export$1ad3d0f74a55a070","patternInput","$19f465178eaca5cf$export$2cc4f1e594313d2f","$19f465178eaca5cf$var$patternInput$004028$002D1","$19f465178eaca5cf$export$189f15be8a2005d8","$19f465178eaca5cf$var$patternInput$004029$002D2","$19f465178eaca5cf$export$dec7cc24db0668a1","$19f465178eaca5cf$export$c11dfee347edb2d0","point","beginPath","trajectoryContext","$a31a416e6f2d4f0c$export$8632cd806b4a3fc3","closePath","fill","drawTracer","$a31a416e6f2d4f0c$export$371db1455a5b8008","bodyContext","Height","velocityContext","Velocity","stroke","prev","clearBody","clearVelocityMarker","drawBody","drawVelocityMarker","$7f6cdc303298ddb7$export$9f9d0139d032da4f","$7f6cdc303298ddb7$export$2ab9a8f9f1186f14","$7f6cdc303298ddb7$export$ad14ef4001db2bcd","$61bbb321e2ed6232$export$4dcf2a40c0851df0","isMinus","minutes","$61bbb321e2ed6232$export$44fcf6ab0130c000","$61bbb321e2ed6232$export$324d90190a8b822a","toISOString","$61bbb321e2ed6232$var$dateToStringWithCustomFormat","format","utc","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","$61bbb321e2ed6232$var$dateToStringWithOffset","_b","_c","d","dateWithOffset","$61bbb321e2ed6232$var$dateToISOStringWithOffset","$61bbb321e2ed6232$var$dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","$61bbb321e2ed6232$var$dateToISOString","$61bbb321e2ed6232$export$f84e8e69fd4488a5","_provider","$cb9278315c059674$var$fsFormatRegExp","$cb9278315c059674$var$isLessThan","$4367bd9579264c58$export$398604a469f7de9a","$cb9278315c059674$export$d1317194012d6b34","input","cont","lastIndex","strParts","matches","strIdx","exec","matchIndex","index","$cb9278315c059674$var$createPrinter","$cb9278315c059674$var$continuePrint","$cb9278315c059674$export$598ff36d54604b81","$cb9278315c059674$var$formatReplacement","flags","padLength","precision","$cb9278315c059674$export$d9468344d3651243","sign","toLowerCase","toUpperCase","zeroFlag","minusFlag","ch","$cb9278315c059674$export$bc3bea8325045070","_strParts","_matches","_result","padArg","_padLength","$cb9278315c059674$export$f7e2c8231c57a8bd","delimiter","xs","from","isRight","$f4bd550dd1efe3ac$export$882a7a2eca8e1502","$f4bd550dd1efe3ac$export$9563e054e6f787fb","target","targetIndex","start","$f4bd550dd1efe3ac$export$2a47f398eeff8b01","initializer","$e445414175e358d5$export$46fa32c6f8b2f86","$e445414175e358d5$export$5fd5031fecdacec3","$e445414175e358d5$export$c01875f616615628","super","head","tail","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","matchValue","xt","yt","i_mut","h_mut","_key","$e445414175e358d5$export$9eb8d7afe7bf3554","$e445414175e358d5$export$d5c5f9d2dd7dbba2","it","__","$e445414175e358d5$export$ca5f14a39f7c3bde","$e445414175e358d5$export$62ac43da335545f6","$e445414175e358d5$export$10d5772debd84bf1","$e445414175e358d5$export$f15c1e15e73226cf","$e445414175e358d5$export$1d866465156343c7","$83d6a77e21696b3c$export$6f6b0078912f4c4b","$e445414175e358d5$export$4e0d45844bd5cd6a","$e445414175e358d5$export$6e22c362a0406a2c","$e445414175e358d5$export$8327ebbef2a0ba76","$e445414175e358d5$export$439306a4dcaafbb9","$e445414175e358d5$export$dd1bc94b04021eeb","$e445414175e358d5$export$45b10814cc054894","$e445414175e358d5$export$93e2b83da34ff82a","folder","state","acc","$e445414175e358d5$export$c1a059043cc9c119","action","unitVar0","$e445414175e358d5$export$2d23f4f67ce65296","tail_1","$e445414175e358d5$export$cb197a913f6bb809","$e445414175e358d5$export$c80b5fc7454ef206","xs_3","root","node","enumerator","xs_5","t_2","$1b379bb03cf1b357$export$fe7fea637c109b1","$1b379bb03cf1b357$export$8314a61089d7dfd1","$1b379bb03cf1b357$export$f84f5f7a2af4015b","$1b379bb03cf1b357$export$2cbf863d8f6afaa7","dispose","$1b379bb03cf1b357$export$c9c12dccafdc9e15","$1b379bb03cf1b357$export$df49e5e409220125","$1b379bb03cf1b357$export$8da5aab8659eb06","$1b379bb03cf1b357$export$d82b80f0dbfe256d","openf","compute","closef","curr","started","x_1","finish","matchValue_1","$1b379bb03cf1b357$export$14d5e08ade3f14c2","argName","$f6044c6d0b3a513f$export$49fc45e4e62e7426","$1b379bb03cf1b357$export$327d67905f90fa80","$1b379bb03cf1b357$export$9de9c521f6c9f38f","$1b379bb03cf1b357$export$c80b5fc7454ef206","$1b379bb03cf1b357$export$1391212d75b2ee65","generator","$1b379bb03cf1b357$export$ee1b3e54f0441b22","sources","outerOpt","innerOpt","finished","inner","outer","copyOfStruct","inner_1","outer_1","$1b379bb03cf1b357$export$20426c14ee45c85e","$1b379bb03cf1b357$export$c48e357c1a89b78d","st_1","$1b379bb03cf1b357$export$f054447c84a06e65","$1b379bb03cf1b357$export$439306a4dcaafbb9","ar","$f4bd550dd1efe3ac$export$439306a4dcaafbb9","$1b379bb03cf1b357$export$effcdbd76139450","$1b379bb03cf1b357$export$80d376111cc09ad7","create","$1b379bb03cf1b357$export$7395da449cea18d1","$1b379bb03cf1b357$export$10d8903dec122b9d","ys","$1b379bb03cf1b357$export$93e2b83da34ff82a","$1b379bb03cf1b357$export$871de8747c9eaa88","mapping","e_1","$1b379bb03cf1b357$export$955fc4a6c4be454d","source","_","$1b379bb03cf1b357$export$9f17aeddfa374276","$02a68a853d1c4f8f$export$9fd6763ef90dc41a","cancelled","_id","_cancelled","_listeners","Map","isCancelled","cancel","listener","addListener","removeListener","delete","register","$","$02a68a853d1c4f8f$export$f0cb925494fb2481","setPrototypeOf","$02a68a853d1c4f8f$export$b4ce65e0fbdd4233","ctx","cancelToken","onCancel","trampoline","incrementAndCheck","hijack","err","onError","$02a68a853d1c4f8f$export$85fb2bb30d9b59b4","computation","binder","onSuccess","$02a68a853d1c4f8f$export$514a89518aadac63","Bind","Combine","computation1","computation2","Delay","For","sequence","While","Return","ReturnFrom","TryFinally","compensation","TryWith","catchHandler","ex","Using","resource","guard","Zero","text","console","error","dispatch","cmd","call","cmds","lists","forEach","xs_6","$e445414175e358d5$export$ee1b3e54f0441b22","options","vnodeId","rerenderQueue","defer","prevDebounce","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","props","removeNode","parentNode","removeChild","createElement","type","children","ref","normalizedProps","arguments","defaultProps","createVNode","original","vnode","__b","__e","__d","__h","Fragment","Component","getDomSibling","childIndex","sibling","updateParentDomPointers","child","base","enqueueRender","process","debounceRendering","queue","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","reorderChildren","placeChild","unmount","applyRef","tmp","toChildArray","out","nextDom","sibDom","appendChild","nextSibling","insertBefore","setStyle","style","setProperty","dom","oldValue","useCapture","cssText","addEventListener","eventProxyCapture","eventProxy","removeEventListener","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","contextType","render","doRender","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","oldHtml","newHtml","nodeType","localName","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","diffElementNodes","diffed","cb","parentVNode","skipRemove","componentWillUnmount","replaceNode","firstChild","errorInfo","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","forceUpdate","Promise","then","bind","resolve","setTimeout","__PREACT_DEVTOOLS__","attachPreact","loggedTypeFailures","getDisplayName","displayName","renderStack","ownerStack","getCurrentVNode","hasBabelPlugin","isPossibleOwner","getOwnerStack","stack","owner","__source","fileName","lineNumber","warn","isWeakMapSupported","serializeVNode","attrs","prop","hasOwnProperty","JSON","stringify","oldDiff","oldDiffed","oldRoot","oldRender","setupComponentStack","hooksAllowed","oldBeforeDiff","oldVnode","oldCatchError","oldHook","warnedComponents","useEffect","useLayoutEffect","lazyPropTypes","deprecations","promise","componentStack","isValid","componentName","getClosestDomNodeParent","propTypes","m","lazyVNode","typeSpecs","location","getStack","typeSpecName","property","deprecatedAttributes","nodeName","deprecatedProto","__self","__proto__","currentComponent","prevRaf","afterPaintEffects","oldBeforeRender","oldAfterDiff","oldCommit","oldBeforeUnmount","flushAfterPaintEffects","invokeCleanup","invokeEffect","hooks","requestAnimationFrame","raf","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","filter","hasErrored","hook","cleanup","shallowDiffers","PureComponent","isPureReactComponent","oldDiffHook","for","Forwarded","oldUnmount","Suspense","_suspenders","suspended","SuspenseList","_next","_map","suspendingVNode","suspendingComponent","resolved","onResolved","onSuspensionComplete","suspendedVNode","removeOriginal","detachedParent","originalParent","wasHydrating","detachedComponent","__c","__v","__k","detachedClone","effect","fallback","list","revealOrder","delegated","unsuspend","wrappedUnsuspend","REACT_ELEMENT_TYPE","CAMEL_PROPS","IS_DOM","textContent","preactRender","isReactComponent","configurable","writable","oldEventHook","empty","isPropagationStopped","cancelBubble","isDefaultPrevented","defaultPrevented","persist","nativeEvent","classNameDescriptor","class","oldVNodeHook","nonCustomElement","multiple","selected","defaultValue","className","enumerable","$$typeof","$94795e4e8263e3ef$var$CaseRules","$94795e4e8263e3ef$var$dashify","separator","$94795e4e8263e3ef$export$c0695a590b8490e7","caseRule1","definedCaseRule","fail","kvPair","caseRule","$94795e4e8263e3ef$var$changeCase","kvPair1","$fe0589aa06bbfb4d$export$98e6a39c04603d36","defValue","$fe0589aa06bbfb4d$export$468ff95b83d315e5","this$","nextProps","_nextState","model","equal","view","$427d8430ee689fbf$export$dcb5c892f61d2e0d","$85449e5153634ac3$export$c8a8987d4410bf2d","$427d8430ee689fbf$export$1fad77593676747f","state1","state2","$16e5418526446f55$export$7edd58f9cae9a114","bound","$16e5418526446f55$export$7bc5dc25d1b1a5cc","x_mut","n_mut","$16e5418526446f55$export$aa079e1de9d0061a","Int32Array","$16e5418526446f55$export$acd5840f27943d90","$16e5418526446f55$export$c54c92bf804059a2","$16e5418526446f55$export$179d4b0cc9eea75b","$16e5418526446f55$export$d054f63ef2b78d76","$16e5418526446f55$export$f973429bea271f71","$16e5418526446f55$export$7c87faae24df4dfe","$16e5418526446f55$export$3f23a60d7da31604","$16e5418526446f55$export$f7d3a94e74d37b36","$16e5418526446f55$export$86c6e26d64af729e","$16e5418526446f55$export$bd938abfd39588fb","na_mut","na","findLeastBound","$16e5418526446f55$export$44763c30a750d62","r_1","$16e5418526446f55$export$8666e0a5acc3adfb","$16e5418526446f55$export$e101cbdf67498387","$16e5418526446f55$export$640e4cca9fd0f5ea","$16e5418526446f55$export$7554a863a3d6ca5d","$16e5418526446f55$export$4b407d992a15d766","$16e5418526446f55$export$b235b371c1794b7a","$16e5418526446f55$export$4f8d559fdf580f84","pa_mut","qa_mut","pa","qa","check","$16e5418526446f55$export$49a7e1302c0020ce","$16e5418526446f55$export$23d0352c846ad95","$16e5418526446f55$export$67c001e9e3e01c9d","r_mut","c_mut","k_mut","rak","$16e5418526446f55$export$dfdb8d0fbbe177f1","bp","q_1","$16e5418526446f55$export$71c5845c1c8ec1c2","pSmall","qSmall","$16e5418526446f55$export$8965c6a7a493566","ra","pai","qaj","$16e5418526446f55$export$7523c2681f3924f9","$16e5418526446f55$export$c40b6bf4379e4c6a","bigL","twoToBigL","bigK","bigN","split","splits","$16e5418526446f55$export$74fa93203ab6e8ba","$16e5418526446f55$export$8c48eb4a040eb010","$16e5418526446f55$export$9cf9fdfaad06892c","$16e5418526446f55$export$46d78523d0417c3a","patternInput_1","ad","a_1","f_1","z","zLo","zHi","$16e5418526446f55$export$7b451fa7989b4636","$16e5418526446f55$export$3bf6839c870bbd2a","degx","dega","xa","aa","pn","qn","qai","$16e5418526446f55$export$f29357d20df99db5","$16e5418526446f55$export$10b034dc89c503c5","Invariant","tupledArg","$16e5418526446f55$export$41f34db123f59fc6","$16e5418526446f55$export$43299f6742cabf54","$16e5418526446f55$export$409804fe35198f3f","$16e5418526446f55$export$98a85507c80286c6","$16e5418526446f55$export$8b4ad49b7e39bfde","degn","collect","isLeading_mut","digits_mut","n_1_mut","_arg1_mut","isLeading","n_1","n_2","prior_1","nL","nH","digits_4","prior_mut","ten2k_mut","prior","ten2k","route","$16e5418526446f55$export$a539e27a5280305d","$16e5418526446f55$export$56afee1911c19082","$e3475f19c4dd760f$export$1a89ae3627118dd","signInt","$e3475f19c4dd760f$export$1e20addf36fa930b","$e3475f19c4dd760f$export$1958747cb92832a6","$e3475f19c4dd760f$export$c35eaa0213122769","$16e5418526446f55$export$df6afad84662e838","$e3475f19c4dd760f$export$f5d5409aaef2a410","nn","$e3475f19c4dd760f$export$5e6684cd2d8018d4","$e3475f19c4dd760f$export$ae6a19dbc0f6935","smallLim","smallPosTab","pattern_matching_result","$e3475f19c4dd760f$export$f9abd0dbba9b64c9","$e3475f19c4dd760f$export$fadceecd77dc87b5","$e3475f19c4dd760f$export$2d4fa52e7489a985","two","$e3475f19c4dd760f$export$ece4c5e36759a3af","zero","$00d7d4c2ef5569fc$export$5ed6871edc0c752e","step","stop","stepFn","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","$00d7d4c2ef5569fc$export$574b10e6b1a419","$912292aa959e1a0a$export$b9a5a3b23239a594","wix","rix","items","rix'","item","wix'","items_1","ix","$1b379bb03cf1b357$export$bb44f104e3c54dae","program","$94d815a1121cade4$export$e5f12ed22b8c4ce1","syncDispatch","rb","reentered","msg","$912292aa959e1a0a$export$f7571d77fa89f376","nextMsg","model'","$87efcc098fd1caf8$export$87b90e3fbd3ddb94","$912292aa959e1a0a$export$8db6c49124991eed","$87efcc098fd1caf8$export$7e5e7d6bb47890be","$87efcc098fd1caf8$export$c1c85bb23ed90365","lazyView2With","placeholderId","lastRequest","$94d815a1121cade4$export$94c509df74a3b363","$58d3e2ba17b334ff$export$b3890eb0ae9dca99","$94d815a1121cade4$export$5acf115f7e181dad","totalTime","otherSideEffects","timeToSimulate","numSteps","move","$a31a416e6f2d4f0c$export$71ce871f6f33a8ed","simulatedTime","newTime","LeftOverTime","LastTracer","Settings","$a31a416e6f2d4f0c$export$ff0e5cff215258a6","traceInterval","timeSinceLastTracer","tracerCount","nextTracerTime","alpha","lerpDelta","$19f465178eaca5cf$export$9dc2380d79227d57","$a31a416e6f2d4f0c$export$adfc2d46a34209cd","$19f465178eaca5cf$export$844070a3300829e8","Projectile","$a31a416e6f2d4f0c$export$a14d2eee3677f468","$19f465178eaca5cf$export$f6f851ce0ad3cedc","$19f465178eaca5cf$export$6fa7c9d3ccc05a83","$19f465178eaca5cf$export$2ef532bfc5d0a882","Running","lastFrame","window$","startTime","last","$045db5c63b7ab52c$export$f69c19e57285b83a","opt","arg00","$045db5c63b7ab52c$export$592dbd515a49cf1b","$045db5c63b7ab52c$export$623ab1da75e685de","unitName","subscript","isChecked","running","unit","$d8dfa0c1cbf2ddc5$export$416377faaa02a446","playpause","$d8dfa0c1cbf2ddc5$export$93fa76c5c3d5da13","$8a694b9bafcd01b7$export$b2631cbff4082f00","title","marginLeft","marginTop","$045db5c63b7ab52c$export$523c0b569236b342","open","$045db5c63b7ab52c$export$d1307b0350e2807f","withSub","arg10","superscript","checkbox","$045db5c63b7ab52c$export$b07e517d22efa1ca","arg0","name_5","name_7","init","runWith","$94d815a1121cade4$export$bf201e6f292f34fd","projectileLength","$a31a416e6f2d4f0c$export$c72f6eaae7b9adff","$19f465178eaca5cf$export$95d205c35edab241","$19f465178eaca5cf$export$10591dd3dfac2f05","inputRecord","newVelocity","inputRecord_1","newPosition","inputRecord_2","inputRecord_3","inputRecord_4","inputRecord_5","hidden","ShowTrajectory","inputRecord_7","ShowVelocityMarker","inputRecord_8","trace","timeStep","TraceInterval","inputRecord_9","inputRecord_10","inputRecord_11","startAnimation","$cb9278315c059674$export$3de07bdccee76bc5","simulateAndDraw","$d8dfa0c1cbf2ddc5$export$52c5ac27195ad517","$427d8430ee689fbf$export$47670ffaaf1bab62","tupledArg_1","controls","$045db5c63b7ab52c$export$22e71493230620ce","tupledArg_2","tupledArg_3","$045db5c63b7ab52c$export$3249975c25a54576","tupledArg_4","$a31a416e6f2d4f0c$export$ce43f2b68c9f0467","$f8c6b14badaa74d3$export$8b5266efefde31a6","withReactBatchedUsing","$427d8430ee689fbf$export$c1ca94126b5caa96"],"version":3,"file":"index.d95dae97.js.map"}