{"version":3,"file":"app.22cf5c49f597f274ce37.js","mappings":"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","sources":["webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Util.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Types.js","webpack://projectile-physics-simulation/./build/production/Physics.js","webpack://projectile-physics-simulation/./build/production/Graphics.js","webpack://projectile-physics-simulation/./node_modules/preact/src/constants.js","webpack://projectile-physics-simulation/./node_modules/preact/src/util.js","webpack://projectile-physics-simulation/./node_modules/preact/src/options.js","webpack://projectile-physics-simulation/./node_modules/preact/src/create-element.js","webpack://projectile-physics-simulation/./node_modules/preact/src/component.js","webpack://projectile-physics-simulation/./node_modules/preact/src/diff/children.js","webpack://projectile-physics-simulation/./node_modules/preact/src/diff/props.js","webpack://projectile-physics-simulation/./node_modules/preact/src/diff/index.js","webpack://projectile-physics-simulation/./node_modules/preact/src/render.js","webpack://projectile-physics-simulation/./node_modules/preact/src/diff/catch-error.js","webpack://projectile-physics-simulation/./node_modules/preact/devtools/src/devtools.js","webpack://projectile-physics-simulation/./node_modules/preact/debug/src/check-props.js","webpack://projectile-physics-simulation/./node_modules/preact/debug/src/component-stack.js","webpack://projectile-physics-simulation/./node_modules/preact/debug/src/debug.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Date.js","webpack://projectile-physics-simulation/./node_modules/preact/debug/src/constants.js","webpack://projectile-physics-simulation/./node_modules/preact/debug/src/util.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Numeric.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/String.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Array.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/List.js","webpack://projectile-physics-simulation/./node_modules/preact/hooks/src/index.js","webpack://projectile-physics-simulation/./node_modules/preact/compat/src/util.js","webpack://projectile-physics-simulation/./node_modules/preact/compat/src/PureComponent.js","webpack://projectile-physics-simulation/./node_modules/preact/compat/src/forwardRef.js","webpack://projectile-physics-simulation/./node_modules/preact/compat/src/suspense.js","webpack://projectile-physics-simulation/./node_modules/preact/compat/src/suspense-list.js","webpack://projectile-physics-simulation/./node_modules/preact/compat/src/render.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.React.7.4.3/Fable.React.Props.fs.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Option.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Seq.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/FSharp.Core.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/MapUtil.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Double.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.React.7.4.3/Fable.React.Extensions.fs.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.Elmish.React.3.0.1/common.fs.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.Elmish.3.1.0/cmd.fs.js","webpack://projectile-physics-simulation/./build/production/fable_modules/fable-library.3.7.6/Range.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.Elmish.3.1.0/ring.fs.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.Elmish.3.1.0/program.fs.js","webpack://projectile-physics-simulation/./build/production/App.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.Elmish.React.3.0.1/react.fs.js","webpack://projectile-physics-simulation/./build/production/fable_modules/Fable.Elmish.3.1.0/prelude.fs.js"],"sourcesContent":["// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function disposeSafe(x) {\n    if (isDisposable(x)) {\n        x.Dispose();\n    }\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED = Symbol(\"curried\");\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    const uncurried = (...args) => {\n        let res = f;\n        for (let i = 0; i < arity; i++) {\n            res = res(args[i]);\n        }\n        return res;\n    };\n    uncurried[CURRIED] = f;\n    return uncurried;\n}\nfunction _curry(args, arity, f) {\n    return (arg) => arity === 1\n        ? f(...args.concat([arg]))\n        // Note it's important to generate a new args array every time\n        // because a partially applied function can be run multiple times\n        : _curry(args.concat([arg]), arity - 1, f);\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    else if (CURRIED in f) {\n        return f[CURRIED];\n    }\n    else {\n        return _curry([], arity, f);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED in f) {\n        f = f[CURRIED];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        return _curry(args, arity, f);\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { equals } from \"./fable_modules/fable-library.3.7.6/Util.js\";\nimport { Record } from \"./fable_modules/fable-library.3.7.6/Types.js\";\nimport { bool_type, record_type, obj_type, float64_type, int32_type } from \"./fable_modules/fable-library.3.7.6/Reflection.js\";\n\nexport function Vector2Module_zero() {\n    return [0, 0];\n}\n\nexport function Vector2Module_ofMagnitudeDegrees(magnitude, degrees) {\n    return [magnitude * Math.cos((degrees * 3.141592653589793) / 180), magnitude * Math.sin((degrees * 3.141592653589793) / 180)];\n}\n\nexport function Vector2Module_magnitude(vector) {\n    let _arg2, _arg1;\n    return Math.sqrt((_arg2 = vector, (_arg1 = vector, (_arg2[0] * _arg1[0]) + (_arg2[1] * _arg1[1]))));\n}\n\nexport function Vector2Module_normalizeUnsafe(vector) {\n    const _arg1 = vector;\n    const scalar = Vector2Module_magnitude(vector);\n    return [_arg1[0] / scalar, _arg1[1] / scalar];\n}\n\nexport function Vector2Module_normalize(vector) {\n    if (equals(vector, Vector2Module_zero())) {\n        return Vector2Module_zero();\n    }\n    else {\n        return Vector2Module_normalizeUnsafe(vector);\n    }\n}\n\nexport function Vector2__get_X(this$) {\n    return this$[0];\n}\n\nexport function Vector2__get_Y(this$) {\n    return this$[1];\n}\n\nexport class Body extends Record {\n    constructor(Width, Height, Mass, Position, Velocity, Acceleration, PrevAcceleration) {\n        super();\n        this.Width = (Width | 0);\n        this.Height = (Height | 0);\n        this.Mass = Mass;\n        this.Position = Position;\n        this.Velocity = Velocity;\n        this.Acceleration = Acceleration;\n        this.PrevAcceleration = PrevAcceleration;\n    }\n}\n\nexport function Body$reflection() {\n    return record_type(\"ProjectilePhysicsSimulation.Physics.Body\", [], Body, () => [[\"Width\", int32_type], [\"Height\", int32_type], [\"Mass\", float64_type], [\"Position\", obj_type], [\"Velocity\", obj_type], [\"Acceleration\", obj_type], [\"PrevAcceleration\", obj_type]]);\n}\n\nexport const BodyModule_minMass = 5E-324 * 1;\n\nexport function BodyModule_center(body) {\n    return [(body.Width * 0.5) + Vector2__get_X(body.Position), (body.Height * 0.5) + Vector2__get_Y(body.Position)];\n}\n\nexport class Settings extends Record {\n    constructor(InitialSpeed, InitialAngle, InitialPosition, AccelerationGravity, DragConstant, ShowTrajectory, ShowVelocityMarker, TraceInterval, SimulationSpeed, JumpStep) {\n        super();\n        this.InitialSpeed = InitialSpeed;\n        this.InitialAngle = InitialAngle;\n        this.InitialPosition = InitialPosition;\n        this.AccelerationGravity = AccelerationGravity;\n        this.DragConstant = DragConstant;\n        this.ShowTrajectory = ShowTrajectory;\n        this.ShowVelocityMarker = ShowVelocityMarker;\n        this.TraceInterval = TraceInterval;\n        this.SimulationSpeed = SimulationSpeed;\n        this.JumpStep = JumpStep;\n    }\n}\n\nexport function Settings$reflection() {\n    return record_type(\"ProjectilePhysicsSimulation.Physics.Settings\", [], Settings, () => [[\"InitialSpeed\", float64_type], [\"InitialAngle\", float64_type], [\"InitialPosition\", obj_type], [\"AccelerationGravity\", float64_type], [\"DragConstant\", float64_type], [\"ShowTrajectory\", bool_type], [\"ShowVelocityMarker\", bool_type], [\"TraceInterval\", float64_type], [\"SimulationSpeed\", float64_type], [\"JumpStep\", float64_type]]);\n}\n\nexport class Simulation extends Record {\n    constructor(Projectile, Running, Time, LastTracer, LeftOverTime, Settings) {\n        super();\n        this.Projectile = Projectile;\n        this.Running = Running;\n        this.Time = Time;\n        this.LastTracer = LastTracer;\n        this.LeftOverTime = LeftOverTime;\n        this.Settings = Settings;\n    }\n}\n\nexport function Simulation$reflection() {\n    return record_type(\"ProjectilePhysicsSimulation.Physics.Simulation\", [], Simulation, () => [[\"Projectile\", Body$reflection()], [\"Running\", bool_type], [\"Time\", float64_type], [\"LastTracer\", float64_type], [\"LeftOverTime\", float64_type], [\"Settings\", Settings$reflection()]]);\n}\n\nexport const timeStep = 1 / 120;\n\nexport const SimulationModule_minSpeed = 0;\n\nexport const SimulationModule_maxSpeed = 10000;\n\nexport const SimulationModule_minJumpStep = timeStep;\n\nexport const SimulationModule_maxJumpStep = 10000;\n\nexport const SimulationModule_minDragConstant = 0;\n\nexport const SimulationModule_minTraceInterval = timeStep - (timeStep / 1000000000);\n\nexport function SimulationModule_started(sim) {\n    return sim.Time > 0;\n}\n\nfunction SimulationModule_applyGravity(gravity, _arg1) {\n    return [_arg1[0], _arg1[1] + gravity];\n}\n\nfunction SimulationModule_accclerationDrag(constant, velocity, mass) {\n    let _arg2, _arg1;\n    let _arg1_2;\n    const scalar = (-constant) * ((_arg2 = velocity, (_arg1 = velocity, (_arg2[0] * _arg1[0]) + (_arg2[1] * _arg1[1]))));\n    const _arg1_1 = Vector2Module_normalize(velocity);\n    _arg1_2 = [scalar * _arg1_1[0], scalar * _arg1_1[1]];\n    const scalar_1 = mass;\n    return [_arg1_2[0] / scalar_1, _arg1_2[1] / scalar_1];\n}\n\nexport function SimulationModule_acceleration(settings, body) {\n    return SimulationModule_applyGravity(settings.AccelerationGravity, SimulationModule_accclerationDrag(settings.DragConstant, body.Velocity, body.Mass));\n}\n\nfunction SimulationModule_move(body, time, newAcceleration) {\n    let _arg2_1, _arg1_4, _arg2_4, _arg1_11, _arg1_10, scalar_5, _arg1_9, _arg2_3, _arg2_2, scalar_3, _arg1_5, _arg1_7, scalar_4, _arg1_6, _arg1_8, scalar_6;\n    let deltaPosition;\n    let _arg2;\n    const _arg1 = body.Velocity;\n    const scalar = time;\n    _arg2 = [scalar * _arg1[0], scalar * _arg1[1]];\n    let _arg1_3;\n    let _arg1_2;\n    const scalar_1 = 1 / 6;\n    const _arg1_1 = body.Acceleration;\n    _arg1_2 = [scalar_1 * _arg1_1[0], scalar_1 * _arg1_1[1]];\n    const scalar_2 = time * time;\n    _arg1_3 = [scalar_2 * _arg1_2[0], scalar_2 * _arg1_2[1]];\n    deltaPosition = [_arg2[0] + _arg1_3[0], _arg2[1] + _arg1_3[1]];\n    return [new Body(body.Width, body.Height, body.Mass, (_arg2_1 = body.Position, (_arg1_4 = deltaPosition, [_arg2_1[0] + _arg1_4[0], _arg2_1[1] + _arg1_4[1]])), (_arg2_4 = body.Velocity, (_arg1_11 = ((_arg1_10 = ((scalar_5 = (1 / 6), (_arg1_9 = ((_arg2_3 = ((_arg2_2 = ((scalar_3 = 2, (_arg1_5 = newAcceleration, [scalar_3 * _arg1_5[0], scalar_3 * _arg1_5[1]]))), (_arg1_7 = ((scalar_4 = 5, (_arg1_6 = body.Acceleration, [scalar_4 * _arg1_6[0], scalar_4 * _arg1_6[1]]))), [_arg2_2[0] + _arg1_7[0], _arg2_2[1] + _arg1_7[1]]))), (_arg1_8 = body.PrevAcceleration, [_arg2_3[0] - _arg1_8[0], _arg2_3[1] - _arg1_8[1]]))), [scalar_5 * _arg1_9[0], scalar_5 * _arg1_9[1]]))), (scalar_6 = time, [scalar_6 * _arg1_10[0], scalar_6 * _arg1_10[1]]))), [_arg2_4[0] + _arg1_11[0], _arg2_4[1] + _arg1_11[1]])), newAcceleration, body.Acceleration), deltaPosition];\n}\n\nexport function SimulationModule_simulate(otherSideEffects, sim, timeToSimulate) {\n    let value;\n    const numSteps = (~(~((value = (timeToSimulate / timeStep), Math.floor(value))))) | 0;\n    let projectile = sim.Projectile;\n    for (let step = 1; step <= numSteps; step++) {\n        const patternInput = SimulationModule_move(projectile, timeStep, SimulationModule_acceleration(sim.Settings, projectile));\n        otherSideEffects(projectile, patternInput[1], timeStep * step);\n        projectile = patternInput[0];\n    }\n    const simulatedTime = timeStep * numSteps;\n    const newTime = sim.Time + simulatedTime;\n    const LeftOverTime = timeToSimulate - simulatedTime;\n    const LastTracer = newTime - ((newTime - sim.LastTracer) % sim.Settings.TraceInterval);\n    return new Simulation(projectile, sim.Running, newTime, LastTracer, LeftOverTime, sim.Settings);\n}\n\nexport function SimulationModule_initialProjectile(settings, projectile) {\n    return new Body(projectile.Width, projectile.Height, projectile.Mass, settings.InitialPosition, Vector2Module_ofMagnitudeDegrees(settings.InitialSpeed, settings.InitialAngle), SimulationModule_acceleration(settings, projectile), Vector2Module_zero());\n}\n\nexport function SimulationModule_withSettings(settings, sim) {\n    return new Simulation(SimulationModule_initialProjectile(settings, sim.Projectile), sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, settings);\n}\n\nexport const SimulationModule_initial = (() => {\n    let projectileLength;\n    const settings = new Settings(90, 60, [15, 15], -9.8, 0, true, true, 1, 2.5, 1);\n    return new Simulation((projectileLength = 25, SimulationModule_initialProjectile(settings, new Body(projectileLength, projectileLength, 1000, Vector2Module_zero(), Vector2Module_zero(), Vector2Module_zero(), Vector2Module_zero()))), false, 0, 0, 0, settings);\n})();\n\n","import { SimulationModule_initial, BodyModule_center, timeStep, Vector2__get_Y, Vector2__get_X } from \"./Physics.js\";\n\nconst phi = (1 + Math.sqrt(5)) / 2;\n\nexport const width = window.screen.availWidth / phi;\n\nexport const height = window.screen.availHeight * 0.7;\n\nfunction setupCanvas(id) {\n    const canvas = document.getElementById(id);\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext('2d');\n    context.translate(0, height);\n    return [canvas, context];\n}\n\nconst patternInput$004024 = setupCanvas(\"trajectoryCanvas\");\n\nexport const trajectoryContext = patternInput$004024[1];\n\nexport const trajectoryCanvas = patternInput$004024[0];\n\nconst patternInput$004025$002D1 = setupCanvas(\"bodyCanvas\");\n\nexport const bodyContext = patternInput$004025$002D1[1];\n\nexport const bodyCanvas = patternInput$004025$002D1[0];\n\nconst patternInput$004026$002D2 = setupCanvas(\"velocityCanvas\");\n\nexport const velocityContext = patternInput$004026$002D2[1];\n\nexport const velocityCanvas = patternInput$004026$002D2[0];\n\ntrajectoryContext.fillStyle = \"black\";\n\nbodyContext.fillStyle = \"blue\";\n\nvelocityContext.strokeStyle = \"red\";\n\nfunction clear(context) {\n    context.clearRect(0, -context.canvas.height, context.canvas.width, context.canvas.height);\n}\n\nexport function drawTracer(point) {\n    trajectoryContext.beginPath();\n    trajectoryContext.arc(Vector2__get_X(point), -Vector2__get_Y(point), 2.5, 0, 3.141592653589793 * 2);\n    trajectoryContext.closePath();\n    trajectoryContext.fill();\n}\n\nfunction lerpDelta(a, delta, alpha) {\n    const _arg2 = a;\n    let _arg1_1;\n    const scalar = alpha;\n    const _arg1 = delta;\n    _arg1_1 = [scalar * _arg1[0], scalar * _arg1[1]];\n    return [_arg2[0] + _arg1_1[0], _arg2[1] + _arg1_1[1]];\n}\n\nexport function maybeDrawTracer(sim) {\n    const timeSinceLastTracer = sim.Time - sim.LastTracer;\n    let tracerCount = 1;\n    let nextTracerTime = sim.Settings.TraceInterval - timeSinceLastTracer;\n    return (projectile) => ((deltaPosition) => ((time) => {\n        let alpha;\n        if (time >= nextTracerTime) {\n            drawTracer((alpha = ((timeStep - (time - nextTracerTime)) / timeStep), lerpDelta(BodyModule_center(projectile), deltaPosition, alpha)));\n            tracerCount = ((tracerCount + 1) | 0);\n            nextTracerTime = ((sim.Settings.TraceInterval * tracerCount) - timeSinceLastTracer);\n        }\n    }));\n}\n\nexport function resetTrajectory(projectile) {\n    clear(trajectoryContext);\n    drawTracer(BodyModule_center(projectile));\n}\n\nlet lastBody = SimulationModule_initial.Projectile;\n\nlet lastVelocityMaker = SimulationModule_initial.Projectile;\n\nfunction clearBody(projectile) {\n    bodyContext.clearRect(Vector2__get_X(projectile.Position) - 1, ((-Vector2__get_Y(projectile.Position)) - projectile.Height) - 1, projectile.Width + 2, projectile.Height + 2);\n}\n\nfunction drawBody(projectile) {\n    bodyContext.fillRect(Vector2__get_X(projectile.Position), (-Vector2__get_Y(projectile.Position)) - projectile.Height, projectile.Width, projectile.Height);\n}\n\nexport function redrawBody(projectile) {\n    clearBody(lastBody);\n    drawBody(projectile);\n    lastBody = projectile;\n}\n\nfunction clearVelocityMarker(projectile) {\n    const c = BodyModule_center(projectile);\n    const v = projectile.Velocity;\n    velocityContext.clearRect((Vector2__get_X(c) - Math.abs(Vector2__get_X(v))) - 1, ((-Vector2__get_Y(c)) - Math.abs(Vector2__get_Y(v))) - 1, (2 * Math.abs(Vector2__get_X(v))) + 2, (2 * Math.abs(Vector2__get_Y(v))) + 2);\n}\n\nfunction drawVelocityMarker(projectile) {\n    velocityContext.beginPath();\n    const c = BodyModule_center(projectile);\n    velocityContext.moveTo(Vector2__get_X(c), -Vector2__get_Y(c));\n    velocityContext.lineTo(Vector2__get_X(c) + Vector2__get_X(projectile.Velocity), (-Vector2__get_Y(c)) - Vector2__get_Y(projectile.Velocity));\n    velocityContext.closePath();\n    velocityContext.stroke();\n}\n\nexport function redrawVelocityMarker(projectile) {\n    clearVelocityMarker(lastVelocityMaker);\n    drawVelocityMarker(projectile);\n    lastVelocityMaker = projectile;\n}\n\nexport function redrawAll(projectile) {\n    redrawBody(projectile);\n    redrawVelocityMarker(projectile);\n    resetTrajectory(projectile);\n}\n\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options, Fragment, Component } from 'preact';\n\nexport function initDevTools() {\n\tif (typeof window != 'undefined' && window.__PREACT_DEVTOOLS__) {\n\t\twindow.__PREACT_DEVTOOLS__.attachPreact('10.6.6', options, {\n\t\t\tFragment,\n\t\t\tComponent\n\t\t});\n\t}\n}\n","const ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nlet loggedTypeFailures = {};\n\n/**\n * Reset the history of which prop type warnings have been logged.\n */\nexport function resetPropWarnings() {\n\tloggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * Adapted from https://github.com/facebook/prop-types/blob/master/checkPropTypes.js\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n */\nexport function checkPropTypes(\n\ttypeSpecs,\n\tvalues,\n\tlocation,\n\tcomponentName,\n\tgetStack\n) {\n\tObject.keys(typeSpecs).forEach(typeSpecName => {\n\t\tlet error;\n\t\ttry {\n\t\t\terror = typeSpecs[typeSpecName](\n\t\t\t\tvalues,\n\t\t\t\ttypeSpecName,\n\t\t\t\tcomponentName,\n\t\t\t\tlocation,\n\t\t\t\tnull,\n\t\t\t\tReactPropTypesSecret\n\t\t\t);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\t\tif (error && !(error.message in loggedTypeFailures)) {\n\t\t\tloggedTypeFailures[error.message] = true;\n\t\t\tconsole.error(\n\t\t\t\t`Failed ${location} type: ${error.message}${(getStack &&\n\t\t\t\t\t`\\n${getStack()}`) ||\n\t\t\t\t\t''}`\n\t\t\t);\n\t\t}\n\t});\n}\n","import { options, Fragment } from 'preact';\n\n/**\n * Get human readable name of the component/dom node\n * @param {import('./internal').VNode} vnode\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function getDisplayName(vnode) {\n\tif (vnode.type === Fragment) {\n\t\treturn 'Fragment';\n\t} else if (typeof vnode.type == 'function') {\n\t\treturn vnode.type.displayName || vnode.type.name;\n\t} else if (typeof vnode.type == 'string') {\n\t\treturn vnode.type;\n\t}\n\n\treturn '#text';\n}\n\n/**\n * Used to keep track of the currently rendered `vnode` and print it\n * in debug messages.\n */\nlet renderStack = [];\n\n/**\n * Keep track of the current owners. An owner describes a component\n * which was responsible to render a specific `vnode`. This exclude\n * children that are passed via `props.children`, because they belong\n * to the parent owner.\n *\n * ```jsx\n * const Foo = props => <div>{props.children}</div> // div's owner is Foo\n * const Bar = props => {\n *   return (\n *     <Foo><span /></Foo> // Foo's owner is Bar, span's owner is Bar\n *   )\n * }\n * ```\n *\n * Note: A `vnode` may be hoisted to the root scope due to compiler\n * optimiztions. In these cases the `_owner` will be different.\n */\nlet ownerStack = [];\n\n/**\n * Get the currently rendered `vnode`\n * @returns {import('./internal').VNode | null}\n */\nexport function getCurrentVNode() {\n\treturn renderStack.length > 0 ? renderStack[renderStack.length - 1] : null;\n}\n\n/**\n * If the user doesn't have `@babel/plugin-transform-react-jsx-source`\n * somewhere in his tool chain we can't print the filename and source\n * location of a component. In that case we just omit that, but we'll\n * print a helpful message to the console, notifying the user of it.\n */\nlet hasBabelPlugin = false;\n\n/**\n * Check if a `vnode` is a possible owner.\n * @param {import('./internal').VNode} vnode\n */\nfunction isPossibleOwner(vnode) {\n\treturn typeof vnode.type == 'function' && vnode.type != Fragment;\n}\n\n/**\n * Return the component stack that was captured up to this point.\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function getOwnerStack(vnode) {\n\tconst stack = [vnode];\n\tlet next = vnode;\n\twhile (next._owner != null) {\n\t\tstack.push(next._owner);\n\t\tnext = next._owner;\n\t}\n\n\treturn stack.reduce((acc, owner) => {\n\t\tacc += `  in ${getDisplayName(owner)}`;\n\n\t\tconst source = owner.__source;\n\t\tif (source) {\n\t\t\tacc += ` (at ${source.fileName}:${source.lineNumber})`;\n\t\t} else if (!hasBabelPlugin) {\n\t\t\thasBabelPlugin = true;\n\t\t\tconsole.warn(\n\t\t\t\t'Add @babel/plugin-transform-react-jsx-source to get a more detailed component stack. Note that you should not add it to production builds of your App for bundle size reasons.'\n\t\t\t);\n\t\t}\n\n\t\treturn (acc += '\\n');\n\t}, '');\n}\n\n/**\n * Setup code to capture the component trace while rendering. Note that\n * we cannot simply traverse `vnode._parent` upwards, because we have some\n * debug messages for `this.setState` where the `vnode` is `undefined`.\n */\nexport function setupComponentStack() {\n\tlet oldDiff = options._diff;\n\tlet oldDiffed = options.diffed;\n\tlet oldRoot = options._root;\n\tlet oldVNode = options.vnode;\n\tlet oldRender = options._render;\n\n\toptions.diffed = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\townerStack.pop();\n\t\t}\n\t\trenderStack.pop();\n\t\tif (oldDiffed) oldDiffed(vnode);\n\t};\n\n\toptions._diff = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\trenderStack.push(vnode);\n\t\t}\n\t\tif (oldDiff) oldDiff(vnode);\n\t};\n\n\toptions._root = (vnode, parent) => {\n\t\townerStack = [];\n\t\tif (oldRoot) oldRoot(vnode, parent);\n\t};\n\n\toptions.vnode = vnode => {\n\t\tvnode._owner =\n\t\t\townerStack.length > 0 ? ownerStack[ownerStack.length - 1] : null;\n\t\tif (oldVNode) oldVNode(vnode);\n\t};\n\n\toptions._render = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\townerStack.push(vnode);\n\t\t}\n\n\t\tif (oldRender) oldRender(vnode);\n\t};\n}\n","import { checkPropTypes } from './check-props';\nimport { options, Component } from 'preact';\nimport {\n\tELEMENT_NODE,\n\tDOCUMENT_NODE,\n\tDOCUMENT_FRAGMENT_NODE\n} from './constants';\nimport {\n\tgetOwnerStack,\n\tsetupComponentStack,\n\tgetCurrentVNode,\n\tgetDisplayName\n} from './component-stack';\nimport { assign } from './util';\n\nconst isWeakMapSupported = typeof WeakMap == 'function';\n\nfunction getClosestDomNodeParent(parent) {\n\tif (!parent) return {};\n\tif (typeof parent.type == 'function') {\n\t\treturn getClosestDomNodeParent(parent._parent);\n\t}\n\treturn parent;\n}\n\nexport function initDebug() {\n\tsetupComponentStack();\n\n\tlet hooksAllowed = false;\n\n\t/* eslint-disable no-console */\n\tlet oldBeforeDiff = options._diff;\n\tlet oldDiffed = options.diffed;\n\tlet oldVnode = options.vnode;\n\tlet oldCatchError = options._catchError;\n\tlet oldRoot = options._root;\n\tlet oldHook = options._hook;\n\tconst warnedComponents = !isWeakMapSupported\n\t\t? null\n\t\t: {\n\t\t\t\tuseEffect: new WeakMap(),\n\t\t\t\tuseLayoutEffect: new WeakMap(),\n\t\t\t\tlazyPropTypes: new WeakMap()\n\t\t  };\n\tconst deprecations = [];\n\n\toptions._catchError = (error, vnode, oldVNode) => {\n\t\tlet component = vnode && vnode._component;\n\t\tif (component && typeof error.then == 'function') {\n\t\t\tconst promise = error;\n\t\t\terror = new Error(\n\t\t\t\t`Missing Suspense. The throwing component was: ${getDisplayName(vnode)}`\n\t\t\t);\n\n\t\t\tlet parent = vnode;\n\t\t\tfor (; parent; parent = parent._parent) {\n\t\t\t\tif (parent._component && parent._component._childDidSuspend) {\n\t\t\t\t\terror = promise;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// We haven't recovered and we know at this point that there is no\n\t\t\t// Suspense component higher up in the tree\n\t\t\tif (error instanceof Error) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\toldCatchError(error, vnode, oldVNode);\n\n\t\t\t// when an error was handled by an ErrorBoundary we will nontheless emit an error\n\t\t\t// event on the window object. This is to make up for react compatibility in dev mode\n\t\t\t// and thus make the Next.js dev overlay work.\n\t\t\tif (typeof error.then != 'function') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\toptions._root = (vnode, parentNode) => {\n\t\tif (!parentNode) {\n\t\t\tthrow new Error(\n\t\t\t\t'Undefined parent passed to render(), this is the second argument.\\n' +\n\t\t\t\t\t'Check if the element is available in the DOM/has the correct id.'\n\t\t\t);\n\t\t}\n\n\t\tlet isValid;\n\t\tswitch (parentNode.nodeType) {\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\tcase DOCUMENT_NODE:\n\t\t\t\tisValid = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tisValid = false;\n\t\t}\n\n\t\tif (!isValid) {\n\t\t\tlet componentName = getDisplayName(vnode);\n\t\t\tthrow new Error(\n\t\t\t\t`Expected a valid HTML node as a second argument to render.\tReceived ${parentNode} instead: render(<${componentName} />, ${parentNode});`\n\t\t\t);\n\t\t}\n\n\t\tif (oldRoot) oldRoot(vnode, parentNode);\n\t};\n\n\toptions._diff = vnode => {\n\t\tlet { type, _parent: parent } = vnode;\n\t\tlet parentVNode = getClosestDomNodeParent(parent);\n\n\t\thooksAllowed = true;\n\n\t\tif (type === undefined) {\n\t\t\tthrow new Error(\n\t\t\t\t'Undefined component passed to createElement()\\n\\n' +\n\t\t\t\t\t'You likely forgot to export your component or might have mixed up default and named imports' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type != null && typeof type == 'object') {\n\t\t\tif (type._children !== undefined && type._dom !== undefined) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Invalid type passed to createElement(): ${type}\\n\\n` +\n\t\t\t\t\t\t'Did you accidentally pass a JSX literal as JSX twice?\\n\\n' +\n\t\t\t\t\t\t`  let My${getDisplayName(vnode)} = ${serializeVNode(type)};\\n` +\n\t\t\t\t\t\t`  let vnode = <My${getDisplayName(vnode)} />;\\n\\n` +\n\t\t\t\t\t\t'This usually happens when you export a JSX literal and not the component.' +\n\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid type passed to createElement(): ' +\n\t\t\t\t\t(Array.isArray(type) ? 'array' : type)\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\t(type === 'thead' || type === 'tfoot' || type === 'tbody') &&\n\t\t\tparentVNode.type !== 'table'\n\t\t) {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <thead/tbody/tfoot> should have a <table> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (\n\t\t\ttype === 'tr' &&\n\t\t\tparentVNode.type !== 'thead' &&\n\t\t\tparentVNode.type !== 'tfoot' &&\n\t\t\tparentVNode.type !== 'tbody' &&\n\t\t\tparentVNode.type !== 'table'\n\t\t) {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <tr> should have a <thead/tbody/tfoot/table> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type === 'td' && parentVNode.type !== 'tr') {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <td> should have a <tr> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type === 'th' && parentVNode.type !== 'tr') {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <th> should have a <tr>.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tvnode.ref !== undefined &&\n\t\t\ttypeof vnode.ref != 'function' &&\n\t\t\ttypeof vnode.ref != 'object' &&\n\t\t\t!('$$typeof' in vnode) // allow string refs when preact-compat is installed\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t`Component's \"ref\" property should be a function, or an object created ` +\n\t\t\t\t\t`by createRef(), but got [${typeof vnode.ref}] instead\\n` +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t}\n\n\t\tif (typeof vnode.type == 'string') {\n\t\t\tfor (const key in vnode.props) {\n\t\t\t\tif (\n\t\t\t\t\tkey[0] === 'o' &&\n\t\t\t\t\tkey[1] === 'n' &&\n\t\t\t\t\ttypeof vnode.props[key] != 'function' &&\n\t\t\t\t\tvnode.props[key] != null\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Component's \"${key}\" property should be a function, ` +\n\t\t\t\t\t\t\t`but got [${typeof vnode.props[key]}] instead\\n` +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check prop-types if available\n\t\tif (typeof vnode.type == 'function' && vnode.type.propTypes) {\n\t\t\tif (\n\t\t\t\tvnode.type.displayName === 'Lazy' &&\n\t\t\t\twarnedComponents &&\n\t\t\t\t!warnedComponents.lazyPropTypes.has(vnode.type)\n\t\t\t) {\n\t\t\t\tconst m =\n\t\t\t\t\t'PropTypes are not supported on lazy(). Use propTypes on the wrapped component itself. ';\n\t\t\t\ttry {\n\t\t\t\t\tconst lazyVNode = vnode.type();\n\t\t\t\t\twarnedComponents.lazyPropTypes.set(vnode.type, true);\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\tm + `Component wrapped in lazy() is ${getDisplayName(lazyVNode)}`\n\t\t\t\t\t);\n\t\t\t\t} catch (promise) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\tm + \"We will log the wrapped component's name once it is loaded.\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet values = vnode.props;\n\t\t\tif (vnode.type._forwarded) {\n\t\t\t\tvalues = assign({}, values);\n\t\t\t\tdelete values.ref;\n\t\t\t}\n\n\t\t\tcheckPropTypes(\n\t\t\t\tvnode.type.propTypes,\n\t\t\t\tvalues,\n\t\t\t\t'prop',\n\t\t\t\tgetDisplayName(vnode),\n\t\t\t\t() => getOwnerStack(vnode)\n\t\t\t);\n\t\t}\n\n\t\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n\t};\n\n\toptions._hook = (comp, index, type) => {\n\t\tif (!comp || !hooksAllowed) {\n\t\t\tthrow new Error('Hook can only be invoked from render methods.');\n\t\t}\n\n\t\tif (oldHook) oldHook(comp, index, type);\n\t};\n\n\t// Ideally we'd want to print a warning once per component, but we\n\t// don't have access to the vnode that triggered it here. As a\n\t// compromise and to avoid flooding the console with warnings we\n\t// print each deprecation warning only once.\n\tconst warn = (property, message) => ({\n\t\tget() {\n\t\t\tconst key = 'get' + property + message;\n\t\t\tif (deprecations && deprecations.indexOf(key) < 0) {\n\t\t\t\tdeprecations.push(key);\n\t\t\t\tconsole.warn(`getting vnode.${property} is deprecated, ${message}`);\n\t\t\t}\n\t\t},\n\t\tset() {\n\t\t\tconst key = 'set' + property + message;\n\t\t\tif (deprecations && deprecations.indexOf(key) < 0) {\n\t\t\t\tdeprecations.push(key);\n\t\t\t\tconsole.warn(`setting vnode.${property} is not allowed, ${message}`);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst deprecatedAttributes = {\n\t\tnodeName: warn('nodeName', 'use vnode.type'),\n\t\tattributes: warn('attributes', 'use vnode.props'),\n\t\tchildren: warn('children', 'use vnode.props.children')\n\t};\n\n\tconst deprecatedProto = Object.create({}, deprecatedAttributes);\n\n\toptions.vnode = vnode => {\n\t\tconst props = vnode.props;\n\t\tif (\n\t\t\tvnode.type !== null &&\n\t\t\tprops != null &&\n\t\t\t('__source' in props || '__self' in props)\n\t\t) {\n\t\t\tconst newProps = (vnode.props = {});\n\t\t\tfor (let i in props) {\n\t\t\t\tconst v = props[i];\n\t\t\t\tif (i === '__source') vnode.__source = v;\n\t\t\t\telse if (i === '__self') vnode.__self = v;\n\t\t\t\telse newProps[i] = v;\n\t\t\t}\n\t\t}\n\n\t\t// eslint-disable-next-line\n\t\tvnode.__proto__ = deprecatedProto;\n\t\tif (oldVnode) oldVnode(vnode);\n\t};\n\n\toptions.diffed = vnode => {\n\t\t// Check if the user passed plain objects as children. Note that we cannot\n\t\t// move this check into `options.vnode` because components can receive\n\t\t// children in any shape they want (e.g.\n\t\t// `<MyJSONFormatter>{{ foo: 123, bar: \"abc\" }}</MyJSONFormatter>`).\n\t\t// Putting this check in `options.diffed` ensures that\n\t\t// `vnode._children` is set and that we only validate the children\n\t\t// that were actually rendered.\n\t\tif (vnode._children) {\n\t\t\tvnode._children.forEach(child => {\n\t\t\t\tif (child && child.type === undefined) {\n\t\t\t\t\t// Remove internal vnode keys that will always be patched\n\t\t\t\t\tdelete child._parent;\n\t\t\t\t\tdelete child._depth;\n\t\t\t\t\tconst keys = Object.keys(child).join(',');\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Objects are not valid as a child. Encountered an object with the keys {${keys}}.` +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\thooksAllowed = false;\n\n\t\tif (oldDiffed) oldDiffed(vnode);\n\n\t\tif (vnode._children != null) {\n\t\t\tconst keys = [];\n\t\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\t\tconst child = vnode._children[i];\n\t\t\t\tif (!child || child.key == null) continue;\n\n\t\t\t\tconst key = child.key;\n\t\t\t\tif (keys.indexOf(key) !== -1) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Following component has two or more children with the ' +\n\t\t\t\t\t\t\t`same key attribute: \"${key}\". This may cause glitches and misbehavior ` +\n\t\t\t\t\t\t\t'in rendering process. Component: \\n\\n' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\n\t\t\t\t\t// Break early to not spam the console\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\t};\n}\n\nconst setState = Component.prototype.setState;\nComponent.prototype.setState = function(update, callback) {\n\tif (this._vnode == null) {\n\t\t// `this._vnode` will be `null` during componentWillMount. But it\n\t\t// is perfectly valid to call `setState` during cWM. So we\n\t\t// need an additional check to verify that we are dealing with a\n\t\t// call inside constructor.\n\t\tif (this.state == null) {\n\t\t\tconsole.warn(\n\t\t\t\t`Calling \"this.setState\" inside the constructor of a component is a ` +\n\t\t\t\t\t`no-op and might be a bug in your application. Instead, set ` +\n\t\t\t\t\t`\"this.state = {}\" directly.\\n\\n${getOwnerStack(getCurrentVNode())}`\n\t\t\t);\n\t\t}\n\t} else if (this._parentDom == null) {\n\t\tconsole.warn(\n\t\t\t`Can't call \"this.setState\" on an unmounted component. This is a no-op, ` +\n\t\t\t\t`but it indicates a memory leak in your application. To fix, cancel all ` +\n\t\t\t\t`subscriptions and asynchronous tasks in the componentWillUnmount method.` +\n\t\t\t\t`\\n\\n${getOwnerStack(this._vnode)}`\n\t\t);\n\t}\n\n\treturn setState.call(this, update, callback);\n};\n\nconst forceUpdate = Component.prototype.forceUpdate;\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode == null) {\n\t\tconsole.warn(\n\t\t\t`Calling \"this.forceUpdate\" inside the constructor of a component is a ` +\n\t\t\t\t`no-op and might be a bug in your application.\\n\\n${getOwnerStack(\n\t\t\t\t\tgetCurrentVNode()\n\t\t\t\t)}`\n\t\t);\n\t} else if (this._parentDom == null) {\n\t\tconsole.warn(\n\t\t\t`Can't call \"this.forceUpdate\" on an unmounted component. This is a no-op, ` +\n\t\t\t\t`but it indicates a memory leak in your application. To fix, cancel all ` +\n\t\t\t\t`subscriptions and asynchronous tasks in the componentWillUnmount method.` +\n\t\t\t\t`\\n\\n${getOwnerStack(this._vnode)}`\n\t\t);\n\t}\n\treturn forceUpdate.call(this, callback);\n};\n\n/**\n * Serialize a vnode tree to a string\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function serializeVNode(vnode) {\n\tlet { props } = vnode;\n\tlet name = getDisplayName(vnode);\n\n\tlet attrs = '';\n\tfor (let prop in props) {\n\t\tif (props.hasOwnProperty(prop) && prop !== 'children') {\n\t\t\tlet value = props[prop];\n\n\t\t\t// If it is an object but doesn't have toString(), use Object.toString\n\t\t\tif (typeof value == 'function') {\n\t\t\t\tvalue = `function ${value.displayName || value.name}() {}`;\n\t\t\t}\n\n\t\t\tvalue =\n\t\t\t\tObject(value) === value && !value.toString\n\t\t\t\t\t? Object.prototype.toString.call(value)\n\t\t\t\t\t: value + '';\n\n\t\t\tattrs += ` ${prop}=${JSON.stringify(value)}`;\n\t\t}\n\t}\n\n\tlet children = props.children;\n\treturn `<${name}${attrs}${\n\t\tchildren && children.length ? '>..</' + name + '>' : ' />'\n\t}`;\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 2 /* Local */; // better default than Unspecified\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    function fail() {\n        throw new Error(`The string is not a valid Date: ${input}`);\n    }\n    if (input == null || input.trim() === \"\") {\n        fail();\n    }\n    // ISO dates without TZ are parsed as UTC. Adding time without TZ keeps them local.\n    if (input.length === 10 && input[4] === \"-\" && input[7] === \"-\") {\n        input += \"T00:00:00\";\n    }\n    let date = new Date(input);\n    let offset = null;\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*(Z|[+-]([01]?\\d):?([0-5]?\\d)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                if (m[4] === \"Z\") {\n                    offset = \"Z\";\n                }\n                else {\n                    let offsetInMinutes = parseInt(m[5], 10) * 60 + parseInt(m[6] || \"0\", 10);\n                    if (m[4][0] === \"-\") {\n                        offsetInMinutes *= -1;\n                    }\n                    offset = offsetInMinutes;\n                    timeInSeconds -= offsetInMinutes * 60;\n                }\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            fail();\n        }\n        // Check again the date is valid after transformations, see #2229\n        if (isNaN(date.getTime())) {\n            fail();\n        }\n    }\n    return [date, offset];\n}\nexport function parse(str, detectUTC = false) {\n    const [date, offset] = parseRaw(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","export const ELEMENT_NODE = 1;\nexport const DOCUMENT_NODE = 9;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        if (idx < 0 || idx >= args.length) {\n            throw new Error(\"Index must be greater or equal to zero and less than the arguments' length.\");\n        }\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/([0#,]+)(\\.[0#]+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            const decimalPartLength = decimalPart != null ? decimalPart.length : 0;\n                            rep = toFixed(rep, Math.max(decimalPartLength - 1, 0));\n                            // Thousands separator\n                            if (intPart.indexOf(\",\") > 0) {\n                                const [intPart, decimalPart] = rep.split(\".\");\n                                const i = intPart.length % 3;\n                                const thousandGroups = Math.floor(intPart.length / 3);\n                                let thousands = i > 0 ? intPart.substr(0, i) + (thousandGroups > 0 ? \",\" : \"\") : \"\";\n                                for (let j = 0; j < thousandGroups; j++) {\n                                    thousands += intPart.substr(i + j * 3, 3) + (j < thousandGroups - 1 ? \",\" : \"\");\n                                }\n                                rep = decimalPart ? thousands + \".\" + decimalPart : thousands;\n                            }\n                            // In .NET you can mix 0/# placeholders but for simplicity we only check the left most character\n                            intPart = intPart.replace(/,/g, \"\");\n                            const intPartLength = intPart.length > 0 && intPart[0] === \"0\" ? intPart.length : 0;\n                            return padLeft(rep, intPartLength - sign.length + decimalPartLength, \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, options) {\n    count = typeof count === \"number\" ? count : undefined;\n    options = typeof options === \"number\" ? options : 0;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    const removeEmpty = (options & 1) === 1;\n    const trim = (options & 2) === 2;\n    splitters = splitters || [];\n    splitters = splitters.filter(x => x).map(escape);\n    splitters = splitters.length > 0 ? splitters : [\"\\\\s\"];\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    let findSplits = true;\n    let i = 0;\n    do {\n        const match = reg.exec(str);\n        if (match === null) {\n            const candidate = trim ? str.substring(i).trim() : str.substring(i);\n            if (!removeEmpty || candidate.length > 0) {\n                splits.push(candidate);\n            }\n            findSplits = false;\n        }\n        else {\n            const candidate = trim ? str.substring(i, match.index).trim() : str.substring(i, match.index);\n            if (!removeEmpty || candidate.length > 0) {\n                if (count != null && splits.length + 1 === count) {\n                    splits.push(trim ? str.substring(i).trim() : str.substring(i));\n                    findSplits = false;\n                }\n                else {\n                    splits.push(candidate);\n                }\n            }\n            i = reg.lastIndex;\n        }\n    } while (findSplits);\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\nexport function fmt(strs, ...args) {\n    return ({ strs, args });\n}\nexport function fmtWith(fmts) {\n    return (strs, ...args) => ({ strs, args, fmts });\n}\nexport function getFormat(s) {\n    return s.fmts\n        ? s.strs.reduce((acc, newPart, index) => acc + `{${String(index - 1) + s.fmts[index - 1]}}` + newPart)\n        : s.strs.reduce((acc, newPart, index) => acc + `{${index - 1}}` + newPart);\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\r\nimport { min as min_1, disposeSafe, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\r\nimport { SR_indexOutOfBounds } from \"./Global.js\";\r\n\r\nexport function Helpers_allocateArrayFromCons(cons, len) {\r\n    if ((typeof cons) === \"function\") {\r\n        return new cons(len);\r\n    }\r\n    else {\r\n        return new Array(len);\r\n    }\r\n}\r\n\r\nfunction indexNotFound() {\r\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\r\n}\r\n\r\nfunction differentLengths() {\r\n    throw (new Error(\"Arrays had different lengths\"));\r\n}\r\n\r\nexport function append(array1, array2, cons) {\r\n    const len1 = array1.length | 0;\r\n    const len2 = array2.length | 0;\r\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\r\n    for (let i = 0; i <= (len1 - 1); i++) {\r\n        newArray[i] = array1[i];\r\n    }\r\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\r\n        newArray[i_1 + len1] = array2[i_1];\r\n    }\r\n    return newArray;\r\n}\r\n\r\nexport function filter(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function fill(target, targetIndex, count, value) {\r\n    const start = targetIndex | 0;\r\n    return target.fill(value, start, (start + count));\r\n}\r\n\r\nexport function getSubArray(array, start, count) {\r\n    const start_1 = start | 0;\r\n    return array.slice(start_1, (start_1 + count));\r\n}\r\n\r\nexport function last(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    return array[array.length - 1];\r\n}\r\n\r\nexport function tryLast(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[array.length - 1]);\r\n    }\r\n}\r\n\r\nexport function mapIndexed(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(i, source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function map(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const target = Helpers_allocateArrayFromCons(cons, len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = f(source[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function mapIndexed2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map2(f, source1, source2, cons) {\r\n    if (source1.length !== source2.length) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapIndexed3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(i, source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function map3(f, source1, source2, source3, cons) {\r\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\r\n        throw (new Error(\"Arrays had different lengths\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\r\n    for (let i = 0; i <= (source1.length - 1); i++) {\r\n        result[i] = f(source1[i], source2[i], source3[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapFold(mapping, state, array, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = 0; i <= (array.length - 1); i++) {\r\n            const patternInput = mapping(acc, array[i]);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function mapFoldBack(mapping, array, state, cons) {\r\n    const matchValue = array.length | 0;\r\n    if (matchValue === 0) {\r\n        return [[], state];\r\n    }\r\n    else {\r\n        let acc = state;\r\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\r\n        for (let i = array.length - 1; i >= 0; i--) {\r\n            const patternInput = mapping(array[i], acc);\r\n            res[i] = patternInput[0];\r\n            acc = patternInput[1];\r\n        }\r\n        return [res, acc];\r\n    }\r\n}\r\n\r\nexport function indexed(source) {\r\n    const len = source.length | 0;\r\n    const target = new Array(len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = [i, source[i]];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function truncate(count, array) {\r\n    const count_1 = max_1(comparePrimitives, 0, count) | 0;\r\n    const start = 0;\r\n    return array.slice(start, (start + count_1));\r\n}\r\n\r\nexport function concat(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const matchValue = arrays_1.length | 0;\r\n    switch (matchValue) {\r\n        case 0: {\r\n            return Helpers_allocateArrayFromCons(cons, 0);\r\n        }\r\n        case 1: {\r\n            return arrays_1[0];\r\n        }\r\n        default: {\r\n            let totalIdx = 0;\r\n            let totalLength = 0;\r\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\r\n                const arr_1 = arrays_1[idx];\r\n                totalLength = ((totalLength + arr_1.length) | 0);\r\n            }\r\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\r\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\r\n                const arr_2 = arrays_1[idx_1];\r\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\r\n                    result[totalIdx] = arr_2[j];\r\n                    totalIdx = ((totalIdx + 1) | 0);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function collect(mapping, array, cons) {\r\n    return concat(map(mapping, array, null), cons);\r\n}\r\n\r\nexport function where(predicate, array) {\r\n    return array.filter(predicate);\r\n}\r\n\r\nexport function contains(value, array, eq) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return false;\r\n            }\r\n            else if (eq.Equals(value, array[i])) {\r\n                return true;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function empty(cons) {\r\n    return Helpers_allocateArrayFromCons(cons, 0);\r\n}\r\n\r\nexport function singleton(value, cons) {\r\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\r\n    ar[0] = value;\r\n    return ar;\r\n}\r\n\r\nexport function initialize(count, initializer, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (count - 1); i++) {\r\n        result[i] = initializer(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function pairwise(array) {\r\n    if (array.length < 2) {\r\n        return [];\r\n    }\r\n    else {\r\n        const count = (array.length - 1) | 0;\r\n        const result = new Array(count);\r\n        for (let i = 0; i <= (count - 1); i++) {\r\n            result[i] = [array[i], array[i + 1]];\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function replicate(count, initial, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    const result = Helpers_allocateArrayFromCons(cons, count);\r\n    for (let i = 0; i <= (result.length - 1); i++) {\r\n        result[i] = initial;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function copy(array) {\r\n    return array.slice();\r\n}\r\n\r\nexport function reverse(array) {\r\n    const array_2 = array.slice();\r\n    return array_2.reverse();\r\n}\r\n\r\nexport function scan(folder, state, array, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[0] = state;\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        res[i + 1] = folder(res[i], array[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function scanBack(folder, array, state, cons) {\r\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\r\n    res[array.length] = state;\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n        res[i] = folder(array[i], res[i + 1]);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function skip(count, array, cons) {\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = ((count < 0) ? 0 : count) | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) && predicate(array[count])) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === array.length) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const count_1 = count | 0;\r\n        return array.slice(count_1);\r\n    }\r\n}\r\n\r\nexport function take(count, array, cons) {\r\n    if (count < 0) {\r\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\r\n    }\r\n    if (count > array.length) {\r\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        return array.slice(start, (start + count));\r\n    }\r\n}\r\n\r\nexport function takeWhile(predicate, array, cons) {\r\n    let count = 0;\r\n    while ((count < array.length) && predicate(array[count])) {\r\n        count = ((count + 1) | 0);\r\n    }\r\n    if (count === 0) {\r\n        return Helpers_allocateArrayFromCons(cons, 0);\r\n    }\r\n    else {\r\n        const start = 0;\r\n        const count_1 = count | 0;\r\n        return array.slice(start, (start + count_1));\r\n    }\r\n}\r\n\r\nexport function addInPlace(x, array) {\r\n    array.push(x);\r\n}\r\n\r\nexport function addRangeInPlace(range, array) {\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(enumerator);\r\n    }\r\n}\r\n\r\nexport function insertRangeInPlace(index, range, array) {\r\n    let index_1;\r\n    let i = index;\r\n    const enumerator = getEnumerator(range);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            (index_1 = (i | 0), array.splice(index_1, 0, x));\r\n            i = ((i + 1) | 0);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(enumerator);\r\n    }\r\n}\r\n\r\nexport function removeInPlace(item_1, array) {\r\n    const i = (array.indexOf(item_1, 0)) | 0;\r\n    if (i > -1) {\r\n        array.splice(i, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function removeAllInPlace(predicate, array) {\r\n    const countRemoveAll = (count) => {\r\n        const i = (array.findIndex(predicate)) | 0;\r\n        if (i > -1) {\r\n            array.splice(i, 1);\r\n            return (countRemoveAll(count) + 1) | 0;\r\n        }\r\n        else {\r\n            return count | 0;\r\n        }\r\n    };\r\n    return countRemoveAll(0) | 0;\r\n}\r\n\r\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\r\n    const diff = (targetIndex - sourceIndex) | 0;\r\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\r\n        target[i + diff] = source[i];\r\n    }\r\n}\r\n\r\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\r\n    try {\r\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\r\n    }\r\n    catch (matchValue) {\r\n        copyTo(source, sourceIndex, target, targetIndex, count);\r\n    }\r\n}\r\n\r\nexport function indexOf(array, item_1, start, count) {\r\n    const start_1 = defaultArg(start, 0) | 0;\r\n    const i = (array.indexOf(item_1, start_1)) | 0;\r\n    if ((count != null) && (i >= (start_1 + value_2(count)))) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return i | 0;\r\n    }\r\n}\r\n\r\nexport function partition(f, source, cons) {\r\n    const len = source.length | 0;\r\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\r\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\r\n    let iTrue = 0;\r\n    let iFalse = 0;\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        if (f(source[i])) {\r\n            res1[iTrue] = source[i];\r\n            iTrue = ((iTrue + 1) | 0);\r\n        }\r\n        else {\r\n            res2[iFalse] = source[i];\r\n            iFalse = ((iFalse + 1) | 0);\r\n        }\r\n    }\r\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\r\n}\r\n\r\nexport function find(predicate, array) {\r\n    const matchValue = array.find(predicate);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_2(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, array) {\r\n    return array.find(predicate);\r\n}\r\n\r\nexport function findIndex(predicate, array) {\r\n    const matchValue = (array.findIndex(predicate)) | 0;\r\n    if (matchValue > -1) {\r\n        return matchValue | 0;\r\n    }\r\n    else {\r\n        return indexNotFound() | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, array) {\r\n    const matchValue = (array.findIndex(predicate)) | 0;\r\n    if (matchValue > -1) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function pick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return indexNotFound();\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue != null) {\r\n                    return value_2(matchValue);\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function tryPick(chooser, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i >= array.length) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = chooser(array[i]);\r\n                if (matchValue == null) {\r\n                    i_mut = (i + 1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0);\r\n}\r\n\r\nexport function findBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound();\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return array[i];\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function tryFindBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return some(array[i]);\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function findLastIndex(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return -1;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function findIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return indexNotFound() | 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i | 0;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1) | 0;\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, array) {\r\n    const loop = (i_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut;\r\n            if (i < 0) {\r\n                return void 0;\r\n            }\r\n            else if (predicate(array[i])) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(array.length - 1);\r\n}\r\n\r\nexport function choose(chooser, array, cons) {\r\n    const res = [];\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        const matchValue = chooser(array[i]);\r\n        if (matchValue != null) {\r\n            const y = value_2(matchValue);\r\n            res.push(y);\r\n        }\r\n    }\r\n    if ((typeof cons) === \"function\") {\r\n        return map((x) => x, res, cons);\r\n    }\r\n    else {\r\n        return res;\r\n    }\r\n}\r\n\r\nexport function foldIndexed(folder, state, array) {\r\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\r\n}\r\n\r\nexport function fold(folder, state, array) {\r\n    return array.reduce((folder), state);\r\n}\r\n\r\nexport function iterate(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(array[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed(action, array) {\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        action(i, array[i]);\r\n    }\r\n}\r\n\r\nexport function iterate2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function iterateIndexed2(action, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        action(i, array1[i], array2[i]);\r\n    }\r\n}\r\n\r\nexport function isEmpty(array) {\r\n    return array.length === 0;\r\n}\r\n\r\nexport function forAll(predicate, array) {\r\n    return array.every(predicate);\r\n}\r\n\r\nexport function permute(f, array) {\r\n    const size = array.length | 0;\r\n    const res = array.slice();\r\n    const checkFlags = new Array(size);\r\n    iterateIndexed((i, x) => {\r\n        const j = f(i) | 0;\r\n        if ((j < 0) ? true : (j >= size)) {\r\n            throw (new Error(\"Not a valid permutation\"));\r\n        }\r\n        res[j] = x;\r\n        checkFlags[j] = 1;\r\n    }, array);\r\n    if (!(checkFlags.every((y) => (1 === y)))) {\r\n        throw (new Error(\"Not a valid permutation\"));\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function setSlice(target, lower, upper, source) {\r\n    const lower_1 = defaultArg(lower, 0) | 0;\r\n    const upper_1 = defaultArg(upper, 0) | 0;\r\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\r\n    for (let i = 0; i <= length; i++) {\r\n        target[i + lower_1] = source[i];\r\n    }\r\n}\r\n\r\nexport function sortInPlaceBy(projection, xs, comparer) {\r\n    xs.sort((x, y) => comparer.Compare(projection(x), projection(y)));\r\n}\r\n\r\nexport function sortInPlace(xs, comparer) {\r\n    xs.sort((x, y) => comparer.Compare(x, y));\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => comparer.Compare(x, y));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    return (xs_1.sort((x, y) => comparer.Compare(projection(x), projection(y))), xs_1);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort((x, y) => (comparer.Compare(x, y) * -1));\r\n    return xs_1;\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    const xs_1 = xs.slice();\r\n    return (xs_1.sort((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)), xs_1);\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const comparer_1 = comparer;\r\n    const xs_1 = xs.slice();\r\n    xs_1.sort(comparer_1);\r\n    return xs_1;\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const len1 = xs.length | 0;\r\n    const len2 = ys.length | 0;\r\n    const res = new Array(len1 * len2);\r\n    for (let i = 0; i <= (xs.length - 1); i++) {\r\n        for (let j = 0; j <= (ys.length - 1); j++) {\r\n            res[(i * len2) + j] = [xs[i], ys[j]];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    const res = [];\r\n    const loop = (state_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const state_1 = state_1_mut;\r\n            const matchValue = generator(state_1);\r\n            if (matchValue != null) {\r\n                const x = matchValue[0];\r\n                const s = matchValue[1];\r\n                res.push(x);\r\n                state_1_mut = s;\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(state);\r\n    return res;\r\n}\r\n\r\nexport function unzip(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n    }, array);\r\n    return [res1, res2];\r\n}\r\n\r\nexport function unzip3(array) {\r\n    const len = array.length | 0;\r\n    const res1 = new Array(len);\r\n    const res2 = new Array(len);\r\n    const res3 = new Array(len);\r\n    iterateIndexed((i, tupledArg) => {\r\n        res1[i] = tupledArg[0];\r\n        res2[i] = tupledArg[1];\r\n        res3[i] = tupledArg[2];\r\n    }, array);\r\n    return [res1, res2, res3];\r\n}\r\n\r\nexport function zip(array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function zip3(array1, array2, array3) {\r\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\r\n        differentLengths();\r\n    }\r\n    const result = new Array(array1.length);\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        result[i] = [array1[i], array2[i], array3[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function chunkBySize(chunkSize, array) {\r\n    if (chunkSize < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\r\n            let slice;\r\n            const start_1 = (x * chunkSize) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            result.push(slice);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function splitAt(index, array) {\r\n    let start;\r\n    if ((index < 0) ? true : (index > array.length)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\r\n}\r\n\r\nexport function compareWith(comparer, array1, array2) {\r\n    if (array1 == null) {\r\n        if (array2 == null) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else if (array2 == null) {\r\n        return 1;\r\n    }\r\n    else {\r\n        let i = 0;\r\n        let result = 0;\r\n        const length1 = array1.length | 0;\r\n        const length2 = array2.length | 0;\r\n        if (length1 > length2) {\r\n            return 1;\r\n        }\r\n        else if (length1 < length2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            while ((i < length1) && (result === 0)) {\r\n                result = (comparer(array1[i], array2[i]) | 0);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return result | 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function equalsWith(equals, array1, array2) {\r\n    if (array1 == null) {\r\n        if (array2 == null) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else if (array2 == null) {\r\n        return false;\r\n    }\r\n    else {\r\n        let i = 0;\r\n        let result = true;\r\n        const length1 = array1.length | 0;\r\n        const length2 = array2.length | 0;\r\n        if (length1 > length2) {\r\n            return false;\r\n        }\r\n        else if (length1 < length2) {\r\n            return false;\r\n        }\r\n        else {\r\n            while ((i < length1) && result) {\r\n                result = equals(array1[i], array2[i]);\r\n                i = ((i + 1) | 0);\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function exactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return array[0];\r\n    }\r\n    else if (array.length === 0) {\r\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(array) {\r\n    if (array.length === 1) {\r\n        return some(array[0]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function head(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    else {\r\n        return array[0];\r\n    }\r\n}\r\n\r\nexport function tryHead(array) {\r\n    if (array.length === 0) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[0]);\r\n    }\r\n}\r\n\r\nexport function tail(array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\r\n    }\r\n    return array.slice(1);\r\n}\r\n\r\nexport function item(index, array) {\r\n    return array[index];\r\n}\r\n\r\nexport function tryItem(index, array) {\r\n    if ((index < 0) ? true : (index >= array.length)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(array[index]);\r\n    }\r\n}\r\n\r\nexport function foldBackIndexed(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldBack(folder, array, state) {\r\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\r\n}\r\n\r\nexport function foldIndexed2(folder, state, array1, array2) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        throw (new Error(\"Arrays have different lengths\"));\r\n    }\r\n    for (let i = 0; i <= (array1.length - 1); i++) {\r\n        acc = folder(i, acc, array1[i], array2[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function fold2(folder, state, array1, array2) {\r\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\r\n}\r\n\r\nexport function foldBackIndexed2(folder, array1, array2, state) {\r\n    let acc = state;\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    const size = array1.length | 0;\r\n    for (let i = 1; i <= size; i++) {\r\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(f, array1, array2, state) {\r\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\r\n}\r\n\r\nexport function reduce(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduce(reduction_1);\r\n}\r\n\r\nexport function reduceBack(reduction, array) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\"));\r\n    }\r\n    const reduction_1 = reduction;\r\n    return array.reduceRight(reduction_1);\r\n}\r\n\r\nexport function forAll2(predicate, array1, array2) {\r\n    return fold2((acc, x, y) => (acc && predicate(x, y)), true, array1, array2);\r\n}\r\n\r\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\r\n    existsOffset:\r\n    while (true) {\r\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\r\n        if (index === array.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array_mut = array;\r\n            index_mut = (index + 1);\r\n            continue existsOffset;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists(predicate, array) {\r\n    return existsOffset(predicate, array, 0);\r\n}\r\n\r\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\r\n    existsOffset2:\r\n    while (true) {\r\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\r\n        if (index === array1.length) {\r\n            return false;\r\n        }\r\n        else if (predicate(array1[index], array2[index])) {\r\n            return true;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            array1_mut = array1;\r\n            array2_mut = array2;\r\n            index_mut = (index + 1);\r\n            continue existsOffset2;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        differentLengths();\r\n    }\r\n    return existsOffset2(predicate, array1, array2, 0);\r\n}\r\n\r\nexport function sum(array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, array[i]);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function sumBy(projection, array, adder) {\r\n    let acc = adder.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        acc = adder.Add(acc, projection(array[i]));\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, array[i]);\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function averageBy(projection, array, averager) {\r\n    if (array.length === 0) {\r\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\r\n    }\r\n    let total = averager.GetZero();\r\n    for (let i = 0; i <= (array.length - 1); i++) {\r\n        total = averager.Add(total, projection(array[i]));\r\n    }\r\n    return averager.DivideByInt(total, array.length);\r\n}\r\n\r\nexport function windowed(windowSize, source) {\r\n    if (windowSize <= 0) {\r\n        throw (new Error(\"windowSize must be positive\"));\r\n    }\r\n    let res;\r\n    const len = max_1(comparePrimitives, 0, (source.length - windowSize) + 1) | 0;\r\n    res = (new Array(len));\r\n    for (let i = windowSize; i <= source.length; i++) {\r\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function splitInto(chunks, array) {\r\n    if (chunks < 1) {\r\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\r\n    }\r\n    if (array.length === 0) {\r\n        return [[]];\r\n    }\r\n    else {\r\n        const result = [];\r\n        const chunks_1 = min_1(comparePrimitives, chunks, array.length) | 0;\r\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\r\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\r\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\r\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\r\n            let slice;\r\n            const start_1 = ((i * minChunkSize) + min_1(comparePrimitives, chunksWithExtraItem, i)) | 0;\r\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\r\n            result.push(slice);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function transpose(arrays, cons) {\r\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\r\n    const len = arrays_1.length | 0;\r\n    if (len === 0) {\r\n        return new Array(0);\r\n    }\r\n    else {\r\n        const firstArray = arrays_1[0];\r\n        const lenInner = firstArray.length | 0;\r\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\r\n            differentLengths();\r\n        }\r\n        const result = new Array(lenInner);\r\n        for (let i = 0; i <= (lenInner - 1); i++) {\r\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\r\n            for (let j = 0; j <= (len - 1); j++) {\r\n                result[i][j] = arrays_1[j][i];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function insertAt(index, y, xs) {\r\n    const len = xs.length | 0;\r\n    if ((index < 0) ? true : (index > len)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    const target = new xs.constructor(len + 1);\r\n    for (let i = 0; i <= (index - 1); i++) {\r\n        target[i] = xs[i];\r\n    }\r\n    target[index] = y;\r\n    for (let i_1 = index; i_1 <= (len - 1); i_1++) {\r\n        target[i_1 + 1] = xs[i_1];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function insertManyAt(index, ys, xs) {\r\n    const len = xs.length | 0;\r\n    if ((index < 0) ? true : (index > len)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    const ys_1 = Array.from(ys);\r\n    const len2 = ys_1.length | 0;\r\n    const target = new xs.constructor(len + len2);\r\n    for (let i = 0; i <= (index - 1); i++) {\r\n        target[i] = xs[i];\r\n    }\r\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\r\n        target[index + i_1] = ys_1[i_1];\r\n    }\r\n    for (let i_2 = index; i_2 <= (len - 1); i_2++) {\r\n        target[i_2 + len2] = xs[i_2];\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function removeAt(index, xs) {\r\n    if ((index < 0) ? true : (index >= xs.length)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    let i = -1;\r\n    return filter((_arg1) => {\r\n        i = ((i + 1) | 0);\r\n        return i !== index;\r\n    }, xs);\r\n}\r\n\r\nexport function removeManyAt(index, count, xs) {\r\n    let i = -1;\r\n    let status = -1;\r\n    const ys = filter((_arg1) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            status = 0;\r\n            return false;\r\n        }\r\n        else if (i > index) {\r\n            if (i < (index + count)) {\r\n                return false;\r\n            }\r\n            else {\r\n                status = 1;\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, xs);\r\n    const status_1 = (((status === 0) && ((i + 1) === (index + count))) ? 1 : status) | 0;\r\n    if (status_1 < 1) {\r\n        const arg = (status_1 < 0) ? \"index\" : \"count\";\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + arg));\r\n    }\r\n    return ys;\r\n}\r\n\r\nexport function updateAt(index, y, xs) {\r\n    const len = xs.length | 0;\r\n    if ((index < 0) ? true : (index >= len)) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    const target = new xs.constructor(len);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        target[i] = ((i === index) ? y : xs[i]);\r\n    }\r\n    return target;\r\n}\r\n\r\n","import { join } from \"./String.js\";\r\nimport { uncurry, disposeSafe, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\r\nimport { Record } from \"./Types.js\";\r\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\r\nimport { SR_inputSequenceTooLong, SR_inputSequenceEmpty, SR_inputMustBeNonNegative, SR_notEnoughElements, SR_differentLengths, SR_keyNotFoundAlt, SR_indexOutOfBounds, SR_inputWasEmpty } from \"./Global.js\";\r\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\r\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\r\n\r\nexport class FSharpList extends Record {\r\n    constructor(head, tail) {\r\n        super();\r\n        this.head = head;\r\n        this.tail = tail;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        return (\"[\" + join(\"; \", xs)) + \"]\";\r\n    }\r\n    Equals(other) {\r\n        const xs = this;\r\n        if (xs === other) {\r\n            return true;\r\n        }\r\n        else {\r\n            const loop = (xs_1_mut, ys_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                    const matchValue = [xs_1.tail, ys_1.tail];\r\n                    if (matchValue[0] != null) {\r\n                        if (matchValue[1] != null) {\r\n                            const xt = matchValue[0];\r\n                            const yt = matchValue[1];\r\n                            if (equals(xs_1.head, ys_1.head)) {\r\n                                xs_1_mut = xt;\r\n                                ys_1_mut = yt;\r\n                                continue loop;\r\n                            }\r\n                            else {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (matchValue[1] != null) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(xs, other);\r\n        }\r\n    }\r\n    GetHashCode() {\r\n        const xs = this;\r\n        const loop = (i_mut, h_mut, xs_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\r\n                const matchValue = xs_1.tail;\r\n                if (matchValue != null) {\r\n                    const t = matchValue;\r\n                    if (i > 18) {\r\n                        return h | 0;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\r\n                        xs_1_mut = t;\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return h | 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0, 0, xs) | 0;\r\n    }\r\n    toJSON(_key) {\r\n        const this$ = this;\r\n        return Array.from(this$);\r\n    }\r\n    CompareTo(other) {\r\n        const xs = this;\r\n        const loop = (xs_1_mut, ys_1_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n                const matchValue = [xs_1.tail, ys_1.tail];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const xt = matchValue[0];\r\n                        const yt = matchValue[1];\r\n                        const c = compare(xs_1.head, ys_1.head) | 0;\r\n                        if (c === 0) {\r\n                            xs_1_mut = xt;\r\n                            ys_1_mut = yt;\r\n                            continue loop;\r\n                        }\r\n                        else {\r\n                            return c | 0;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                else if (matchValue[1] != null) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(xs, other) | 0;\r\n    }\r\n    GetEnumerator() {\r\n        const xs = this;\r\n        return ListEnumerator$1_$ctor_3002E699(xs);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const xs = this;\r\n        return getEnumerator(xs);\r\n    }\r\n}\r\n\r\nexport function FSharpList$reflection(gen0) {\r\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\r\n}\r\n\r\nexport class ListEnumerator$1 {\r\n    constructor(xs) {\r\n        this.xs = xs;\r\n        this.it = this.xs;\r\n        this.current = null;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current;\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        const matchValue = __.it.tail;\r\n        if (matchValue != null) {\r\n            const t = matchValue;\r\n            __.current = __.it.head;\r\n            __.it = t;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        const __ = this;\r\n        __.it = __.xs;\r\n        __.current = null;\r\n    }\r\n    Dispose() {\r\n    }\r\n}\r\n\r\nexport function ListEnumerator$1$reflection(gen0) {\r\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\r\n}\r\n\r\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\r\n    return new ListEnumerator$1(xs);\r\n}\r\n\r\nexport function FSharpList_get_Empty() {\r\n    return new FSharpList(null, void 0);\r\n}\r\n\r\nexport function FSharpList_Cons_305B8EAC(x, xs) {\r\n    return new FSharpList(x, xs);\r\n}\r\n\r\nexport function FSharpList__get_IsEmpty(xs) {\r\n    return xs.tail == null;\r\n}\r\n\r\nexport function FSharpList__get_Length(xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = matchValue;\r\n                continue loop;\r\n            }\r\n            else {\r\n                return i | 0;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs) | 0;\r\n}\r\n\r\nexport function FSharpList__get_Head(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return xs.head;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Tail(xs) {\r\n    const matchValue = xs.tail;\r\n    if (matchValue != null) {\r\n        return matchValue;\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputWasEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            const matchValue = xs_1.tail;\r\n            if (matchValue != null) {\r\n                if (i === index) {\r\n                    return xs_1.head;\r\n                }\r\n                else {\r\n                    i_mut = (i + 1);\r\n                    xs_1_mut = matchValue;\r\n                    continue loop;\r\n                }\r\n            }\r\n            else {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function empty() {\r\n    return FSharpList_get_Empty();\r\n}\r\n\r\nexport function cons(x, xs) {\r\n    return FSharpList_Cons_305B8EAC(x, xs);\r\n}\r\n\r\nexport function singleton(x) {\r\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    return FSharpList__get_IsEmpty(xs);\r\n}\r\n\r\nexport function length(xs) {\r\n    return FSharpList__get_Length(xs);\r\n}\r\n\r\nexport function head(xs) {\r\n    return FSharpList__get_Head(xs);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n}\r\n\r\nexport function tail(xs) {\r\n    return FSharpList__get_Tail(xs);\r\n}\r\n\r\nexport function tryLast(xs_mut) {\r\n    tryLast:\r\n    while (true) {\r\n        const xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return void 0;\r\n        }\r\n        else {\r\n            const t = FSharpList__get_Tail(xs);\r\n            if (FSharpList__get_IsEmpty(t)) {\r\n                return some(FSharpList__get_Head(xs));\r\n            }\r\n            else {\r\n                xs_mut = t;\r\n                continue tryLast;\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_inputWasEmpty));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const loop = (xs_1_mut, ys_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\r\n            if (matchValue[0]) {\r\n                if (matchValue[1]) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return -1;\r\n                }\r\n            }\r\n            else if (matchValue[1]) {\r\n                return 1;\r\n            }\r\n            else {\r\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\r\n                if (c === 0) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return c | 0;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs, ys) | 0;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    const len = FSharpList__get_Length(xs) | 0;\r\n    const res = fill(new Array(len), 0, len, null);\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (!FSharpList__get_IsEmpty(xs_1)) {\r\n                res[i] = FSharpList__get_Head(xs_1);\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    loop(0, xs);\r\n    return res;\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_1)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function foldIndexed(folder, state, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, state, xs);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    let acc = state;\r\n    let xs_1 = xs;\r\n    let ys_1 = ys;\r\n    while ((!FSharpList__get_IsEmpty(xs_1)) && (!FSharpList__get_IsEmpty(ys_1))) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\r\n        xs_1 = FSharpList__get_Tail(xs_1);\r\n        ys_1 = FSharpList__get_Tail(ys_1);\r\n    }\r\n    return acc;\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function unfold(gen, state) {\r\n    const loop = (acc_mut, node_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, node = node_mut;\r\n            const matchValue = gen(acc);\r\n            if (matchValue != null) {\r\n                acc_mut = matchValue[1];\r\n                node_mut = ((t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t)));\r\n                continue loop;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(state, root);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function toSeq(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function ofArrayWithTail(xs, tail_1) {\r\n    let res = tail_1;\r\n    for (let i = xs.length - 1; i >= 0; i--) {\r\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function ofArray(xs) {\r\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    let xs_3, t;\r\n    if (isArrayLike(xs)) {\r\n        return ofArray(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        const root = FSharpList_get_Empty();\r\n        let node = root;\r\n        const enumerator = getEnumerator(xs);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                node = ((xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t))));\r\n            }\r\n        }\r\n        finally {\r\n            disposeSafe(enumerator);\r\n        }\r\n        const xs_5 = node;\r\n        const t_2 = FSharpList_get_Empty();\r\n        xs_5.tail = t_2;\r\n        return FSharpList__get_Tail(root);\r\n    }\r\n}\r\n\r\nexport function concat(lists) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    const action = (xs) => {\r\n        node = fold((acc, x) => {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }, node, xs);\r\n    };\r\n    if (isArrayLike(lists)) {\r\n        lists.forEach(action);\r\n    }\r\n    else if (lists instanceof FSharpList) {\r\n        iterate(action, lists);\r\n    }\r\n    else {\r\n        const enumerator = getEnumerator(lists);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n        }\r\n        finally {\r\n            disposeSafe(enumerator);\r\n        }\r\n    }\r\n    const xs_6 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_6.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    let t, xs_4, t_2;\r\n    const root = FSharpList_get_Empty();\r\n    let node = (t = (new FSharpList(state, void 0)), (root.tail = t, t));\r\n    let acc = state;\r\n    let xs_3 = xs;\r\n    while (!FSharpList__get_IsEmpty(xs_3)) {\r\n        acc = folder(acc, FSharpList__get_Head(xs_3));\r\n        node = ((xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2))));\r\n        xs_3 = FSharpList__get_Tail(xs_3);\r\n    }\r\n    const xs_6 = node;\r\n    const t_4 = FSharpList_get_Empty();\r\n    xs_6.tail = t_4;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return ofArray(scanBack_1(folder, toArray(xs), state));\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    let xs_1, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    let ys = xs;\r\n    while (!FSharpList__get_IsEmpty(ys)) {\r\n        let zs = mapping(FSharpList__get_Head(ys));\r\n        while (!FSharpList__get_IsEmpty(zs)) {\r\n            node = ((xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t))));\r\n            zs = FSharpList__get_Tail(zs);\r\n        }\r\n        ys = FSharpList__get_Tail(ys);\r\n    }\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = foldIndexed((i, acc, x) => {\r\n        let t;\r\n        return (t = (new FSharpList(mapping(i, x), void 0)), (acc.tail = t, t));\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        let t;\r\n        return (t = (new FSharpList(mapping(x), void 0)), (acc.tail = t, t));\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold2((acc, x, y) => {\r\n        let t;\r\n        return (t = (new FSharpList(mapping(x, y), void 0)), (acc.tail = t, t));\r\n    }, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                acc_mut = ((t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(0, root, xs, ys);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\r\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                ys_1_mut = FSharpList__get_Tail(ys_1);\r\n                zs_1_mut = FSharpList__get_Tail(zs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node_1 = loop(root, xs, ys, zs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node_1.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const patternInput_1 = fold((tupledArg, x) => {\r\n        let t;\r\n        const patternInput = mapping(tupledArg[1], x);\r\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\r\n    }, [root, state], xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_2;\r\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\r\n}\r\n\r\nexport function tryPick(f, xs) {\r\n    const loop = (xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue = f(FSharpList__get_Head(xs_1));\r\n                if (matchValue == null) {\r\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return matchValue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(xs);\r\n}\r\n\r\nexport function pick(f, xs) {\r\n    const matchValue = tryPick(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFind(f, xs) {\r\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\r\n}\r\n\r\nexport function find(f, xs) {\r\n    const matchValue = tryFind(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(f, xs) {\r\n    return tryFindBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findBack(f, xs) {\r\n    const matchValue = tryFindBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(f, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (f(FSharpList__get_Head(xs_1))) {\r\n                return i;\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function findIndex(f, xs) {\r\n    const matchValue = tryFindIndex(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(f, xs) {\r\n    return tryFindIndexBack_1(f, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(f, xs) {\r\n    const matchValue = tryFindIndexBack(f, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error(SR_keyNotFoundAlt));\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryItem(n, xs) {\r\n    const loop = (i_mut, xs_1_mut) => {\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return void 0;\r\n            }\r\n            else if (i === n) {\r\n                return some(FSharpList__get_Head(xs_1));\r\n            }\r\n            else {\r\n                i_mut = (i + 1);\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    return loop(0, xs);\r\n}\r\n\r\nexport function item(n, xs) {\r\n    return FSharpList__get_Item_Z524259A4(xs, n);\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        if (f(x)) {\r\n            const t = new FSharpList(x, void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function partition(f, xs) {\r\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\r\n    const root2 = patternInput[1];\r\n    const root1 = patternInput[0];\r\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\r\n        const lacc = tupledArg[0];\r\n        const racc = tupledArg[1];\r\n        return (x) => {\r\n            let t, t_2;\r\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\r\n        };\r\n    }), [root1, root2], xs);\r\n    const t_4 = FSharpList_get_Empty();\r\n    patternInput_1[0].tail = t_4;\r\n    const t_5 = FSharpList_get_Empty();\r\n    patternInput_1[1].tail = t_5;\r\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\r\n}\r\n\r\nexport function choose(f, xs) {\r\n    const root = FSharpList_get_Empty();\r\n    const node = fold((acc, x) => {\r\n        const matchValue = f(x);\r\n        if (matchValue == null) {\r\n            return acc;\r\n        }\r\n        else {\r\n            const t = new FSharpList(value_1(matchValue), void 0);\r\n            acc.tail = t;\r\n            return t;\r\n        }\r\n    }, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function contains(value, xs, eq) {\r\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\r\n}\r\n\r\nexport function initialize(n, f) {\r\n    let xs, t;\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    for (let i = 0; i <= (n - 1); i++) {\r\n        node = ((xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t))));\r\n    }\r\n    const xs_2 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_2.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reduce(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputWasEmpty));\r\n    }\r\n    else {\r\n        return fold(f, head(xs), tail(xs));\r\n    }\r\n}\r\n\r\nexport function reduceBack(f, xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error(SR_inputWasEmpty));\r\n    }\r\n    else {\r\n        return foldBack(f, tail(xs), head(xs));\r\n    }\r\n}\r\n\r\nexport function forAll(f, xs) {\r\n    return fold((acc, x) => (acc && f(x)), true, xs);\r\n}\r\n\r\nexport function forAll2(f, xs, ys) {\r\n    return fold2((acc, x, y) => (acc && f(x, y)), true, xs, ys);\r\n}\r\n\r\nexport function exists(f, xs) {\r\n    return tryFindIndex(f, xs) != null;\r\n}\r\n\r\nexport function exists2(f_mut, xs_mut, ys_mut) {\r\n    exists2:\r\n    while (true) {\r\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\r\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\r\n        let pattern_matching_result;\r\n        if (matchValue[0]) {\r\n            if (matchValue[1]) {\r\n                pattern_matching_result = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result = 2;\r\n            }\r\n        }\r\n        else if (matchValue[1]) {\r\n            pattern_matching_result = 2;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return false;\r\n            }\r\n            case 1: {\r\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    f_mut = f;\r\n                    xs_mut = FSharpList__get_Tail(xs);\r\n                    ys_mut = FSharpList__get_Tail(ys);\r\n                    continue exists2;\r\n                }\r\n            }\r\n            case 2: {\r\n                throw (new Error((SR_differentLengths + \"\\\\nParameter name: \") + \"list2\"));\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function unzip(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function unzip3(xs) {\r\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    const arr = toArray(xs);\r\n    arr.sort(comparer);\r\n    return ofArray(arr);\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs);\r\n    return averager.DivideByInt(total, count);\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs);\r\n    return averager.DivideByInt(total, count);\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return ofArray(permute_1(f, toArray(xs)));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return ofArray(map_1(ofArray, chunkBySize_1(chunkSize, toArray(xs))));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const root = FSharpList_get_Empty();\r\n    let node = root;\r\n    iterate((x) => {\r\n        iterate((y) => {\r\n            let xs_1, t;\r\n            node = ((xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t))));\r\n        }, ys);\r\n    }, xs);\r\n    const xs_3 = node;\r\n    const t_2 = FSharpList_get_Empty();\r\n    xs_3.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function skip(count_mut, xs_mut) {\r\n    skip:\r\n    while (true) {\r\n        const count = count_mut, xs = xs_mut;\r\n        if (count <= 0) {\r\n            return xs;\r\n        }\r\n        else if (FSharpList__get_IsEmpty(xs)) {\r\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n        }\r\n        else {\r\n            count_mut = (count - 1);\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skip;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function skipWhile(predicate_mut, xs_mut) {\r\n    skipWhile:\r\n    while (true) {\r\n        const predicate = predicate_mut, xs = xs_mut;\r\n        if (FSharpList__get_IsEmpty(xs)) {\r\n            return xs;\r\n        }\r\n        else if (!predicate(FSharpList__get_Head(xs))) {\r\n            return xs;\r\n        }\r\n        else {\r\n            predicate_mut = predicate;\r\n            xs_mut = FSharpList__get_Tail(xs);\r\n            continue skipWhile;\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function take(count, xs) {\r\n    if (count < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\r\n    }\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    const loop = (acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\r\n                return acc;\r\n            }\r\n            else {\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\r\n        let t;\r\n        loop:\r\n        while (true) {\r\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\r\n            if (i <= 0) {\r\n                return acc;\r\n            }\r\n            else if (FSharpList__get_IsEmpty(xs_1)) {\r\n                return acc;\r\n            }\r\n            else {\r\n                i_mut = (i - 1);\r\n                acc_mut = ((t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t)));\r\n                xs_1_mut = FSharpList__get_Tail(xs_1);\r\n                continue loop;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const root = FSharpList_get_Empty();\r\n    const node = loop(count, root, xs);\r\n    const t_2 = FSharpList_get_Empty();\r\n    node.tail = t_2;\r\n    return FSharpList__get_Tail(root);\r\n}\r\n\r\nexport function getSlice(startIndex, endIndex, xs) {\r\n    const len = length(xs) | 0;\r\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\r\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\r\n    if (startIndex_1 < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\r\n    }\r\n    else if (endIndex_1 >= len) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\r\n    }\r\n    else if (endIndex_1 < startIndex_1) {\r\n        return FSharpList_get_Empty();\r\n    }\r\n    else {\r\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\r\n    }\r\n}\r\n\r\nexport function splitAt(index, xs) {\r\n    if (index < 0) {\r\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    if (index > FSharpList__get_Length(xs)) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return [take(index, xs), skip(index, xs)];\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    if (FSharpList__get_IsEmpty(xs)) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return FSharpList__get_Head(xs);\r\n    }\r\n    else {\r\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    if ((!FSharpList__get_IsEmpty(xs)) && FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\r\n        return some(FSharpList__get_Head(xs));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return ofArray(pairwise_1(toArray(xs)));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return ofArray(map_1(ofArray, windowed_1(windowSize, toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return ofArray(map_1(ofArray, splitInto_1(chunks, toArray(xs))));\r\n}\r\n\r\nexport function transpose(lists) {\r\n    return ofArray(map_1(ofArray, transpose_1(map_1(toArray, Array.from(lists)))));\r\n}\r\n\r\nexport function insertAt(index, y, xs) {\r\n    let i = -1;\r\n    let isDone = false;\r\n    const result = fold((acc, x) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            isDone = true;\r\n            return FSharpList_Cons_305B8EAC(x, FSharpList_Cons_305B8EAC(y, acc));\r\n        }\r\n        else {\r\n            return FSharpList_Cons_305B8EAC(x, acc);\r\n        }\r\n    }, FSharpList_get_Empty(), xs);\r\n    return reverse(isDone ? result : (((i + 1) === index) ? FSharpList_Cons_305B8EAC(y, result) : (() => {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    })()));\r\n}\r\n\r\nexport function insertManyAt(index, ys, xs) {\r\n    let i = -1;\r\n    let isDone = false;\r\n    const ys_1 = ofSeq(ys);\r\n    const result = fold((acc, x) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            isDone = true;\r\n            return FSharpList_Cons_305B8EAC(x, append(ys_1, acc));\r\n        }\r\n        else {\r\n            return FSharpList_Cons_305B8EAC(x, acc);\r\n        }\r\n    }, FSharpList_get_Empty(), xs);\r\n    return reverse(isDone ? result : (((i + 1) === index) ? append(ys_1, result) : (() => {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    })()));\r\n}\r\n\r\nexport function removeAt(index, xs) {\r\n    let i = -1;\r\n    let isDone = false;\r\n    const ys = filter((_arg1) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            isDone = true;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, xs);\r\n    if (!isDone) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return ys;\r\n}\r\n\r\nexport function removeManyAt(index, count, xs) {\r\n    let i = -1;\r\n    let status = -1;\r\n    const ys = filter((_arg1) => {\r\n        i = ((i + 1) | 0);\r\n        if (i === index) {\r\n            status = 0;\r\n            return false;\r\n        }\r\n        else if (i > index) {\r\n            if (i < (index + count)) {\r\n                return false;\r\n            }\r\n            else {\r\n                status = 1;\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, xs);\r\n    const status_1 = (((status === 0) && ((i + 1) === (index + count))) ? 1 : status) | 0;\r\n    if (status_1 < 1) {\r\n        const arg = (status_1 < 0) ? \"index\" : \"count\";\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + arg));\r\n    }\r\n    return ys;\r\n}\r\n\r\nexport function updateAt(index, y, xs) {\r\n    let isDone = false;\r\n    const ys = mapIndexed((i, x) => {\r\n        if (i === index) {\r\n            isDone = true;\r\n            return y;\r\n        }\r\n        else {\r\n            return x;\r\n        }\r\n    }, xs);\r\n    if (!isDone) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return ys;\r\n}\r\n\r\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n","import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\t// We always have ref in props.ref, except for\n\t// mobx-react. It will call this function directly\n\t// and always pass ref as the second argument.\n\tfunction Forwarded(props, ref) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\tref = props.ref || ref;\n\t\treturn fn(\n\t\t\tclone,\n\t\t\t!ref || (typeof ref === 'object' && !('current' in ref)) ? null : ref\n\t\t);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n","import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function(vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._hydrating === true) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function() {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n","import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tthis._map.forEach((node, child) => {\n\t\tresolve(this, child, node);\n\t});\n};\n","import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\n\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/i\n\t\t: /fil|che|ra/i\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nlet classNameDescriptor = {\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tlet type = vnode.type;\n\tlet props = vnode.props;\n\tlet normalizedProps = props;\n\n\t// only normalize props on Element nodes\n\tif (typeof type === 'string') {\n\t\tconst nonCustomElement = type.indexOf('-') === -1;\n\t\tnormalizedProps = {};\n\n\t\tfor (let i in props) {\n\t\t\tlet value = props[i];\n\n\t\t\tif (IS_DOM && i === 'children' && type === 'noscript') {\n\t\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t\tcontinue;\n\t\t\t} else if (i === 'value' && 'defaultValue' in props && value == null) {\n\t\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t\t// a default value\n\t\t\t\tcontinue;\n\t\t\t} else if (\n\t\t\t\ti === 'defaultValue' &&\n\t\t\t\t'value' in props &&\n\t\t\t\tprops.value == null\n\t\t\t) {\n\t\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\t\ti = 'value';\n\t\t\t} else if (i === 'download' && value === true) {\n\t\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t\t// value will be used as the file name and the file will be called\n\t\t\t\t// \"true\" upon downloading it.\n\t\t\t\tvalue = '';\n\t\t\t} else if (/ondoubleclick/i.test(i)) {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\t/^onchange(textarea|input)/i.test(i + type) &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\ti = 'oninput';\n\t\t\t} else if (/^onfocus$/i.test(i)) {\n\t\t\t\ti = 'onfocusin';\n\t\t\t} else if (/^onblur$/i.test(i)) {\n\t\t\t\ti = 'onfocusout';\n\t\t\t} else if (/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t} else if (nonCustomElement && CAMEL_PROPS.test(i)) {\n\t\t\t\ti = i.replace(/[A-Z0-9]/, '-$&').toLowerCase();\n\t\t\t} else if (value === null) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\n\t\t\tnormalizedProps[i] = value;\n\t\t}\n\n\t\t// Add support for array select values: <select multiple value={[]} />\n\t\tif (\n\t\t\ttype == 'select' &&\n\t\t\tnormalizedProps.multiple &&\n\t\t\tArray.isArray(normalizedProps.value)\n\t\t) {\n\t\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t\t});\n\t\t}\n\n\t\t// Adding support for defaultValue in select tag\n\t\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tif (normalizedProps.multiple) {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t\t} else {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvnode.props = normalizedProps;\n\n\t\tif (props.class != props.className) {\n\t\t\tclassNameDescriptor.enumerable = 'className' in props;\n\t\t\tif (props.className != null) normalizedProps.class = props.className;\n\t\t\tObject.defineProperty(normalizedProps, 'className', classNameDescriptor);\n\t\t}\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function(vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection. So far\n// only `react-relay` makes use of it. It uses it to read the\n// context value.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t}\n\t\t}\n\t}\n};\n","import { toString, Record, Union } from \"../fable-library.3.7.6/Types.js\";\nimport { array_type, float64_type, int32_type, bool_type, obj_type, record_type, option_type, lambda_type, unit_type, class_type, union_type, string_type } from \"../fable-library.3.7.6/Reflection.js\";\n\nexport class FragmentProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\"];\n    }\n}\n\nexport function FragmentProp$reflection() {\n    return union_type(\"Fable.React.Props.FragmentProp\", [], FragmentProp, () => [[[\"Item\", string_type]]]);\n}\n\nexport class Prop extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\", \"Ref\", \"ref\", \"ref\"];\n    }\n}\n\nexport function Prop$reflection() {\n    return union_type(\"Fable.React.Props.Prop\", [], Prop, () => [[[\"Item\", string_type]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Element\", void 0, Element), unit_type)]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\", void 0, Element))])]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\", void 0, Element))])]]]);\n}\n\nexport class DangerousHtml extends Record {\n    constructor(__html) {\n        super();\n        this.__html = __html;\n    }\n}\n\nexport function DangerousHtml$reflection() {\n    return record_type(\"Fable.React.Props.DangerousHtml\", [], DangerousHtml, () => [[\"__html\", string_type]]);\n}\n\nexport class DOMAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DangerouslySetInnerHTML\", \"OnCut\", \"OnPaste\", \"OnCompositionEnd\", \"OnCompositionStart\", \"OnCopy\", \"OnCompositionUpdate\", \"OnFocus\", \"OnBlur\", \"OnChange\", \"OnInput\", \"OnSubmit\", \"OnReset\", \"OnLoad\", \"OnError\", \"OnKeyDown\", \"OnKeyPress\", \"OnKeyUp\", \"OnAbort\", \"OnCanPlay\", \"OnCanPlayThrough\", \"OnDurationChange\", \"OnEmptied\", \"OnEncrypted\", \"OnEnded\", \"OnLoadedData\", \"OnLoadedMetadata\", \"OnLoadStart\", \"OnPause\", \"OnPlay\", \"OnPlaying\", \"OnProgress\", \"OnRateChange\", \"OnSeeked\", \"OnSeeking\", \"OnStalled\", \"OnSuspend\", \"OnTimeUpdate\", \"OnVolumeChange\", \"OnWaiting\", \"OnClick\", \"OnContextMenu\", \"OnDoubleClick\", \"OnDrag\", \"OnDragEnd\", \"OnDragEnter\", \"OnDragExit\", \"OnDragLeave\", \"OnDragOver\", \"OnDragStart\", \"OnDrop\", \"OnMouseDown\", \"OnMouseEnter\", \"OnMouseLeave\", \"OnMouseMove\", \"OnMouseOut\", \"OnMouseOver\", \"OnMouseUp\", \"OnSelect\", \"OnTouchCancel\", \"OnTouchEnd\", \"OnTouchMove\", \"OnTouchStart\", \"OnScroll\", \"OnWheel\", \"OnAnimationStart\", \"OnAnimationEnd\", \"OnAnimationIteration\", \"OnTransitionEnd\", \"Custom\"];\n    }\n}\n\nexport function DOMAttr$reflection() {\n    return union_type(\"Fable.React.Props.DOMAttr\", [], DOMAttr, () => [[[\"Item\", DangerousHtml$reflection()]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\", void 0, ClipboardEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\", void 0, ClipboardEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\", void 0, CompositionEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\", void 0, CompositionEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\", void 0, ClipboardEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\", void 0, CompositionEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\", void 0, FocusEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\", void 0, FocusEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\", void 0, KeyboardEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\", void 0, KeyboardEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\", void 0, KeyboardEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\", void 0, DragEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\", void 0, MouseEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\", void 0, Event), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\", void 0, TouchEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\", void 0, TouchEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\", void 0, TouchEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\", void 0, TouchEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.UIEvent\", void 0, UIEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.WheelEvent\", void 0, WheelEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\", void 0, AnimationEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\", void 0, AnimationEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\", void 0, AnimationEvent), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TransitionEvent\", void 0, TransitionEvent), unit_type)]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class SVGAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ClipPath\", \"Cx\", \"Cy\", \"D\", \"Dx\", \"Dy\", \"Fill\", \"FillOpacity\", \"FontFamily\", \"FontSize\", \"Fx\", \"Fy\", \"GradientTransform\", \"GradientUnits\", \"Height\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"Offset\", \"Opacity\", \"PatternContentUnits\", \"PatternUnits\", \"Points\", \"PreserveAspectRatio\", \"R\", \"Rx\", \"Ry\", \"SpreadMethod\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TextAnchor\", \"Transform\", \"Version\", \"ViewBox\", \"Width\", \"X1\", \"X2\", \"X\", \"XlinkActuate\", \"XlinkArcrole\", \"XlinkHref\", \"XlinkRole\", \"XlinkShow\", \"XlinkTitle\", \"XlinkType\", \"XmlBase\", \"XmlLang\", \"XmlSpace\", \"Y1\", \"Y2\", \"Y\", \"Custom\"];\n    }\n}\n\nexport function SVGAttr$reflection() {\n    return union_type(\"Fable.React.Props.SVGAttr\", [], SVGAttr, () => [[[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class HTMLAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DefaultChecked\", \"DefaultValue\", \"Accept\", \"AcceptCharset\", \"AccessKey\", \"Action\", \"AllowFullScreen\", \"AllowTransparency\", \"Alt\", \"aria-atomic\", \"aria-busy\", \"aria-checked\", \"aria-colcount\", \"aria-colindex\", \"aria-colspan\", \"aria-controls\", \"aria-current\", \"aria-describedby\", \"aria-details\", \"aria-disabled\", \"aria-errormessage\", \"aria-expanded\", \"aria-flowto\", \"aria-haspopup\", \"aria-hidden\", \"aria-invalid\", \"aria-keyshortcuts\", \"aria-label\", \"aria-labelledby\", \"aria-level\", \"aria-live\", \"aria-modal\", \"aria-multiline\", \"aria-multiselectable\", \"aria-orientation\", \"aria-owns\", \"aria-placeholder\", \"aria-posinset\", \"aria-pressed\", \"aria-readonly\", \"aria-relevant\", \"aria-required\", \"aria-roledescription\", \"aria-rowcount\", \"aria-rowindex\", \"aria-rowspan\", \"aria-selected\", \"aria-setsize\", \"aria-sort\", \"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\", \"aria-valuetext\", \"Async\", \"AutoComplete\", \"AutoFocus\", \"AutoPlay\", \"Capture\", \"CellPadding\", \"CellSpacing\", \"CharSet\", \"Challenge\", \"Checked\", \"ClassID\", \"ClassName\", \"className\", \"Cols\", \"ColSpan\", \"Content\", \"ContentEditable\", \"ContextMenu\", \"Controls\", \"Coords\", \"CrossOrigin\", \"data-toggle\", \"DateTime\", \"Default\", \"Defer\", \"Dir\", \"Disabled\", \"Download\", \"Draggable\", \"EncType\", \"Form\", \"FormAction\", \"FormEncType\", \"FormMethod\", \"FormNoValidate\", \"FormTarget\", \"FrameBorder\", \"Headers\", \"Height\", \"Hidden\", \"High\", \"Href\", \"HrefLang\", \"HtmlFor\", \"HttpEquiv\", \"Icon\", \"Id\", \"InputMode\", \"Integrity\", \"Is\", \"KeyParams\", \"KeyType\", \"Kind\", \"Label\", \"Lang\", \"List\", \"Loop\", \"Low\", \"Manifest\", \"MarginHeight\", \"MarginWidth\", \"Max\", \"MaxLength\", \"Media\", \"MediaGroup\", \"Method\", \"Min\", \"MinLength\", \"Multiple\", \"Muted\", \"Name\", \"NoValidate\", \"Open\", \"Optimum\", \"Pattern\", \"Placeholder\", \"Poster\", \"Preload\", \"RadioGroup\", \"ReadOnly\", \"Rel\", \"Required\", \"Role\", \"Rows\", \"RowSpan\", \"Sandbox\", \"Scope\", \"Scoped\", \"Scrolling\", \"Seamless\", \"Selected\", \"Shape\", \"Size\", \"Sizes\", \"Span\", \"SpellCheck\", \"Src\", \"SrcDoc\", \"SrcLang\", \"SrcSet\", \"Start\", \"Step\", \"Summary\", \"TabIndex\", \"Target\", \"Title\", \"Type\", \"UseMap\", \"Value\", \"value\", \"Width\", \"Wmode\", \"Wrap\", \"About\", \"Datatype\", \"Inlist\", \"Prefix\", \"Property\", \"Resource\", \"Typeof\", \"Vocab\", \"AutoCapitalize\", \"AutoCorrect\", \"AutoSave\", \"ItemProp\", \"ItemScope\", \"ItemType\", \"ItemID\", \"ItemRef\", \"Results\", \"Security\", \"Unselectable\", \"Custom\"];\n    }\n}\n\nexport function HTMLAttr$reflection() {\n    return union_type(\"Fable.React.Props.HTMLAttr\", [], HTMLAttr, () => [[[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", array_type(string_type)]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class CSSProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"AlignContent\", \"AlignItems\", \"AlignSelf\", \"AlignmentAdjust\", \"AlignmentBaseline\", \"All\", \"Animation\", \"AnimationDelay\", \"AnimationDirection\", \"AnimationDuration\", \"AnimationFillMode\", \"AnimationIterationCount\", \"AnimationName\", \"AnimationPlayState\", \"AnimationTimingFunction\", \"Appearance\", \"BackfaceVisibility\", \"Background\", \"BackgroundAttachment\", \"BackgroundBlendMode\", \"BackgroundClip\", \"BackgroundColor\", \"BackgroundComposite\", \"BackgroundImage\", \"BackgroundOrigin\", \"BackgroundPosition\", \"BackgroundPositionX\", \"BackgroundPositionY\", \"BackgroundRepeat\", \"BackgroundSize\", \"BaselineShift\", \"Behavior\", \"BlockSize\", \"Border\", \"BorderBlockEnd\", \"BorderBlockEndColor\", \"BorderBlockEndStyle\", \"BorderBlockEndWidth\", \"BorderBlockStart\", \"BorderBlockStartColor\", \"BorderBlockStartStyle\", \"BorderBlockStartWidth\", \"BorderBottom\", \"BorderBottomColor\", \"BorderBottomLeftRadius\", \"BorderBottomRightRadius\", \"BorderBottomStyle\", \"BorderBottomWidth\", \"BorderCollapse\", \"BorderColor\", \"BorderCornerShape\", \"BorderImage\", \"BorderImageOutset\", \"BorderImageRepeat\", \"BorderImageSlice\", \"BorderImageSource\", \"BorderImageWidth\", \"BorderInlineEnd\", \"BorderInlineEndColor\", \"BorderInlineEndStyle\", \"BorderInlineEndWidth\", \"BorderInlineStart\", \"BorderInlineStartColor\", \"BorderInlineStartStyle\", \"BorderInlineStartWidth\", \"BorderLeft\", \"BorderLeftColor\", \"BorderLeftStyle\", \"BorderLeftWidth\", \"BorderRadius\", \"BorderRight\", \"BorderRightColor\", \"BorderRightStyle\", \"BorderRightWidth\", \"BorderSpacing\", \"BorderStyle\", \"BorderTop\", \"BorderTopColor\", \"BorderTopLeftRadius\", \"BorderTopRightRadius\", \"BorderTopStyle\", \"BorderTopWidth\", \"BorderWidth\", \"Bottom\", \"BoxAlign\", \"BoxDecorationBreak\", \"BoxDirection\", \"BoxFlex\", \"BoxFlexGroup\", \"BoxLineProgression\", \"BoxLines\", \"BoxOrdinalGroup\", \"BoxShadow\", \"BoxSizing\", \"BreakAfter\", \"BreakBefore\", \"BreakInside\", \"CaptionSide\", \"CaretColor\", \"Clear\", \"Clip\", \"ClipPath\", \"ClipRule\", \"Color\", \"ColorInterpolation\", \"ColorInterpolationFilters\", \"ColorProfile\", \"ColorRendering\", \"ColumnCount\", \"ColumnFill\", \"ColumnGap\", \"ColumnRule\", \"ColumnRuleColor\", \"ColumnRuleStyle\", \"ColumnRuleWidth\", \"ColumnSpan\", \"ColumnWidth\", \"Columns\", \"Content\", \"CounterIncrement\", \"CounterReset\", \"Cue\", \"CueAfter\", \"Cursor\", \"Direction\", \"Display\", \"DominantBaseline\", \"EmptyCells\", \"EnableBackground\", \"Fill\", \"FillOpacity\", \"FillRule\", \"Filter\", \"Flex\", \"FlexAlign\", \"FlexBasis\", \"FlexDirection\", \"FlexFlow\", \"FlexGrow\", \"FlexItemAlign\", \"FlexLinePack\", \"FlexOrder\", \"FlexShrink\", \"FlexWrap\", \"Float\", \"FloodColor\", \"FloodOpacity\", \"FlowFrom\", \"Font\", \"FontFamily\", \"FontFeatureSettings\", \"FontKerning\", \"FontLanguageOverride\", \"FontSize\", \"FontSizeAdjust\", \"FontStretch\", \"FontStyle\", \"FontSynthesis\", \"FontVariant\", \"FontVariantAlternates\", \"FontVariantCaps\", \"FontVariantEastAsian\", \"FontVariantLigatures\", \"FontVariantNumeric\", \"FontVariantPosition\", \"FontWeight\", \"GlyphOrientationHorizontal\", \"GlyphOrientationVertical\", \"Grid\", \"GridArea\", \"GridAutoColumns\", \"GridAutoFlow\", \"GridAutoRows\", \"GridColumn\", \"GridColumnEnd\", \"GridColumnGap\", \"GridColumnStart\", \"GridGap\", \"GridRow\", \"GridRowEnd\", \"GridRowGap\", \"GridRowPosition\", \"GridRowSpan\", \"GridRowStart\", \"GridTemplate\", \"GridTemplateAreas\", \"GridTemplateColumns\", \"GridTemplateRows\", \"HangingPunctuation\", \"Height\", \"HyphenateLimitChars\", \"HyphenateLimitLines\", \"HyphenateLimitZone\", \"Hyphens\", \"ImageOrientation\", \"ImageRendering\", \"ImageResolution\", \"ImeMode\", \"InlineSize\", \"Isolation\", \"JustifyContent\", \"JustifySelf\", \"Kerning\", \"LayoutGrid\", \"LayoutGridChar\", \"LayoutGridLine\", \"LayoutGridMode\", \"LayoutGridType\", \"Left\", \"LetterSpacing\", \"LightingColor\", \"LineBreak\", \"LineClamp\", \"LineHeight\", \"ListStyle\", \"ListStyleImage\", \"ListStylePosition\", \"ListStyleType\", \"Margin\", \"MarginBlockEnd\", \"MarginBlockStart\", \"MarginBottom\", \"MarginInlineEnd\", \"MarginInlineStart\", \"MarginLeft\", \"MarginRight\", \"MarginTop\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"MarqueeDirection\", \"MarqueeStyle\", \"Mask\", \"MaskBorder\", \"MaskBorderRepeat\", \"MaskBorderSlice\", \"MaskBorderSource\", \"MaskBorderWidth\", \"MaskClip\", \"MaskComposite\", \"MaskImage\", \"MaskMode\", \"MaskOrigin\", \"MaskPosition\", \"MaskRepeat\", \"MaskSize\", \"MaskType\", \"MaxFontSize\", \"MaxHeight\", \"MaxWidth\", \"MinBlockSize\", \"MinHeight\", \"MinInlineSize\", \"MinWidth\", \"MixBlendMode\", \"ObjectFit\", \"ObjectPosition\", \"OffsetBlockEnd\", \"OffsetBlockStart\", \"OffsetInlineEnd\", \"OffsetInlineStart\", \"Opacity\", \"Order\", \"Orphans\", \"Outline\", \"OutlineColor\", \"OutlineOffset\", \"OutlineStyle\", \"OutlineWidth\", \"OverflowStyle\", \"OverflowWrap\", \"OverflowX\", \"OverflowY\", \"Padding\", \"PaddingBlockEnd\", \"PaddingBlockStart\", \"PaddingBottom\", \"PaddingInlineEnd\", \"PaddingInlineStart\", \"PaddingLeft\", \"PaddingRight\", \"PaddingTop\", \"PageBreakAfter\", \"PageBreakBefore\", \"PageBreakInside\", \"Pause\", \"PauseAfter\", \"PauseBefore\", \"Perspective\", \"PerspectiveOrigin\", \"PointerEvents\", \"Position\", \"PunctuationTrim\", \"Quotes\", \"RegionFragment\", \"Resize\", \"RestAfter\", \"RestBefore\", \"Right\", \"RubyAlign\", \"RubyMerge\", \"RubyPosition\", \"ScrollBehavior\", \"ScrollSnapCoordinate\", \"ScrollSnapDestination\", \"ScrollSnapType\", \"ShapeImageThreshold\", \"ShapeInside\", \"ShapeMargin\", \"ShapeOutside\", \"ShapeRendering\", \"Speak\", \"SpeakAs\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeLinejoin\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TabSize\", \"TableLayout\", \"TextAlign\", \"TextAlignLast\", \"TextAnchor\", \"TextCombineUpright\", \"TextDecoration\", \"TextDecorationColor\", \"TextDecorationLine\", \"TextDecorationLineThrough\", \"TextDecorationNone\", \"TextDecorationOverline\", \"TextDecorationSkip\", \"TextDecorationStyle\", \"TextDecorationUnderline\", \"TextEmphasis\", \"TextEmphasisColor\", \"TextEmphasisPosition\", \"TextEmphasisStyle\", \"TextHeight\", \"TextIndent\", \"TextJustify\", \"TextJustifyTrim\", \"TextKashidaSpace\", \"TextLineThrough\", \"TextLineThroughColor\", \"TextLineThroughMode\", \"TextLineThroughStyle\", \"TextLineThroughWidth\", \"TextOrientation\", \"TextOverflow\", \"TextOverline\", \"TextOverlineColor\", \"TextOverlineMode\", \"TextOverlineStyle\", \"TextOverlineWidth\", \"TextRendering\", \"TextScript\", \"TextShadow\", \"TextTransform\", \"TextUnderlinePosition\", \"TextUnderlineStyle\", \"Top\", \"TouchAction\", \"Transform\", \"TransformBox\", \"TransformOrigin\", \"TransformOriginZ\", \"TransformStyle\", \"Transition\", \"TransitionDelay\", \"TransitionDuration\", \"TransitionProperty\", \"TransitionTimingFunction\", \"UnicodeBidi\", \"UnicodeRange\", \"UserFocus\", \"UserInput\", \"UserSelect\", \"VerticalAlign\", \"Visibility\", \"VoiceBalance\", \"VoiceDuration\", \"VoiceFamily\", \"VoicePitch\", \"VoiceRange\", \"VoiceRate\", \"VoiceStress\", \"VoiceVolume\", \"WhiteSpace\", \"WhiteSpaceTreatment\", \"Widows\", \"Width\", \"WillChange\", \"WordBreak\", \"WordSpacing\", \"WordWrap\", \"WrapFlow\", \"WrapMargin\", \"WrapOption\", \"WritingMode\", \"ZIndex\", \"Zoom\", \"Custom\"];\n    }\n}\n\nexport function CSSProp$reflection() {\n    return union_type(\"Fable.React.Props.CSSProp\", [], CSSProp, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport function stringEnum(case$) {\n    return toString(case$);\n}\n\nexport function CSSProp_Overflow_25F0CD75(overflow, overflowY) {\n    if (overflowY == null) {\n        return [\"overflow\", stringEnum(overflow)];\n    }\n    else {\n        const value = overflowY;\n        return [\"overflow\", (stringEnum(overflow) + \" \") + stringEnum(value)];\n    }\n}\n\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { clear, equals, isArrayLike, isDisposable, toIterator, disposeSafe, getEnumerator } from \"./Util.js\";\r\nimport { toString } from \"./Types.js\";\r\nimport { class_type } from \"./Reflection.js\";\r\nimport { some, value as value_1 } from \"./Option.js\";\r\nimport { Operators_Lock, Operators_NullArg } from \"./FSharp.Core.js\";\r\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\r\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\r\nimport { SR_indexOutOfBounds } from \"./Global.js\";\r\n\r\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\r\n\r\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\r\n\r\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\r\n\r\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\r\n\r\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\r\n\r\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\r\n\r\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\r\n\r\nexport function Enumerator_noReset() {\r\n    throw (new Error(SR_resetNotSupported));\r\n}\r\n\r\nexport function Enumerator_notStarted() {\r\n    throw (new Error(SR_enumerationNotStarted));\r\n}\r\n\r\nexport function Enumerator_alreadyFinished() {\r\n    throw (new Error(SR_enumerationAlreadyFinished));\r\n}\r\n\r\nexport class Enumerator_Seq {\r\n    constructor(f) {\r\n        this.f = f;\r\n    }\r\n    toString() {\r\n        const xs = this;\r\n        const maxCount = 4;\r\n        let i = 0;\r\n        let str = \"seq [\";\r\n        const e = getEnumerator(xs);\r\n        try {\r\n            while ((i < maxCount) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                if (i > 0) {\r\n                    str = (str + \"; \");\r\n                }\r\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                i = ((i + 1) | 0);\r\n            }\r\n            if (i === maxCount) {\r\n                str = (str + \"; ...\");\r\n            }\r\n            return str + \"]\";\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n    GetEnumerator() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const x = this;\r\n        return x.f();\r\n    }\r\n}\r\n\r\nexport function Enumerator_Seq$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\r\n}\r\n\r\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\r\n    return new Enumerator_Seq(f);\r\n}\r\n\r\nexport class Enumerator_FromFunctions$1 {\r\n    constructor(current, next, dispose) {\r\n        this.current = current;\r\n        this.next = next;\r\n        this.dispose = dispose;\r\n    }\r\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.get_Current\"]() {\r\n        const __ = this;\r\n        return __.current();\r\n    }\r\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\r\n        const __ = this;\r\n        return __.next();\r\n    }\r\n    [\"System.Collections.IEnumerator.Reset\"]() {\r\n        Enumerator_noReset();\r\n    }\r\n    Dispose() {\r\n        const __ = this;\r\n        __.dispose();\r\n    }\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\r\n}\r\n\r\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\r\n    return new Enumerator_FromFunctions$1(current, next, dispose);\r\n}\r\n\r\nexport function Enumerator_cast(e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        if (isDisposable(e)) {\r\n            disposeSafe(e);\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_concat(sources) {\r\n    let outerOpt = void 0;\r\n    let innerOpt = void 0;\r\n    let started = false;\r\n    let finished = false;\r\n    let curr = void 0;\r\n    const finish = () => {\r\n        finished = true;\r\n        if (innerOpt != null) {\r\n            const inner = innerOpt;\r\n            try {\r\n                disposeSafe(inner);\r\n            }\r\n            finally {\r\n                innerOpt = (void 0);\r\n            }\r\n        }\r\n        if (outerOpt != null) {\r\n            const outer = outerOpt;\r\n            try {\r\n                disposeSafe(outer);\r\n            }\r\n            finally {\r\n                outerOpt = (void 0);\r\n            }\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        else if (finished) {\r\n            Enumerator_alreadyFinished();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        let copyOfStruct;\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (finished) {\r\n            return false;\r\n        }\r\n        else {\r\n            let res = void 0;\r\n            while (res == null) {\r\n                const matchValue = [outerOpt, innerOpt];\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        const inner_1 = matchValue[1];\r\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                            res = true;\r\n                        }\r\n                        else {\r\n                            try {\r\n                                disposeSafe(inner_1);\r\n                            }\r\n                            finally {\r\n                                innerOpt = (void 0);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        const outer_1 = matchValue[0];\r\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                            innerOpt = ((copyOfStruct = ie, getEnumerator(copyOfStruct)));\r\n                        }\r\n                        else {\r\n                            finish();\r\n                            res = false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    outerOpt = getEnumerator(sources);\r\n                }\r\n            }\r\n            return value_1(res);\r\n        }\r\n    }, () => {\r\n        if (!finished) {\r\n            finish();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_enumerateThenFinally(f, e) {\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\r\n        try {\r\n            disposeSafe(e);\r\n        }\r\n        finally {\r\n            f();\r\n        }\r\n    });\r\n}\r\n\r\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\r\n    let started = false;\r\n    let curr = void 0;\r\n    let state = some(openf());\r\n    const dispose = () => {\r\n        if (state != null) {\r\n            const x_1 = value_1(state);\r\n            try {\r\n                closef(x_1);\r\n            }\r\n            finally {\r\n                state = (void 0);\r\n            }\r\n        }\r\n    };\r\n    const finish = () => {\r\n        try {\r\n            dispose();\r\n        }\r\n        finally {\r\n            curr = (void 0);\r\n        }\r\n    };\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (!started) {\r\n            Enumerator_notStarted();\r\n        }\r\n        if (curr != null) {\r\n            return value_1(curr);\r\n        }\r\n        else {\r\n            return Enumerator_alreadyFinished();\r\n        }\r\n    }, () => {\r\n        if (!started) {\r\n            started = true;\r\n        }\r\n        if (state != null) {\r\n            const s = value_1(state);\r\n            let matchValue_1;\r\n            try {\r\n                matchValue_1 = compute(s);\r\n            }\r\n            catch (matchValue) {\r\n                finish();\r\n                throw matchValue;\r\n            }\r\n            if (matchValue_1 != null) {\r\n                curr = matchValue_1;\r\n                return true;\r\n            }\r\n            else {\r\n                finish();\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, dispose);\r\n}\r\n\r\nexport function Enumerator_unfold(f, state) {\r\n    let curr = void 0;\r\n    let acc = state;\r\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\r\n        if (curr != null) {\r\n            const x = curr[0];\r\n            const st = curr[1];\r\n            return x;\r\n        }\r\n        else {\r\n            return Enumerator_notStarted();\r\n        }\r\n    }, () => {\r\n        curr = f(acc);\r\n        if (curr != null) {\r\n            const x_1 = curr[0];\r\n            const st_1 = curr[1];\r\n            acc = st_1;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }, () => {\r\n    });\r\n}\r\n\r\nexport function indexNotFound() {\r\n    throw (new Error(SR_keyNotFoundAlt));\r\n}\r\n\r\nexport function checkNonNull(argName, arg) {\r\n    if (arg == null) {\r\n        Operators_NullArg(argName);\r\n    }\r\n}\r\n\r\nexport function mkSeq(f) {\r\n    return Enumerator_Seq_$ctor_673A07F2(f);\r\n}\r\n\r\nexport function ofSeq(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return getEnumerator(xs);\r\n}\r\n\r\nexport function delay(generator) {\r\n    return mkSeq(() => getEnumerator(generator()));\r\n}\r\n\r\nexport function concat(sources) {\r\n    return mkSeq(() => Enumerator_concat(sources));\r\n}\r\n\r\nexport function unfold(generator, state) {\r\n    return mkSeq(() => Enumerator_unfold(generator, state));\r\n}\r\n\r\nexport function empty() {\r\n    return delay(() => (new Array(0)));\r\n}\r\n\r\nexport function singleton(x) {\r\n    return delay(() => singleton_1(x));\r\n}\r\n\r\nexport function ofArray(arr) {\r\n    return arr;\r\n}\r\n\r\nexport function toArray(xs) {\r\n    if (xs instanceof FSharpList) {\r\n        return toArray_1(xs);\r\n    }\r\n    else {\r\n        return Array.from(xs);\r\n    }\r\n}\r\n\r\nexport function ofList(xs) {\r\n    return xs;\r\n}\r\n\r\nexport function toList(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return ofArray_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return xs;\r\n    }\r\n    else {\r\n        return ofSeq_1(xs);\r\n    }\r\n}\r\n\r\nexport function generate(create, compute, dispose) {\r\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\r\n}\r\n\r\nexport function generateIndexed(create, compute, dispose) {\r\n    return mkSeq(() => {\r\n        let i = -1;\r\n        return Enumerator_generateWhileSome(create, (x) => {\r\n            i = ((i + 1) | 0);\r\n            return compute(i, x);\r\n        }, dispose);\r\n    });\r\n}\r\n\r\nexport function append(xs, ys) {\r\n    return concat([xs, ys]);\r\n}\r\n\r\nexport function cast(xs) {\r\n    return mkSeq(() => {\r\n        checkNonNull(\"source\", xs);\r\n        return Enumerator_cast(getEnumerator(xs));\r\n    });\r\n}\r\n\r\nexport function choose(chooser, xs) {\r\n    return generate(() => ofSeq(xs), (e) => {\r\n        let curr = void 0;\r\n        while ((curr == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return curr;\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function compareWith(comparer, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let c = 0;\r\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n            while (((c === 0) && b1) && b2) {\r\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\r\n                if (c === 0) {\r\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\r\n                }\r\n            }\r\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\r\n        }\r\n        finally {\r\n            disposeSafe(e2);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e1);\r\n    }\r\n}\r\n\r\nexport function contains(value, xs, comparer) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function enumerateFromFunctions(create, moveNext, current) {\r\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\r\n        const matchValue = x_1;\r\n        if (isDisposable(matchValue)) {\r\n            disposeSafe(matchValue);\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateThenFinally(source, compensation) {\r\n    const compensation_1 = compensation;\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\r\n        }\r\n        catch (matchValue) {\r\n            compensation_1();\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateUsing(resource, source) {\r\n    const compensation = () => {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            let copyOfStruct = resource;\r\n            disposeSafe(copyOfStruct);\r\n        }\r\n    };\r\n    return mkSeq(() => {\r\n        try {\r\n            return Enumerator_enumerateThenFinally(compensation, (ofSeq)(source(resource)));\r\n        }\r\n        catch (matchValue_1) {\r\n            compensation();\r\n            throw matchValue_1;\r\n        }\r\n    });\r\n}\r\n\r\nexport function enumerateWhile(guard, xs) {\r\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\r\n}\r\n\r\nexport function filter(f, xs) {\r\n    return choose((x) => {\r\n        if (f(x)) {\r\n            return some(x);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, xs);\r\n}\r\n\r\nexport function exists(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let found = false;\r\n        while ((!found) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return found;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function exists2(predicate, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let found = false;\r\n            while (((!found) && e1[\"System.Collections.IEnumerator.MoveNext\"]()) && e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return found;\r\n        }\r\n        finally {\r\n            disposeSafe(e2);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e1);\r\n    }\r\n}\r\n\r\nexport function exactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n            else {\r\n                return v;\r\n            }\r\n        }\r\n        else {\r\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function tryExactlyOne(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function tryFind(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            if (predicate(c)) {\r\n                res = some(c);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function find(predicate, xs) {\r\n    const matchValue = tryFind(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindBack(predicate, xs) {\r\n    return tryFindBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findBack(predicate, xs) {\r\n    const matchValue = tryFindBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function tryFindIndex(predicate, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (i_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const i = i_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\r\n                        return i;\r\n                    }\r\n                    else {\r\n                        i_mut = (i + 1);\r\n                        continue loop;\r\n                    }\r\n                }\r\n                else {\r\n                    return void 0;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return loop(0);\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function findIndex(predicate, xs) {\r\n    const matchValue = tryFindIndex(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function tryFindIndexBack(predicate, xs) {\r\n    return tryFindIndexBack_1(predicate, toArray(xs));\r\n}\r\n\r\nexport function findIndexBack(predicate, xs) {\r\n    const matchValue = tryFindIndexBack(predicate, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound() | 0;\r\n    }\r\n    else {\r\n        return matchValue | 0;\r\n    }\r\n}\r\n\r\nexport function fold(folder, state, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let acc = state;\r\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return acc;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function foldBack(folder, xs, state) {\r\n    return foldBack_1(folder, toArray(xs), state);\r\n}\r\n\r\nexport function fold2(folder, state, xs, ys) {\r\n    const e1 = ofSeq(xs);\r\n    try {\r\n        const e2 = ofSeq(ys);\r\n        try {\r\n            let acc = state;\r\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            return acc;\r\n        }\r\n        finally {\r\n            disposeSafe(e2);\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e1);\r\n    }\r\n}\r\n\r\nexport function foldBack2(folder, xs, ys, state) {\r\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\r\n}\r\n\r\nexport function forAll(predicate, xs) {\r\n    return !exists((x) => (!predicate(x)), xs);\r\n}\r\n\r\nexport function forAll2(predicate, xs, ys) {\r\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\r\n}\r\n\r\nexport function tryHead(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryHead_1(xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryHead_2(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function head(xs) {\r\n    const matchValue = tryHead(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function initialize(count, f) {\r\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\r\n}\r\n\r\nexport function initializeInfinite(f) {\r\n    return initialize(2147483647, f);\r\n}\r\n\r\nexport function isEmpty(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length === 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return isEmpty_1(xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function tryItem(index, xs) {\r\n    if (isArrayLike(xs)) {\r\n        return tryItem_1(index, xs);\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return tryItem_2(index, xs);\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            const loop = (index_1_mut) => {\r\n                loop:\r\n                while (true) {\r\n                    const index_1 = index_1_mut;\r\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        return void 0;\r\n                    }\r\n                    else if (index_1 === 0) {\r\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    }\r\n                    else {\r\n                        index_1_mut = (index_1 - 1);\r\n                        continue loop;\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n            return loop(index);\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function item(index, xs) {\r\n    const matchValue = tryItem(index, xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function iterate(action, xs) {\r\n    fold((unitVar0, x) => {\r\n        action(x);\r\n    }, void 0, xs);\r\n}\r\n\r\nexport function iterate2(action, xs, ys) {\r\n    fold2((unitVar0, x, y) => {\r\n        action(x, y);\r\n    }, void 0, xs, ys);\r\n}\r\n\r\nexport function iterateIndexed(action, xs) {\r\n    fold((i, x) => {\r\n        action(i, x);\r\n        return (i + 1) | 0;\r\n    }, 0, xs);\r\n}\r\n\r\nexport function iterateIndexed2(action, xs, ys) {\r\n    fold2((i, x, y) => {\r\n        action(i, x, y);\r\n        return (i + 1) | 0;\r\n    }, 0, xs, ys);\r\n}\r\n\r\nexport function tryLast(xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    return acc;\r\n                }\r\n                else {\r\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                    continue loop;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function last(xs) {\r\n    const matchValue = tryLast(xs);\r\n    if (matchValue == null) {\r\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function length(xs) {\r\n    if (isArrayLike(xs)) {\r\n        return xs.length | 0;\r\n    }\r\n    else if (xs instanceof FSharpList) {\r\n        return length_1(xs) | 0;\r\n    }\r\n    else {\r\n        const e = ofSeq(xs);\r\n        try {\r\n            let count = 0;\r\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                count = ((count + 1) | 0);\r\n            }\r\n            return count | 0;\r\n        }\r\n        finally {\r\n            disposeSafe(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport function map(mapping, xs) {\r\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function mapIndexed(mapping, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function indexed(xs) {\r\n    return mapIndexed((i, x) => [i, x], xs);\r\n}\r\n\r\nexport function map2(mapping, xs, ys) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            disposeSafe(tupledArg_1[0]);\r\n        }\r\n        finally {\r\n            disposeSafe(tupledArg_1[1]);\r\n        }\r\n    });\r\n}\r\n\r\nexport function mapIndexed2(mapping, xs, ys) {\r\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            disposeSafe(tupledArg_1[0]);\r\n        }\r\n        finally {\r\n            disposeSafe(tupledArg_1[1]);\r\n        }\r\n    });\r\n}\r\n\r\nexport function map3(mapping, xs, ys, zs) {\r\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        const e3 = tupledArg[2];\r\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() && e2[\"System.Collections.IEnumerator.MoveNext\"]()) && e3[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\r\n    }, (tupledArg_1) => {\r\n        try {\r\n            disposeSafe(tupledArg_1[0]);\r\n        }\r\n        finally {\r\n            try {\r\n                disposeSafe(tupledArg_1[1]);\r\n            }\r\n            finally {\r\n                disposeSafe(tupledArg_1[2]);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function readOnly(xs) {\r\n    checkNonNull(\"source\", xs);\r\n    return map((x) => x, xs);\r\n}\r\n\r\nexport class CachedSeq$1 {\r\n    constructor(cleanup, res) {\r\n        this.cleanup = cleanup;\r\n        this.res = res;\r\n    }\r\n    Dispose() {\r\n        const _ = this;\r\n        _.cleanup();\r\n    }\r\n    GetEnumerator() {\r\n        const _ = this;\r\n        return getEnumerator(_.res);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return toIterator(this.GetEnumerator());\r\n    }\r\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\r\n        const _ = this;\r\n        return getEnumerator(_.res);\r\n    }\r\n}\r\n\r\nexport function CachedSeq$1$reflection(gen0) {\r\n    return class_type(\"SeqModule.CachedSeq`1\", [gen0], CachedSeq$1);\r\n}\r\n\r\nexport function CachedSeq$1_$ctor_Z7A8347D4(cleanup, res) {\r\n    return new CachedSeq$1(cleanup, res);\r\n}\r\n\r\nexport function CachedSeq$1__Clear(_) {\r\n    _.cleanup();\r\n}\r\n\r\nexport function cache(source) {\r\n    checkNonNull(\"source\", source);\r\n    const prefix = [];\r\n    let enumeratorR = void 0;\r\n    return CachedSeq$1_$ctor_Z7A8347D4(() => {\r\n        Operators_Lock(prefix, () => {\r\n            clear(prefix);\r\n            let pattern_matching_result, e;\r\n            if (enumeratorR != null) {\r\n                if (value_1(enumeratorR) != null) {\r\n                    pattern_matching_result = 0;\r\n                    e = value_1(enumeratorR);\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n            switch (pattern_matching_result) {\r\n                case 0: {\r\n                    disposeSafe(e);\r\n                    break;\r\n                }\r\n            }\r\n            enumeratorR = (void 0);\r\n        });\r\n    }, unfold((i_1) => Operators_Lock(prefix, () => {\r\n        if (i_1 < prefix.length) {\r\n            return [prefix[i_1], i_1 + 1];\r\n        }\r\n        else {\r\n            if (i_1 >= prefix.length) {\r\n                let optEnumerator_2;\r\n                if (enumeratorR != null) {\r\n                    optEnumerator_2 = value_1(enumeratorR);\r\n                }\r\n                else {\r\n                    const optEnumerator = getEnumerator(source);\r\n                    enumeratorR = some(optEnumerator);\r\n                    optEnumerator_2 = optEnumerator;\r\n                }\r\n                if (optEnumerator_2 == null) {\r\n                }\r\n                else {\r\n                    const enumerator = optEnumerator_2;\r\n                    if (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        void (prefix.push(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\r\n                    }\r\n                    else {\r\n                        disposeSafe(enumerator);\r\n                        enumeratorR = some(void 0);\r\n                    }\r\n                }\r\n            }\r\n            return (i_1 < prefix.length) ? [prefix[i_1], i_1 + 1] : (void 0);\r\n        }\r\n    }), 0));\r\n}\r\n\r\nexport function allPairs(xs, ys) {\r\n    const ysCache = cache(ys);\r\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\r\n}\r\n\r\nexport function mapFold(mapping, state, xs) {\r\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function mapFoldBack(mapping, xs, state) {\r\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\r\n    return [readOnly(patternInput[0]), patternInput[1]];\r\n}\r\n\r\nexport function tryPick(chooser, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        let res = void 0;\r\n        while ((res == null) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        return res;\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function pick(chooser, xs) {\r\n    const matchValue = tryPick(chooser, xs);\r\n    if (matchValue == null) {\r\n        return indexNotFound();\r\n    }\r\n    else {\r\n        return value_1(matchValue);\r\n    }\r\n}\r\n\r\nexport function reduce(folder, xs) {\r\n    const e = ofSeq(xs);\r\n    try {\r\n        const loop = (acc_mut) => {\r\n            loop:\r\n            while (true) {\r\n                const acc = acc_mut;\r\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n                    continue loop;\r\n                }\r\n                else {\r\n                    return acc;\r\n                }\r\n                break;\r\n            }\r\n        };\r\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else {\r\n            throw (new Error(SR_inputSequenceEmpty));\r\n        }\r\n    }\r\n    finally {\r\n        disposeSafe(e);\r\n    }\r\n}\r\n\r\nexport function reduceBack(folder, xs) {\r\n    const arr = toArray(xs);\r\n    if (arr.length > 0) {\r\n        return arr.reduceRight(folder);\r\n    }\r\n    else {\r\n        throw (new Error(SR_inputSequenceEmpty));\r\n    }\r\n}\r\n\r\nexport function replicate(n, x) {\r\n    return initialize(n, (_arg1) => x);\r\n}\r\n\r\nexport function reverse(xs) {\r\n    return delay(() => ofArray(reverse_1(toArray(xs))));\r\n}\r\n\r\nexport function scan(folder, state, xs) {\r\n    return delay(() => {\r\n        let acc = state;\r\n        return concat([singleton(state), map((x) => {\r\n            acc = folder(acc, x);\r\n            return acc;\r\n        }, xs)]);\r\n    });\r\n}\r\n\r\nexport function scanBack(folder, xs, state) {\r\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\r\n}\r\n\r\nexport function skip(count, source) {\r\n    return mkSeq(() => {\r\n        const e = ofSeq(source);\r\n        try {\r\n            for (let _ = 1; _ <= count; _++) {\r\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n                }\r\n            }\r\n            return Enumerator_enumerateThenFinally(() => {\r\n            }, e);\r\n        }\r\n        catch (matchValue) {\r\n            disposeSafe(e);\r\n            throw matchValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function skipWhile(predicate, xs) {\r\n    return delay(() => {\r\n        let skipped = true;\r\n        return filter((x) => {\r\n            if (skipped) {\r\n                skipped = predicate(x);\r\n            }\r\n            return !skipped;\r\n        }, xs);\r\n    });\r\n}\r\n\r\nexport function tail(xs) {\r\n    return skip(1, xs);\r\n}\r\n\r\nexport function take(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if (i < count) {\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\r\n            }\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function takeWhile(predicate, xs) {\r\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() && predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function truncate(count, xs) {\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) && e[\"System.Collections.IEnumerator.MoveNext\"]()) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function zip(xs, ys) {\r\n    return map2((x, y) => [x, y], xs, ys);\r\n}\r\n\r\nexport function zip3(xs, ys, zs) {\r\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\r\n}\r\n\r\nexport function collect(mapping, xs) {\r\n    return delay(() => concat(map(mapping, xs)));\r\n}\r\n\r\nexport function where(predicate, xs) {\r\n    return filter(predicate, xs);\r\n}\r\n\r\nexport function pairwise(xs) {\r\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\r\n}\r\n\r\nexport function splitInto(chunks, xs) {\r\n    return delay(() => ofArray(map_1(ofArray, splitInto_1(chunks, toArray(xs)))));\r\n}\r\n\r\nexport function windowed(windowSize, xs) {\r\n    return delay(() => ofArray(map_1(ofArray, windowed_1(windowSize, toArray(xs)))));\r\n}\r\n\r\nexport function transpose(xss) {\r\n    return delay(() => ofArray(map_1(ofArray, transpose_1(map_1(toArray, toArray(xss))))));\r\n}\r\n\r\nexport function sortWith(comparer, xs) {\r\n    return delay(() => {\r\n        const arr = toArray(xs);\r\n        arr.sort(comparer);\r\n        return ofArray(arr);\r\n    });\r\n}\r\n\r\nexport function sort(xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\r\n}\r\n\r\nexport function sortBy(projection, xs, comparer) {\r\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\r\n}\r\n\r\nexport function sortDescending(xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\r\n}\r\n\r\nexport function sortByDescending(projection, xs, comparer) {\r\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\r\n}\r\n\r\nexport function sum(xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\r\n}\r\n\r\nexport function sumBy(f, xs, adder) {\r\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\r\n}\r\n\r\nexport function maxBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function max(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\r\n}\r\n\r\nexport function minBy(projection, xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function min(xs, comparer) {\r\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\r\n}\r\n\r\nexport function average(xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, x);\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function averageBy(f, xs, averager) {\r\n    let count = 0;\r\n    const total = fold((acc, x) => {\r\n        count = ((count + 1) | 0);\r\n        return averager.Add(acc, f(x));\r\n    }, averager.GetZero(), xs);\r\n    if (count === 0) {\r\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\r\n    }\r\n    else {\r\n        return averager.DivideByInt(total, count);\r\n    }\r\n}\r\n\r\nexport function permute(f, xs) {\r\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\r\n}\r\n\r\nexport function chunkBySize(chunkSize, xs) {\r\n    return delay(() => ofArray(map_1(ofArray, chunkBySize_1(chunkSize, toArray(xs)))));\r\n}\r\n\r\nexport function insertAt(index, y, xs) {\r\n    let isDone = false;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if ((isDone ? true : (i < index)) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else if (i === index) {\r\n            isDone = true;\r\n            return some(y);\r\n        }\r\n        else {\r\n            if (!isDone) {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function insertManyAt(index, ys, xs) {\r\n    let status = -1;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\r\n        const e1 = tupledArg[0];\r\n        const e2 = tupledArg[1];\r\n        if (i === index) {\r\n            status = 0;\r\n        }\r\n        let inserted;\r\n        if (status === 0) {\r\n            if (e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                inserted = some(e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                status = 1;\r\n                inserted = (void 0);\r\n            }\r\n        }\r\n        else {\r\n            inserted = (void 0);\r\n        }\r\n        if (inserted == null) {\r\n            if (e1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                if (status < 1) {\r\n                    throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n                }\r\n                return void 0;\r\n            }\r\n        }\r\n        else {\r\n            return some(value_1(inserted));\r\n        }\r\n    }, (tupledArg_1) => {\r\n        disposeSafe(tupledArg_1[0]);\r\n        disposeSafe(tupledArg_1[1]);\r\n    });\r\n}\r\n\r\nexport function removeAt(index, xs) {\r\n    let isDone = false;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if ((isDone ? true : (i < index)) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else if ((i === index) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            isDone = true;\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n        else {\r\n            if (!isDone) {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function removeManyAt(index, count, xs) {\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if (i < index) {\r\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n            }\r\n            else {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n        }\r\n        else {\r\n            if (i === index) {\r\n                for (let _ = 1; _ <= count; _++) {\r\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"count\"));\r\n                    }\r\n                }\r\n            }\r\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\nexport function updateAt(index, y, xs) {\r\n    let isDone = false;\r\n    if (index < 0) {\r\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n    }\r\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\r\n        if ((isDone ? true : (i < index)) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\r\n        }\r\n        else if ((i === index) && e[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            isDone = true;\r\n            return some(y);\r\n        }\r\n        else {\r\n            if (!isDone) {\r\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\r\n            }\r\n            return void 0;\r\n        }\r\n    }, (e_1) => {\r\n        disposeSafe(e_1);\r\n    });\r\n}\r\n\r\n","import { disposeSafe, structuralHash, equals } from \"./Util.js\";\r\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\r\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\r\n\r\nexport const LanguagePrimitives_GenericEqualityComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport const LanguagePrimitives_GenericEqualityERComparer = {\r\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\r\n        return equals(x, y);\r\n    },\r\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\r\n        return structuralHash(x_1);\r\n    },\r\n};\r\n\r\nexport function LanguagePrimitives_FastGenericComparer() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\r\n    return ComparisonIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\r\n    return HashIdentity_Structural();\r\n}\r\n\r\nexport function Operators_Failure(message) {\r\n    return new Error(message);\r\n}\r\n\r\nexport function Operators_FailurePattern(exn) {\r\n    return exn.message;\r\n}\r\n\r\nexport function Operators_NullArg(x) {\r\n    throw (new Error(x));\r\n}\r\n\r\nexport function Operators_Using(resource, action) {\r\n    try {\r\n        return action(resource);\r\n    }\r\n    finally {\r\n        if (equals(resource, null)) {\r\n        }\r\n        else {\r\n            disposeSafe(resource);\r\n        }\r\n    }\r\n}\r\n\r\nexport function Operators_Lock(_lockObj, action) {\r\n    return action();\r\n}\r\n\r\nexport function ExtraTopLevelOperators_LazyPattern(input) {\r\n    return input.Value;\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\r\n    return format.cont((s) => {\r\n        StringBuilder__Append_Z721C83C5(builder, s);\r\n        return continuation();\r\n    });\r\n}\r\n\r\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\r\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\r\n    }, builder, format);\r\n}\r\n\r\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","import { FSharpRef } from \"./Types.js\";\nexport function tryParse(str, defValue) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            defValue.contents = v;\n            return true;\n        }\n    }\n    return false;\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(0);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n","\nexport function Browser_Types_Event__Event_get_Value(this$) {\n    return this$.target.value;\n}\n\nexport function Browser_Types_Event__Event_get_Checked(this$) {\n    return this$.target.checked;\n}\n\n","import { Record } from \"../fable-library.3.7.6/Types.js\";\nimport { obj_type, record_type, bool_type, lambda_type, class_type, unit_type } from \"../fable-library.3.7.6/Reflection.js\";\nimport { Component } from \"react\";\nimport * as react from \"react\";\nimport { equalArrays, equals } from \"../fable-library.3.7.6/Util.js\";\n\nexport class LazyProps$1 extends Record {\n    constructor(model, render, equal) {\n        super();\n        this.model = model;\n        this.render = render;\n        this.equal = equal;\n    }\n}\n\nexport function LazyProps$1$reflection(gen0) {\n    return record_type(\"Elmish.React.LazyProps`1\", [gen0], LazyProps$1, () => [[\"model\", gen0], [\"render\", lambda_type(unit_type, class_type(\"Fable.React.ReactElement\"))], [\"equal\", lambda_type(gen0, lambda_type(gen0, bool_type))]]);\n}\n\nexport class Components_LazyView$1 extends Component {\n    constructor(props) {\n        super(props);\n    }\n    shouldComponentUpdate(nextProps, _nextState) {\n        const this$ = this;\n        return !(this$.props).equal((this$.props).model, nextProps.model);\n    }\n    render() {\n        const this$ = this;\n        return (this$.props).render();\n    }\n}\n\nexport function Components_LazyView$1$reflection(gen0) {\n    return class_type(\"Elmish.React.Components.LazyView`1\", [gen0], Components_LazyView$1, class_type(\"Fable.React.Component`2\", [LazyProps$1$reflection(gen0), obj_type], Component));\n}\n\nexport function Components_LazyView$1_$ctor_Z7829D94B(props) {\n    return new Components_LazyView$1(props);\n}\n\nexport function Common_lazyViewWith(equal, view, state) {\n    const props = new LazyProps$1(state, () => view(state), equal);\n    return react.createElement(Components_LazyView$1, props);\n}\n\nexport function Common_lazyView2With(equal, view, state, dispatch) {\n    const props = new LazyProps$1(state, () => view(state, dispatch), equal);\n    return react.createElement(Components_LazyView$1, props);\n}\n\nexport function Common_lazyView3With(equal, view, state1, state2, dispatch) {\n    const props = new LazyProps$1([state1, state2], () => view(state1, state2, dispatch), equal);\n    return react.createElement(Components_LazyView$1, props);\n}\n\nexport function Common_lazyView(view) {\n    return (state) => Common_lazyViewWith(equals, view, state);\n}\n\nexport function Common_lazyView2(view) {\n    return (state) => ((dispatch) => Common_lazyView2With(equals, view, state, dispatch));\n}\n\nexport function Common_lazyView3(view) {\n    return (state1) => ((state2) => ((dispatch) => Common_lazyView3With(equalArrays, view, state1, state2, dispatch)));\n}\n\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.7.6/List.js\";\nimport { singleton as singleton_1 } from \"../fable-library.3.7.6/AsyncBuilder.js\";\nimport { startImmediate, catchAsync } from \"../fable-library.3.7.6/Async.js\";\nimport { Timer_delay } from \"./prelude.fs.js\";\n\nexport function Cmd_exec(onError, dispatch, cmd) {\n    iterate((call) => {\n        try {\n            call(dispatch);\n        }\n        catch (ex) {\n            onError(ex);\n        }\n    }, cmd);\n}\n\nexport function Cmd_none() {\n    return empty();\n}\n\nexport function Cmd_map(f, cmd) {\n    return map((g) => ((arg_1) => {\n        g((arg) => {\n            arg_1(f(arg));\n        });\n    }), cmd);\n}\n\nexport function Cmd_batch(cmds) {\n    return concat(cmds);\n}\n\nexport function Cmd_ofSub(sub) {\n    return singleton(sub);\n}\n\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        try {\n            return dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n            return dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        try {\n            dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n        }\n    });\n}\n\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        try {\n            task(arg);\n        }\n        catch (x) {\n            dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_result(msg) {\n    return singleton((dispatch) => {\n        dispatch(msg);\n    });\n}\n\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 0) {\n                arg_1(ofSuccess(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 1) {\n                arg_1(ofError(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_result(start, task) {\n    return singleton((arg) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg1) => {\n            arg(_arg1);\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsync_start(x) {\n    Timer_delay(0, (_arg1) => {\n        startImmediate(x);\n    });\n}\n\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\n    });\n}\n\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\n    });\n}\n\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        task(arg).catch((arg_2) => {\n            dispatch(ofError(arg_2));\n        });\n    });\n}\n\nexport function Cmd_OfPromise_result(task) {\n    return singleton((dispatch) => {\n        task.then(dispatch);\n    });\n}\n\nexport function Cmd_attemptFunc(task, arg, ofError) {\n    return Cmd_OfFunc_attempt(task, arg, ofError);\n}\n\n","import { compare } from \"./Util.js\";\r\nimport { unfold, delay } from \"./Seq.js\";\r\nimport { op_Addition, fromZero } from \"./BigInt.js\";\r\nimport { op_Addition as op_Addition_1, fromParts } from \"./Decimal.js\";\r\nimport { op_Addition as op_Addition_2, fromBits } from \"./Long.js\";\r\n\r\nexport function makeRangeStepFunction(step, stop, zero, add) {\r\n    const stepComparedWithZero = compare(step, zero) | 0;\r\n    if (stepComparedWithZero === 0) {\r\n        throw (new Error(\"The step of a range cannot be zero\"));\r\n    }\r\n    const stepGreaterThanZero = stepComparedWithZero > 0;\r\n    return (x) => {\r\n        const comparedWithLast = compare(x, stop) | 0;\r\n        return ((stepGreaterThanZero && (comparedWithLast <= 0)) ? true : ((!stepGreaterThanZero) && (comparedWithLast >= 0))) ? [x, add(x, step)] : (void 0);\r\n    };\r\n}\r\n\r\nexport function integralRangeStep(start, step, stop, zero, add) {\r\n    const stepFn = makeRangeStepFunction(step, stop, zero, add);\r\n    return delay(() => unfold(stepFn, start));\r\n}\r\n\r\nexport function rangeBigInt(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromZero(), op_Addition);\r\n}\r\n\r\nexport function rangeDecimal(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromParts(0, 0, 0, false, 0), op_Addition_1);\r\n}\r\n\r\nexport function rangeDouble(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, 0, (x, y) => (x + y));\r\n}\r\n\r\nexport function rangeInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, false), op_Addition_2);\r\n}\r\n\r\nexport function rangeUInt64(start, step, stop) {\r\n    return integralRangeStep(start, step, stop, fromBits(0, 0, true), op_Addition_2);\r\n}\r\n\r\nexport function rangeChar(start, stop) {\r\n    const intStop = stop.charCodeAt(0) | 0;\r\n    return delay(() => unfold((c) => {\r\n        if (c <= intStop) {\r\n            return [String.fromCharCode(c), c + 1];\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, start.charCodeAt(0)));\r\n}\r\n\r\n","import { Union } from \"../fable-library.3.7.6/Types.js\";\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.7.6/Reflection.js\";\nimport { fill } from \"../fable-library.3.7.6/Array.js\";\nimport { comparePrimitives, max } from \"../fable-library.3.7.6/Util.js\";\nimport { some } from \"../fable-library.3.7.6/Option.js\";\nimport { singleton, collect, take, skip, append, delay } from \"../fable-library.3.7.6/Seq.js\";\nimport { rangeDouble } from \"../fable-library.3.7.6/Range.js\";\n\nexport class RingState$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Writable\", \"ReadWritable\"];\n    }\n}\n\nexport function RingState$1$reflection(gen0) {\n    return union_type(\"Elmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\n}\n\nexport class RingBuffer$1 {\n    constructor(size) {\n        this.state = (new RingState$1(0, fill(new Array(max(comparePrimitives, size, 10)), 0, max(comparePrimitives, size, 10), null), 0));\n    }\n}\n\nexport function RingBuffer$1$reflection(gen0) {\n    return class_type(\"Elmish.RingBuffer`1\", [gen0], RingBuffer$1);\n}\n\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\n    return new RingBuffer$1(size);\n}\n\nexport function RingBuffer$1__Pop(__) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items = matchValue.fields[0];\n        const rix$0027 = ((rix + 1) % items.length) | 0;\n        if (rix$0027 === wix) {\n            __.state = (new RingState$1(0, items, wix));\n        }\n        else {\n            __.state = (new RingState$1(1, items, wix, rix$0027));\n        }\n        return some(items[rix]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RingBuffer$1__Push_2B595(__, item) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix_1 = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items_1 = matchValue.fields[0];\n        items_1[wix_1] = item;\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\n        if (wix$0027 === rix) {\n            __.state = (new RingState$1(1, RingBuffer$1__doubleSize(__, rix, items_1), items_1.length, 0));\n        }\n        else {\n            __.state = (new RingState$1(1, items_1, wix$0027, rix));\n        }\n    }\n    else {\n        const ix = matchValue.fields[1] | 0;\n        const items = matchValue.fields[0];\n        items[ix] = item;\n        const wix = ((ix + 1) % items.length) | 0;\n        __.state = (new RingState$1(1, items, wix, ix));\n    }\n}\n\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeDouble(0, 1, items.length))))))));\n}\n\n","import { Record } from \"../fable-library.3.7.6/Types.js\";\nimport { record_type, class_type, string_type, tuple_type, list_type, lambda_type, unit_type } from \"../fable-library.3.7.6/Reflection.js\";\nimport { Cmd_exec, Cmd_batch, Cmd_none } from \"./cmd.fs.js\";\nimport { Log_toConsole, Log_onError } from \"./prelude.fs.js\";\nimport { curry, partialApply, uncurry } from \"../fable-library.3.7.6/Util.js\";\nimport { ofArray } from \"../fable-library.3.7.6/List.js\";\nimport { RingBuffer$1__Pop, RingBuffer$1__Push_2B595, RingBuffer$1_$ctor_Z524259A4 } from \"./ring.fs.js\";\nimport { value as value_1, some } from \"../fable-library.3.7.6/Option.js\";\nimport { printf, toText } from \"../fable-library.3.7.6/String.js\";\n\nexport class Program$4 extends Record {\n    constructor(init, update, subscribe, view, setState, onError, syncDispatch) {\n        super();\n        this.init = init;\n        this.update = update;\n        this.subscribe = subscribe;\n        this.view = view;\n        this.setState = setState;\n        this.onError = onError;\n        this.syncDispatch = syncDispatch;\n    }\n}\n\nexport function Program$4$reflection(gen0, gen1, gen2, gen3) {\n    return record_type(\"Elmish.Program`4\", [gen0, gen1, gen2, gen3], Program$4, () => [[\"init\", lambda_type(gen0, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type))))], [\"update\", lambda_type(gen2, lambda_type(gen1, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))))], [\"subscribe\", lambda_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))], [\"view\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), gen3))], [\"setState\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), unit_type))], [\"onError\", lambda_type(tuple_type(string_type, class_type(\"System.Exception\")), unit_type)], [\"syncDispatch\", lambda_type(lambda_type(gen2, unit_type), lambda_type(gen2, unit_type))]]);\n}\n\nexport function ProgramModule_mkProgram(init, update, view) {\n    return new Program$4(init, update, (_arg1) => Cmd_none(), view, (model, arg) => {\n        view(model, arg);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_mkSimple(init, update, view) {\n    return new Program$4((arg) => [init(arg), Cmd_none()], (msg, arg_1) => [update(msg, arg_1), Cmd_none()], (_arg1) => Cmd_none(), view, (model, arg_2) => {\n        view(model, arg_2);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_withSubscription(subscribe, program) {\n    return new Program$4(program.init, program.update, (model) => Cmd_batch(ofArray([program.subscribe(model), subscribe(model)])), program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withConsoleTrace(program) {\n    return new Program$4((arg) => {\n        const patternInput = program.init(arg);\n        const initModel = patternInput[0];\n        Log_toConsole(\"Initial state:\", initModel);\n        return [initModel, patternInput[1]];\n    }, (msg, model) => {\n        Log_toConsole(\"New message:\", msg);\n        const patternInput_1 = program.update(msg, model);\n        const newModel = patternInput_1[0];\n        Log_toConsole(\"Updated state:\", newModel);\n        return [newModel, patternInput_1[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withTrace(trace, program) {\n    return new Program$4(program.init, (msg, model) => {\n        const patternInput = program.update(msg, model);\n        const state = patternInput[0];\n        trace(msg, state);\n        return [state, patternInput[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withErrorHandler(onError, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, onError, program.syncDispatch);\n}\n\nexport function ProgramModule_mapErrorHandler(map, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, partialApply(1, map, [program.onError]), program.syncDispatch);\n}\n\nexport function ProgramModule_onError(program) {\n    return program.onError;\n}\n\nexport function ProgramModule_withSetState(setState, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_setState(program) {\n    return curry(2, program.setState);\n}\n\nexport function ProgramModule_view(program) {\n    return curry(2, program.view);\n}\n\nexport function ProgramModule_withSyncDispatch(syncDispatch, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, program.onError, syncDispatch);\n}\n\nexport function ProgramModule_map(mapInit, mapUpdate, mapView, mapSetState, mapSubscribe, program) {\n    const init = partialApply(1, mapInit, [program.init]);\n    const update = partialApply(2, mapUpdate, [curry(2, program.update)]);\n    const view = partialApply(2, mapView, [curry(2, program.view)]);\n    const setState = partialApply(2, mapSetState, [curry(2, program.setState)]);\n    return new Program$4(init, uncurry(2, update), partialApply(1, mapSubscribe, [program.subscribe]), uncurry(2, view), uncurry(2, setState), program.onError, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_runWith(arg, program) {\n    const patternInput = program.init(arg);\n    const model = patternInput[0];\n    const rb = RingBuffer$1_$ctor_Z524259A4(10);\n    let reentered = false;\n    let state = model;\n    const dispatch = (msg) => {\n        if (reentered) {\n            RingBuffer$1__Push_2B595(rb, msg);\n        }\n        else {\n            reentered = true;\n            let nextMsg = some(msg);\n            while (nextMsg != null) {\n                const msg_1 = value_1(nextMsg);\n                try {\n                    const patternInput_1 = program.update(msg_1, state);\n                    const model$0027 = patternInput_1[0];\n                    program.setState(model$0027, syncDispatch);\n                    Cmd_exec((ex) => {\n                        program.onError([toText(printf(\"Error in command while handling: %A\"))(msg_1), ex]);\n                    }, syncDispatch, patternInput_1[1]);\n                    state = model$0027;\n                }\n                catch (ex_1) {\n                    program.onError([toText(printf(\"Unable to process the message: %A\"))(msg_1), ex_1]);\n                }\n                nextMsg = RingBuffer$1__Pop(rb);\n            }\n            reentered = false;\n        }\n    };\n    const syncDispatch = partialApply(1, program.syncDispatch, [dispatch]);\n    program.setState(model, syncDispatch);\n    Cmd_exec((ex_3) => {\n        program.onError([\"Error intitializing:\", ex_3]);\n    }, syncDispatch, Cmd_batch(ofArray([(() => {\n        try {\n            return program.subscribe(model);\n        }\n        catch (ex_2) {\n            program.onError([\"Unable to subscribe:\", ex_2]);\n            return Cmd_none();\n        }\n    })(), patternInput[1]])));\n}\n\nexport function ProgramModule_run(program) {\n    ProgramModule_runWith(void 0, program);\n}\n\n","import { Union } from \"./fable_modules/fable-library.3.7.6/Types.js\";\nimport { union_type, float64_type } from \"./fable_modules/fable-library.3.7.6/Reflection.js\";\nimport { SimulationModule_initial, SimulationModule_started, Vector2__get_Y, Vector2__get_X, SimulationModule_minSpeed, SimulationModule_maxSpeed, SimulationModule_minJumpStep, SimulationModule_maxJumpStep, BodyModule_center, SimulationModule_minTraceInterval, SimulationModule_minDragConstant, SimulationModule_initialProjectile, Body, BodyModule_minMass, Settings as Settings_5, Simulation, SimulationModule_withSettings, SimulationModule_simulate } from \"./Physics.js\";\nimport { equalArrays, min, comparePrimitives, max, uncurry } from \"./fable_modules/fable-library.3.7.6/Util.js\";\nimport { width, height, drawTracer, velocityCanvas, trajectoryCanvas, redrawAll, redrawVelocityMarker, redrawBody, maybeDrawTracer } from \"./Graphics.js\";\nimport * as debug from \"preact/debug\";\nimport { toArray, ofArray, singleton } from \"./fable_modules/fable-library.3.7.6/List.js\";\nimport * as react from \"react\";\nimport { Prop, DOMAttr, HTMLAttr } from \"./fable_modules/Fable.React.7.4.3/Fable.React.Props.fs.js\";\nimport { singleton as singleton_1, append, delay, toList } from \"./fable_modules/fable-library.3.7.6/Seq.js\";\nimport { keyValueList } from \"./fable_modules/fable-library.3.7.6/MapUtil.js\";\nimport { parse } from \"./fable_modules/fable-library.3.7.6/Double.js\";\nimport { Browser_Types_Event__Event_get_Value } from \"./fable_modules/Fable.React.7.4.3/Fable.React.Extensions.fs.js\";\nimport { printf, toText } from \"./fable_modules/fable-library.3.7.6/String.js\";\nimport { Common_lazyView3With } from \"./fable_modules/Fable.Elmish.React.3.0.1/common.fs.js\";\nimport { ProgramModule_mkSimple, ProgramModule_withSubscription, ProgramModule_run } from \"./fable_modules/Fable.Elmish.3.1.0/program.fs.js\";\nimport { Cmd_ofSub } from \"./fable_modules/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { Program_withReactBatched } from \"./fable_modules/Fable.Elmish.React.3.0.1/react.fs.js\";\n\nexport class Message extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"SetInitialSpeed\", \"SetInitialAngle\", \"SetInitialX\", \"SetInitialY\", \"SetMass\", \"SetAccelerationGravity\", \"SetDragConstant\", \"ToggleShowTrajectory\", \"ToggleShowVelocity\", \"SetTraceInterval\", \"SetJumpStep\", \"SetSimulationSpeed\", \"StartStop\", \"NextFrame\", \"Jump\", \"Reset\"];\n    }\n}\n\nexport function Message$reflection() {\n    return union_type(\"ProjectilePhysicsSimulation.App.Message\", [], Message, () => [[[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [], [], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [], [[\"Item\", float64_type]], [], []]);\n}\n\nexport function simulateAndDraw(sim, totalTime) {\n    const sim_1 = SimulationModule_simulate(uncurry(3, maybeDrawTracer(sim)), sim, totalTime);\n    redrawBody(sim_1.Projectile);\n    redrawVelocityMarker(sim_1.Projectile);\n    return sim_1;\n}\n\nexport function newPosition(settings, sim) {\n    const sim_2 = SimulationModule_withSettings(settings, sim);\n    redrawAll(sim_2.Projectile);\n    return sim_2;\n}\n\nexport function newVelocity(settings, sim) {\n    const sim_2 = SimulationModule_withSettings(settings, sim);\n    redrawVelocityMarker(sim_2.Projectile);\n    return sim_2;\n}\n\nexport function newAcceleration(settings, sim) {\n    if (sim.Running) {\n        return new Simulation(sim.Projectile, sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, settings);\n    }\n    else {\n        return SimulationModule_withSettings(settings, sim);\n    }\n}\n\nexport function update(message, sim) {\n    let inputRecord_1, inputRecord_2, inputRecord_3, inputRecord_5, inputRecord_6, inputRecord_7, inputRecord_8, inputRecord_9, inputRecord_10, inputRecord_11, inputRecord;\n    switch (message.tag) {\n        case 1: {\n            return newVelocity((inputRecord_1 = sim.Settings, new Settings_5(inputRecord_1.InitialSpeed, message.fields[0], inputRecord_1.InitialPosition, inputRecord_1.AccelerationGravity, inputRecord_1.DragConstant, inputRecord_1.ShowTrajectory, inputRecord_1.ShowVelocityMarker, inputRecord_1.TraceInterval, inputRecord_1.SimulationSpeed, inputRecord_1.JumpStep)), sim);\n        }\n        case 2: {\n            return newPosition((inputRecord_2 = sim.Settings, new Settings_5(inputRecord_2.InitialSpeed, inputRecord_2.InitialAngle, [message.fields[0], sim.Settings.InitialPosition[1]], inputRecord_2.AccelerationGravity, inputRecord_2.DragConstant, inputRecord_2.ShowTrajectory, inputRecord_2.ShowVelocityMarker, inputRecord_2.TraceInterval, inputRecord_2.SimulationSpeed, inputRecord_2.JumpStep)), sim);\n        }\n        case 3: {\n            return newPosition((inputRecord_3 = sim.Settings, new Settings_5(inputRecord_3.InitialSpeed, inputRecord_3.InitialAngle, [sim.Settings.InitialPosition[0], message.fields[0]], inputRecord_3.AccelerationGravity, inputRecord_3.DragConstant, inputRecord_3.ShowTrajectory, inputRecord_3.ShowVelocityMarker, inputRecord_3.TraceInterval, inputRecord_3.SimulationSpeed, inputRecord_3.JumpStep)), sim);\n        }\n        case 4: {\n            let projectile;\n            const inputRecord_4 = sim.Projectile;\n            projectile = (new Body(inputRecord_4.Width, inputRecord_4.Height, max(comparePrimitives, BodyModule_minMass, message.fields[0]), inputRecord_4.Position, inputRecord_4.Velocity, inputRecord_4.Acceleration, inputRecord_4.PrevAcceleration));\n            if (sim.Running) {\n                return new Simulation(projectile, sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, sim.Settings);\n            }\n            else {\n                return new Simulation(SimulationModule_initialProjectile(sim.Settings, projectile), sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, sim.Settings);\n            }\n        }\n        case 5: {\n            return newAcceleration((inputRecord_5 = sim.Settings, new Settings_5(inputRecord_5.InitialSpeed, inputRecord_5.InitialAngle, inputRecord_5.InitialPosition, message.fields[0], inputRecord_5.DragConstant, inputRecord_5.ShowTrajectory, inputRecord_5.ShowVelocityMarker, inputRecord_5.TraceInterval, inputRecord_5.SimulationSpeed, inputRecord_5.JumpStep)), sim);\n        }\n        case 6: {\n            return newAcceleration((inputRecord_6 = sim.Settings, new Settings_5(inputRecord_6.InitialSpeed, inputRecord_6.InitialAngle, inputRecord_6.InitialPosition, inputRecord_6.AccelerationGravity, max(comparePrimitives, SimulationModule_minDragConstant, message.fields[0]), inputRecord_6.ShowTrajectory, inputRecord_6.ShowVelocityMarker, inputRecord_6.TraceInterval, inputRecord_6.SimulationSpeed, inputRecord_6.JumpStep)), sim);\n        }\n        case 7: {\n            trajectoryCanvas.hidden = sim.Settings.ShowTrajectory;\n            return new Simulation(sim.Projectile, sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, (inputRecord_7 = sim.Settings, new Settings_5(inputRecord_7.InitialSpeed, inputRecord_7.InitialAngle, inputRecord_7.InitialPosition, inputRecord_7.AccelerationGravity, inputRecord_7.DragConstant, !sim.Settings.ShowTrajectory, inputRecord_7.ShowVelocityMarker, inputRecord_7.TraceInterval, inputRecord_7.SimulationSpeed, inputRecord_7.JumpStep)));\n        }\n        case 8: {\n            velocityCanvas.hidden = sim.Settings.ShowVelocityMarker;\n            return new Simulation(sim.Projectile, sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, (inputRecord_8 = sim.Settings, new Settings_5(inputRecord_8.InitialSpeed, inputRecord_8.InitialAngle, inputRecord_8.InitialPosition, inputRecord_8.AccelerationGravity, inputRecord_8.DragConstant, inputRecord_8.ShowTrajectory, !sim.Settings.ShowVelocityMarker, inputRecord_8.TraceInterval, inputRecord_8.SimulationSpeed, inputRecord_8.JumpStep)));\n        }\n        case 9: {\n            const trace = max(comparePrimitives, SimulationModule_minTraceInterval, message.fields[0]);\n            if (trace !== sim.Settings.TraceInterval) {\n                return new Simulation(sim.Projectile, sim.Running, sim.Time, ((sim.Time - sim.LastTracer) >= sim.Settings.TraceInterval) ? ((drawTracer(BodyModule_center(sim.Projectile)), sim.Time)) : sim.LastTracer, sim.LeftOverTime, (inputRecord_9 = sim.Settings, new Settings_5(inputRecord_9.InitialSpeed, inputRecord_9.InitialAngle, inputRecord_9.InitialPosition, inputRecord_9.AccelerationGravity, inputRecord_9.DragConstant, inputRecord_9.ShowTrajectory, inputRecord_9.ShowVelocityMarker, trace, inputRecord_9.SimulationSpeed, inputRecord_9.JumpStep)));\n            }\n            else {\n                return sim;\n            }\n        }\n        case 10: {\n            return new Simulation(sim.Projectile, sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, (inputRecord_10 = sim.Settings, new Settings_5(inputRecord_10.InitialSpeed, inputRecord_10.InitialAngle, inputRecord_10.InitialPosition, inputRecord_10.AccelerationGravity, inputRecord_10.DragConstant, inputRecord_10.ShowTrajectory, inputRecord_10.ShowVelocityMarker, inputRecord_10.TraceInterval, inputRecord_10.SimulationSpeed, ((e2_1) => min(comparePrimitives, SimulationModule_maxJumpStep, e2_1))(((e2) => max(comparePrimitives, SimulationModule_minJumpStep, e2))(message.fields[0])))));\n        }\n        case 11: {\n            return new Simulation(sim.Projectile, sim.Running, sim.Time, sim.LastTracer, sim.LeftOverTime, (inputRecord_11 = sim.Settings, new Settings_5(inputRecord_11.InitialSpeed, inputRecord_11.InitialAngle, inputRecord_11.InitialPosition, inputRecord_11.AccelerationGravity, inputRecord_11.DragConstant, inputRecord_11.ShowTrajectory, inputRecord_11.ShowVelocityMarker, inputRecord_11.TraceInterval, ((e2_1_1) => min(comparePrimitives, SimulationModule_maxSpeed, e2_1_1))(((e2_2) => max(comparePrimitives, SimulationModule_minSpeed, e2_2))(message.fields[0])), inputRecord_11.JumpStep)));\n        }\n        case 12: {\n            if (sim.Running) {\n                return new Simulation(sim.Projectile, false, sim.Time, sim.LastTracer, 0, sim.Settings);\n            }\n            else {\n                return new Simulation(sim.Projectile, true, sim.Time, sim.LastTracer, sim.LeftOverTime, sim.Settings);\n            }\n        }\n        case 13: {\n            if (sim.Running && (sim.Settings.SimulationSpeed > 0)) {\n                return simulateAndDraw(sim, (min(comparePrimitives, 0.1, message.fields[0] / 1000) * sim.Settings.SimulationSpeed) + sim.LeftOverTime);\n            }\n            else {\n                return sim;\n            }\n        }\n        case 14: {\n            return simulateAndDraw(sim, sim.Settings.JumpStep);\n        }\n        case 15: {\n            const projectile_1 = SimulationModule_initialProjectile(sim.Settings, sim.Projectile);\n            redrawAll(projectile_1);\n            return new Simulation(projectile_1, false, 0, 0, 0, sim.Settings);\n        }\n        default: {\n            return newVelocity((inputRecord = sim.Settings, new Settings_5(message.fields[0], inputRecord.InitialAngle, inputRecord.InitialPosition, inputRecord.AccelerationGravity, inputRecord.DragConstant, inputRecord.ShowTrajectory, inputRecord.ShowVelocityMarker, inputRecord.TraceInterval, inputRecord.SimulationSpeed, inputRecord.JumpStep)), sim);\n        }\n    }\n}\n\n\nexport function unit(unitName) {\n    return singleton(unitName);\n}\n\nexport function withSub(subscript, text) {\n    return ofArray([text, react.createElement(\"sub\", {}, subscript)]);\n}\n\nexport function withSuper(superscript, text) {\n    return ofArray([text, react.createElement(\"sup\", {}, superscript)]);\n}\n\nexport function checkbox(text, message, isChecked, dispatch) {\n    let children;\n    const children_2 = [(children = [react.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: isChecked,\n        onChange: (_arg1) => {\n            dispatch(message);\n        },\n    }), text], react.createElement(\"label\", {\n        className: \"checkbox\",\n    }, ...children))];\n    return react.createElement(\"li\", {}, ...children_2);\n}\n\nexport function controls(running, settings, dispatch) {\n    let props, children_4, unit_1, props_4, children_2, children_10, attributes_1, unit_2, props_12, children_8;\n    const props_18 = [new HTMLAttr(64, \"controls\"), [\"style\", {\n        marginTop: height,\n    }]];\n    const children_14 = [(props = toList(delay(() => {\n        const playpause = running ? \"Pause\" : \"Play\";\n        return append(singleton_1(new HTMLAttr(159, \"button\")), delay(() => append(singleton_1(new HTMLAttr(64, playpause.toLocaleLowerCase())), delay(() => append(singleton_1(new HTMLAttr(158, playpause)), delay(() => singleton_1(new DOMAttr(40, (_arg1) => {\n            dispatch(new Message(12));\n        }))))))));\n    })), react.createElement(\"button\", keyValueList(props, 1))), (children_4 = [\"Speed:\", (unit_1 = unit(\"x\"), (props_4 = [[\"style\", {\n        display: \"inline-block\",\n    }]], (children_2 = toList(delay(() => {\n        let props_2;\n        return append(singleton_1((props_2 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, settings.SimulationSpeed)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e) => {\n            try {\n                dispatch(((arg0_1) => (new Message(11, arg0_1)))(parse(Browser_Types_Event__Event_get_Value(e)) * 1));\n            }\n            catch (matchValue) {\n            }\n        })), delay(() => [new HTMLAttr(119, 0), new HTMLAttr(114, SimulationModule_maxSpeed)])))))))))), react.createElement(\"input\", keyValueList(props_2, 1)))), delay(() => unit_1));\n    })), react.createElement(\"div\", keyValueList(props_4, 1), ...children_2))))], react.createElement(\"label\", {}, ...children_4)), (children_10 = [react.createElement(\"button\", {\n        type: \"button\",\n        className: \"jump\",\n        title: \"Jump\",\n        onClick: (_arg2) => {\n            dispatch(new Message(14));\n        },\n    }), (attributes_1 = [[\"style\", {\n        width: \"3em\",\n        marginLeft: 0,\n        marginTop: \"0.1em\",\n    }], new HTMLAttr(119, 0), new HTMLAttr(114, SimulationModule_maxJumpStep)], (unit_2 = unit(\"s\"), (props_12 = [[\"style\", {\n        display: \"inline-block\",\n    }]], (children_8 = toList(delay(() => {\n        let props_10;\n        return append(singleton_1((props_10 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, settings.JumpStep)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_1) => {\n            try {\n                dispatch(((arg0_3) => (new Message(10, arg0_3)))(parse(Browser_Types_Event__Event_get_Value(e_1)) * 1));\n            }\n            catch (matchValue_1) {\n            }\n        })), delay(() => attributes_1)))))))))), react.createElement(\"input\", keyValueList(props_10, 1)))), delay(() => unit_2));\n    })), react.createElement(\"div\", keyValueList(props_12, 1), ...children_8)))))], react.createElement(\"div\", {}, ...children_10)), react.createElement(\"button\", {\n        type: \"button\",\n        className: \"reset\",\n        title: \"Reset\",\n        onClick: (_arg3) => {\n            dispatch(new Message(15));\n        },\n    })];\n    return react.createElement(\"div\", keyValueList(props_18, 1), ...children_14);\n}\n\nexport function telemetry(time, projectile) {\n    let children_46, children_44, name_7, value_6, children_24, children_20, children_22, name_8, value_7, children_30, children_26, children_28, name_9, value_8, children_36, children_32, children_34, name_10, value_9, children_42, children_38, children_40;\n    const children_48 = [react.createElement(\"summary\", {}, \"Telemetry\"), (children_46 = [(children_44 = [((value) => {\n        let children_2, children_4;\n        const children_6 = [(children_2 = toList(delay(() => append([\"T\"], delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_2)), (children_4 = [toText(printf(\"%.3f\"))(value)], react.createElement(\"td\", {}, ...children_4))];\n        return react.createElement(\"tr\", {}, ...children_6);\n    })(time), ((value_2) => {\n        let children_8, children_10;\n        const children_12 = [(children_8 = toList(delay(() => append([\"X\"], delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_8)), (children_10 = [toText(printf(\"%.3f\"))(value_2)], react.createElement(\"td\", {}, ...children_10))];\n        return react.createElement(\"tr\", {}, ...children_12);\n    })(Vector2__get_X(projectile.Position)), ((value_4) => {\n        let children_14, children_16;\n        const children_18 = [(children_14 = toList(delay(() => append([\"Y\"], delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_14)), (children_16 = [toText(printf(\"%.3f\"))(value_4)], react.createElement(\"td\", {}, ...children_16))];\n        return react.createElement(\"tr\", {}, ...children_18);\n    })(Vector2__get_Y(projectile.Position)), (name_7 = withSub(\"x\", \"V\"), (value_6 = Vector2__get_X(projectile.Velocity), (children_24 = [(children_20 = toList(delay(() => append(name_7, delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_20)), (children_22 = [toText(printf(\"%.3f\"))(value_6)], react.createElement(\"td\", {}, ...children_22))], react.createElement(\"tr\", {}, ...children_24)))), (name_8 = withSub(\"y\", \"V\"), (value_7 = Vector2__get_Y(projectile.Velocity), (children_30 = [(children_26 = toList(delay(() => append(name_8, delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_26)), (children_28 = [toText(printf(\"%.3f\"))(value_7)], react.createElement(\"td\", {}, ...children_28))], react.createElement(\"tr\", {}, ...children_30)))), (name_9 = withSub(\"x\", \"A\"), (value_8 = Vector2__get_X(projectile.Acceleration), (children_36 = [(children_32 = toList(delay(() => append(name_9, delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_32)), (children_34 = [toText(printf(\"%.3f\"))(value_8)], react.createElement(\"td\", {}, ...children_34))], react.createElement(\"tr\", {}, ...children_36)))), (name_10 = withSub(\"y\", \"A\"), (value_9 = Vector2__get_Y(projectile.Acceleration), (children_42 = [(children_38 = toList(delay(() => append(name_10, delay(() => singleton_1(\":\"))))), react.createElement(\"td\", {}, ...children_38)), (children_40 = [toText(printf(\"%.3f\"))(value_9)], react.createElement(\"td\", {}, ...children_40))], react.createElement(\"tr\", {}, ...children_42))))], react.createElement(\"tbody\", {}, ...children_44))], react.createElement(\"table\", {}, ...children_46))];\n    return react.createElement(\"details\", {\n        className: \"telemetry\",\n        open: true,\n    }, ...children_48);\n}\n\nexport function viewSettings(started, mass, settings, dispatch) {\n    let children_6, unit_1, children_4, children_2, props_2, children, children_30, unit_3, children_12, children_10, props_12, children_8, children_28, children_26, children_22, unit_8, props_32, children_24, children_56;\n    const children_58 = [(children_6 = [checkbox(\"Show Velocity Marker\", new Message(8), settings.ShowVelocityMarker, dispatch), checkbox(\"Show Traced Trajectory\", new Message(7), settings.ShowTrajectory, dispatch), (unit_1 = unit(\"s\"), (children_4 = [(children_2 = [\"Trace Trajectory Every:\", (props_2 = [[\"style\", {\n        display: \"inline-block\",\n    }]], (children = toList(delay(() => {\n        let props;\n        return append(singleton_1((props = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, settings.TraceInterval)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e) => {\n            try {\n                dispatch(((arg0) => (new Message(9, arg0)))(parse(Browser_Types_Event__Event_get_Value(e)) * 1));\n            }\n            catch (matchValue) {\n            }\n        })), delay(() => [new HTMLAttr(119, 0)])))))))))), react.createElement(\"input\", keyValueList(props, 1)))), delay(() => unit_1));\n    })), react.createElement(\"div\", keyValueList(props_2, 1), ...children)))], react.createElement(\"label\", {}, ...children_2))], react.createElement(\"li\", {}, ...children_4)))], react.createElement(\"ul\", {}, ...children_6)), (children_30 = [(unit_3 = unit(\"kg\"), (children_12 = [(children_10 = [\"Mass:\", (props_12 = [[\"style\", {\n        display: \"inline-block\",\n    }]], (children_8 = toList(delay(() => {\n        let props_10;\n        return append(singleton_1((props_10 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, mass)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_1) => {\n            try {\n                dispatch(((arg0_1) => (new Message(4, arg0_1)))(parse(Browser_Types_Event__Event_get_Value(e_1)) * 1));\n            }\n            catch (matchValue_1) {\n            }\n        })), delay(() => [new HTMLAttr(119, 0)])))))))))), react.createElement(\"input\", keyValueList(props_10, 1)))), delay(() => unit_3));\n    })), react.createElement(\"div\", keyValueList(props_12, 1), ...children_8)))], react.createElement(\"label\", {}, ...children_10))], react.createElement(\"li\", {}, ...children_12))), ((unit_5) => ((message_4) => ((value_4) => ((dispatch_5) => {\n        let children_16, props_20, children_14;\n        const children_18 = [(children_16 = [\"Gravity:\", (props_20 = [[\"style\", {\n            display: \"inline-block\",\n        }]], (children_14 = toList(delay(() => {\n            let props_18;\n            return append(singleton_1((props_18 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, value_4)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_2) => {\n                try {\n                    dispatch_5(message_4(parse(Browser_Types_Event__Event_get_Value(e_2)) * 1));\n                }\n                catch (matchValue_2) {\n                }\n            })), delay(() => [])))))))))), react.createElement(\"input\", keyValueList(props_18, 1)))), delay(() => unit_5));\n        })), react.createElement(\"div\", keyValueList(props_20, 1), ...children_14)))], react.createElement(\"label\", {}, ...children_16))];\n        return react.createElement(\"li\", {}, ...children_18);\n    }))))(withSuper(\"2\", \"m/s\"))((arg0_2) => (new Message(5, arg0_2)))(settings.AccelerationGravity)(dispatch), (children_28 = [(children_26 = [(children_22 = [react.createElement(\"u\", {\n        className: \"tooltip\",\n    }, \"Combined Drag Constant\"), \":\"], react.createElement(\"span\", {\n        title: \"Combined Drag Constant = fluid density (kg/m^3) * contact area (m^2) * drag coefficient (unitless) / 2\",\n    }, ...children_22)), (unit_8 = unit(\"kg/m\"), (props_32 = [[\"style\", {\n        display: \"inline-block\",\n    }]], (children_24 = toList(delay(() => {\n        let props_30;\n        return append(singleton_1((props_30 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, settings.DragConstant)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_3) => {\n            try {\n                dispatch(((arg0_3) => (new Message(6, arg0_3)))(parse(Browser_Types_Event__Event_get_Value(e_3)) * 1));\n            }\n            catch (matchValue_3) {\n            }\n        })), delay(() => [new HTMLAttr(119, 0)])))))))))), react.createElement(\"input\", keyValueList(props_30, 1)))), delay(() => unit_8));\n    })), react.createElement(\"div\", keyValueList(props_32, 1), ...children_24))))], react.createElement(\"label\", {}, ...children_26))], react.createElement(\"li\", {}, ...children_28))], react.createElement(\"ul\", {}, ...children_30)), (children_56 = toList(delay(() => {\n        let value_8, name_5, unit_9, children_36, children_34, props_42, children_32;\n        return append(singleton_1((value_8 = Vector2__get_X(settings.InitialPosition), (name_5 = (\"Initial \" + \"X\"), (unit_9 = unit(\"m\"), (children_36 = [(children_34 = [name_5 + \":\", (props_42 = [[\"style\", {\n            display: \"inline-block\",\n        }]], (children_32 = toList(delay(() => {\n            let props_40;\n            return append(singleton_1((props_40 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, value_8)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_4) => {\n                try {\n                    dispatch(((arg0_4) => (new Message(2, arg0_4)))(parse(Browser_Types_Event__Event_get_Value(e_4)) * 1));\n                }\n                catch (matchValue_4) {\n                }\n            })), delay(() => [new HTMLAttr(79, started)])))))))))), react.createElement(\"input\", keyValueList(props_40, 1)))), delay(() => unit_9));\n        })), react.createElement(\"div\", keyValueList(props_42, 1), ...children_32)))], react.createElement(\"label\", {}, ...children_34))], react.createElement(\"li\", {}, ...children_36)))))), delay(() => {\n            let value_11, name_7, unit_11, children_42, children_40, props_50, children_38;\n            return append(singleton_1((value_11 = Vector2__get_Y(settings.InitialPosition), (name_7 = (\"Initial \" + \"Y\"), (unit_11 = unit(\"m\"), (children_42 = [(children_40 = [name_7 + \":\", (props_50 = [[\"style\", {\n                display: \"inline-block\",\n            }]], (children_38 = toList(delay(() => {\n                let props_48;\n                return append(singleton_1((props_48 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, value_11)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_5) => {\n                    try {\n                        dispatch(((arg0_5) => (new Message(3, arg0_5)))(parse(Browser_Types_Event__Event_get_Value(e_5)) * 1));\n                    }\n                    catch (matchValue_5) {\n                    }\n                })), delay(() => [new HTMLAttr(79, started)])))))))))), react.createElement(\"input\", keyValueList(props_48, 1)))), delay(() => unit_11));\n            })), react.createElement(\"div\", keyValueList(props_50, 1), ...children_38)))], react.createElement(\"label\", {}, ...children_40))], react.createElement(\"li\", {}, ...children_42)))))), delay(() => {\n                let name_9, unit_13, children_48, children_46, props_58, children_44;\n                return append(singleton_1((name_9 = (\"Initial \" + \"Speed\"), (unit_13 = unit(\"m/s\"), (children_48 = [(children_46 = [name_9 + \":\", (props_58 = [[\"style\", {\n                    display: \"inline-block\",\n                }]], (children_44 = toList(delay(() => {\n                    let props_56;\n                    return append(singleton_1((props_56 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, settings.InitialSpeed)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_6) => {\n                        try {\n                            dispatch(((arg0_6) => (new Message(0, arg0_6)))(parse(Browser_Types_Event__Event_get_Value(e_6)) * 1));\n                        }\n                        catch (matchValue_6) {\n                        }\n                    })), delay(() => [new HTMLAttr(79, started)])))))))))), react.createElement(\"input\", keyValueList(props_56, 1)))), delay(() => unit_13));\n                })), react.createElement(\"div\", keyValueList(props_58, 1), ...children_44)))], react.createElement(\"label\", {}, ...children_46))], react.createElement(\"li\", {}, ...children_48))))), delay(() => {\n                    let name_11, unit_15, children_54, children_52, props_66, children_50;\n                    return singleton_1((name_11 = (\"Initial \" + \"Angle\"), (unit_15 = unit(\"deg\"), (children_54 = [(children_52 = [name_11 + \":\", (props_66 = [[\"style\", {\n                        display: \"inline-block\",\n                    }]], (children_50 = toList(delay(() => {\n                        let props_64;\n                        return append(singleton_1((props_64 = toList(delay(() => append(singleton_1(new HTMLAttr(159, \"number\")), delay(() => append(singleton_1(new HTMLAttr(1, settings.InitialAngle)), delay(() => append(singleton_1(new HTMLAttr(154, \"any\")), delay(() => append(singleton_1(new DOMAttr(9, (e_7) => {\n                            try {\n                                dispatch(((arg0_7) => (new Message(1, arg0_7)))(parse(Browser_Types_Event__Event_get_Value(e_7)) * 1));\n                            }\n                            catch (matchValue_7) {\n                            }\n                        })), delay(() => [new HTMLAttr(79, started)])))))))))), react.createElement(\"input\", keyValueList(props_64, 1)))), delay(() => unit_15));\n                    })), react.createElement(\"div\", keyValueList(props_66, 1), ...children_50)))], react.createElement(\"label\", {}, ...children_52))], react.createElement(\"li\", {}, ...children_54)))));\n                }));\n            }));\n        }));\n    })), react.createElement(\"ul\", {}, ...children_56))];\n    return react.createElement(\"div\", {\n        className: \"settings\",\n        key: \"settings\",\n    }, ...children_58);\n}\n\nexport function view(sim, dispatch) {\n    let props, children;\n    return toArray(ofArray([(props = [new HTMLAttr(64, \"simulation\"), new Prop(0, \"simulation\"), [\"style\", {\n        width: width,\n    }]], (children = [Common_lazyView3With((tupledArg, tupledArg_1) => ((tupledArg[0] === tupledArg_1[0]) && (tupledArg[1] === tupledArg_1[1])), controls, sim.Running, sim.Settings, dispatch), telemetry(sim.Time, sim.Projectile)], react.createElement(\"div\", keyValueList(props, 1), ...children))), Common_lazyView3With((tupledArg_2, tupledArg_3) => (equalArrays(tupledArg_2[0], tupledArg_3[0]) && (tupledArg_2[1] === tupledArg_3[1])), (tupledArg_4, settings_1, dispatch_2) => viewSettings(tupledArg_4[0], tupledArg_4[1], settings_1, dispatch_2), [SimulationModule_started(sim), sim.Projectile.Mass], sim.Settings, dispatch)]));\n}\n\nexport function init() {\n    redrawAll(SimulationModule_initial.Projectile);\n    return SimulationModule_initial;\n}\n\nexport function loop(dispatch, last, t) {\n    dispatch(new Message(13, (t - last) * 1));\n    window.requestAnimationFrame((t_1) => {\n        loop(dispatch, t, t_1);\n    });\n}\n\nProgramModule_run(ProgramModule_withSubscription((_arg1) => Cmd_ofSub((d) => {\n    loop(d, 0, 0);\n}), Program_withReactBatched(\"elmish-app\", ProgramModule_mkSimple(init, update, view))));\n\n","import { ProgramModule_view, ProgramModule_withSetState } from \"../Fable.Elmish.3.1.0/program.fs.js\";\nimport * as react_dom from \"react-dom\";\nimport { Common_lazyView2With } from \"./common.fs.js\";\nimport { uncurry } from \"../fable-library.3.7.6/Util.js\";\n\nexport function Program_Internal_withReactBatchedUsing(lazyView2With, placeholderId, program) {\n    let lastRequest = void 0;\n    return ProgramModule_withSetState((model, dispatch) => {\n        if (lastRequest != null) {\n            const r = lastRequest;\n            window.cancelAnimationFrame(r);\n        }\n        lastRequest = window.requestAnimationFrame((_arg1) => {\n            react_dom.render(lazyView2With((x) => ((y) => (x === y)), ProgramModule_view(program), model, dispatch), document.getElementById(placeholderId));\n        });\n    }, program);\n}\n\nexport function Program_Internal_withReactSynchronousUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react_dom.render(lazyView2With((x) => ((y) => (x === y)), ProgramModule_view(program), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_Internal_withReactHydrateUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react_dom.hydrate(lazyView2With((x) => ((y) => (x === y)), ProgramModule_view(program), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_withReactBatched(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactSynchronous(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReact(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactUnoptimized(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactHydrate(placeholderId, program) {\n    return Program_Internal_withReactHydrateUsing((equal, view, state, dispatch) => Common_lazyView2With(uncurry(2, equal), uncurry(2, view), state, dispatch), placeholderId, program);\n}\n\n","import { some } from \"../fable-library.3.7.6/Option.js\";\nimport Timer from \"../fable-library.3.7.6/Timer.js\";\nimport { add } from \"../fable-library.3.7.6/Observable.js\";\n\nexport function Log_onError(text, ex) {\n    console.error(some(text), ex);\n}\n\nexport function Log_toConsole(text, o) {\n    console.log(some(text), o);\n}\n\nexport function Timer_delay(interval, callback) {\n    let t;\n    let returnVal = new Timer(interval);\n    returnVal.AutoReset = false;\n    t = returnVal;\n    add(callback, t.Elapsed());\n    t.Enabled = true;\n    t.Start();\n}\n\n"],"names":["x","Array","isArray","ArrayBuffer","isView","Dispose","sameConstructor","y","Object","getPrototypeOf","constructor","Enumerator","iter","this","current","cur","next","value","done","Error","o","GetEnumerator","Symbol","iterator","en","hasNext","undefined","padWithZeros","i","length","str","toString","date","date1","offset","kind","getTimezoneOffset","ObjectRef","static","idMap","has","set","count","get","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","s","h","len","charCodeAt","stringHash","GetHashCode","isHashable","arrayHash","Date","getTime","dateHash","values","map","v","id","eq","equalArraysWith","Equals","isEquatable","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","compareArrays","comp","j","compareArraysWith","compare","CompareTo","isComparable","key","compareObjects","min","comparer","max","WeakMap","CURRIED","arity","f","uncurried","args","res","_curry","arg","concat","callStack","self","seqToString","cons","entries","k","join","name","String","cases","tag","toJSON","fields","fieldStr","withParens","indexOf","unionToString","splice","other","recordToJSON","recordGetHashCode","thisNames","recordEquals","result","recordCompareTo","FSharpRef","contentsOrGetter","setter","getter","contents","Vector2__get_X","this$","Vector2__get_Y","Body","Width","Height","Mass","Position","Velocity","Acceleration","PrevAcceleration","super","BodyModule_center","body","Settings","InitialSpeed","InitialAngle","InitialPosition","AccelerationGravity","DragConstant","ShowTrajectory","ShowVelocityMarker","TraceInterval","SimulationSpeed","JumpStep","Simulation","Projectile","Running","Time","LastTracer","LeftOverTime","timeStep","SimulationModule_started","sim","SimulationModule_accclerationDrag","constant","velocity","mass","_arg2","_arg1","_arg1_2","scalar","_arg1_1","vector","Math","sqrt","Vector2Module_magnitude","Vector2Module_normalizeUnsafe","SimulationModule_acceleration","settings","gravity","SimulationModule_move","time","newAcceleration","_arg2_1","_arg1_4","_arg2_4","_arg1_11","_arg1_10","scalar_5","_arg1_9","_arg2_3","_arg2_2","scalar_3","_arg1_5","_arg1_7","scalar_4","_arg1_6","_arg1_8","scalar_6","deltaPosition","_arg1_3","scalar_1","scalar_2","SimulationModule_initialProjectile","projectile","magnitude","degrees","cos","sin","SimulationModule_withSettings","SimulationModule_initial","projectileLength","phi","width","window","screen","availWidth","height","availHeight","setupCanvas","canvas","document","getElementById","context","getContext","translate","patternInput$004024","trajectoryContext","trajectoryCanvas","patternInput$004025$002D1","bodyContext","patternInput$004026$002D2","velocityContext","velocityCanvas","drawTracer","point","beginPath","arc","closePath","fill","fillStyle","strokeStyle","lastBody","lastVelocityMaker","redrawBody","clearRect","clearBody","fillRect","drawBody","redrawVelocityMarker","c","abs","clearVelocityMarker","moveTo","lineTo","stroke","drawVelocityMarker","redrawAll","resetTrajectory","slice","options","vnodeId","rerenderQueue","defer","prevDebounce","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","type","children","ref","normalizedProps","arguments","call","defaultProps","createVNode","original","vnode","Fragment","Component","getDomSibling","childIndex","sibling","updateParentDomPointers","child","base","enqueueRender","push","process","debounceRendering","queue","a","b","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","reorderChildren","placeChild","unmount","applyRef","tmp","toChildArray","out","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","setStyle","style","setProperty","test","dom","oldValue","useCapture","cssText","replace","toLowerCase","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","contextType","prototype","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","cb","oldHtml","newHtml","nodeType","localName","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","parentVNode","skipRemove","r","componentWillUnmount","replaceNode","firstChild","error","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","forceUpdate","Promise","then","bind","resolve","setTimeout","__PREACT_DEVTOOLS__","attachPreact","loggedTypeFailures","getDisplayName","displayName","renderStack","ownerStack","getCurrentVNode","hasBabelPlugin","isPossibleOwner","getOwnerStack","stack","acc","owner","source","__source","fileName","lineNumber","console","warn","isWeakMapSupported","serializeVNode","attrs","prop","hasOwnProperty","JSON","stringify","dateOffsetToString","isMinus","minutes","dateToHalfUTCString","half","toISOString","substring","dateToStringWithCustomFormat","format","utc","match","rep","Number","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","isNaN","oldDiff","oldDiffed","oldRoot","oldRender","pop","parent","setupComponentStack","hooksAllowed","oldBeforeDiff","oldVnode","oldCatchError","oldHook","warnedComponents","useEffect","useLayoutEffect","lazyPropTypes","deprecations","promise","isValid","componentName","getClosestDomNodeParent","propTypes","m","lazyVNode","typeSpecs","location","getStack","typeSpecName","message","index","property","deprecatedAttributes","nodeName","deprecatedProto","create","__self","__proto__","symbol","sd","toPrecision","dp","toExponential","toHex","fsFormatRegExp","printf","input","cont","lastIndex","strParts","matches","strIdx","exec","matchIndex","createPrinter","toText","continuePrint","formatReplacement","flags","padLength","precision","sign","isLessThan","multiply","parseInt","toFixed","toUpperCase","_provider","_a","_b","_c","d","dateWithOffset","dateToISOStringWithOffset","dateToStringWithOffset","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","dateToStringWithKind","zeroFlag","minusFlag","ch","padLeft","_strParts","_matches","_result","padArg","_padLength","isRight","target","targetIndex","start","head","tail","xs","from","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","matchValue","xt","yt","i_mut","h_mut","t","_key","ListEnumerator$1","it","__","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","FSharpList__get_IsEmpty","FSharpList__get_Head","FSharpList__get_Tail","folder","action","unitVar0","ofArray","tail_1","ofArrayWithTail","currentComponent","prevRaf","afterPaintEffects","oldBeforeRender","oldAfterDiff","oldCommit","oldBeforeUnmount","flushAfterPaintEffects","shift","invokeCleanup","invokeEffect","hooks","raf","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","requestAnimationFrame","filter","hasErrored","hook","cleanup","shallowDiffers","PureComponent","p","isPureReactComponent","oldDiffHook","for","Forwarded","oldUnmount","Suspense","_suspenders","suspended","SuspenseList","_next","_map","suspendingVNode","suspendingComponent","resolved","onResolved","onSuspensionComplete","suspendedVNode","removeOriginal","detachedParent","originalParent","wasHydrating","detachedComponent","detachedClone","effect","fallback","list","delete","revealOrder","size","delegated","unsuspend","wrappedUnsuspend","Map","reverse","_this","REACT_ELEMENT_TYPE","CAMEL_PROPS","IS_DOM","onChangeInputType","defineProperty","configurable","writable","oldEventHook","empty","isPropagationStopped","cancelBubble","isDefaultPrevented","defaultPrevented","persist","nativeEvent","classNameDescriptor","class","oldVNodeHook","nonCustomElement","multiple","selected","defaultValue","className","enumerable","$$typeof","Prop","DOMAttr","HTMLAttr","Some","Enumerator_notStarted","Enumerator_alreadyFinished","Enumerator_Seq","Enumerator_FromFunctions$1","dispose","Enumerator_noReset","Enumerator_FromFunctions$1_$ctor_58C54629","Enumerator_generateWhileSome","openf","compute","closef","curr","started","x_1","finish","matchValue_1","mkSeq","Enumerator_Seq_$ctor_673A07F2","argName","Operators_NullArg","generator","sources","outerOpt","innerOpt","finished","inner","copyOfStruct","inner_1","outer_1","Enumerator_concat","ar","Helpers_allocateArrayFromCons","toList","xs_3","enumerator","xs_5","t_2","ofSeq","ys","mapping","e_1","_","Enumerator_enumerateThenFinally","dashify","separator","charAt","keyValueList","caseRule","definedCaseRule","fail","kvPair","changeCase","defValue","Browser_Types_Event__Event_get_Value","LazyProps$1","model","equal","Components_LazyView$1","nextProps","_nextState","Common_lazyView3With","view","state1","state2","dispatch","Cmd_exec","onError","cmd","ex","Cmd_batch","cmds","lists","xs_6","integralRangeStep","step","stop","zero","add","stepFn","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","makeRangeStepFunction","st_1","Enumerator_unfold","RingState$1","RingBuffer$1","RingBuffer$1__Pop","wix","rix","items","rix$0027","RingBuffer$1__Push_2B595","item","wix_1","items_1","wix$0027","ix","Program$4","init","subscribe","syncDispatch","Message","simulateAndDraw","totalTime","sim_1","otherSideEffects","timeToSimulate","numSteps","floor","patternInput","simulatedTime","newTime","SimulationModule_simulate","timeSinceLastTracer","tracerCount","nextTracerTime","alpha","delta","lerpDelta","maybeDrawTracer","newPosition","sim_2","newVelocity","unit","unitName","withSub","subscript","text","isChecked","children_2","onChange","controls","running","children_4","unit_1","props_4","children_10","attributes_1","unit_2","props_12","children_8","props_18","marginTop","children_14","playpause","toLocaleLowerCase","display","props_2","arg0_1","title","onClick","marginLeft","props_10","arg0_3","_arg3","telemetry","children_46","children_44","name_7","value_6","children_24","children_20","children_22","name_8","value_7","children_30","children_26","children_28","name_9","value_8","children_36","children_32","children_34","name_10","value_9","children_42","children_38","children_40","children_48","children_6","value_2","children_12","value_4","children_16","children_18","open","last","t_1","program","rb","reentered","msg","nextMsg","msg_1","patternInput_1","model$0027","ex_1","ex_3","ex_2","ProgramModule_runWith","ProgramModule_run","ProgramModule_withSubscription","inputRecord_1","inputRecord_2","inputRecord_3","inputRecord_5","inputRecord_6","inputRecord_7","inputRecord_8","inputRecord_9","inputRecord_10","inputRecord_11","inputRecord","inputRecord_4","hidden","trace","projectile_1","FSharpList__get_Length","toArray","tupledArg","tupledArg_1","tupledArg_2","tupledArg_3","tupledArg_4","settings_1","dispatch_2","unit_3","unit_8","props_32","children_56","children_58","arg0","unit_5","message_4","dispatch_5","props_20","e_2","matchValue_2","arg0_2","props_30","e_3","matchValue_3","name_5","unit_9","props_42","props_40","e_4","arg0_4","matchValue_4","value_11","unit_11","props_50","props_48","e_5","arg0_5","matchValue_5","unit_13","props_58","props_56","e_6","arg0_6","matchValue_6","name_11","unit_15","children_54","children_52","props_66","children_50","props_64","e_7","arg0_7","matchValue_7","viewSettings","arg_1","arg_2","lazyView2With","placeholderId","lastRequest","textContent","preactRender","Program_Internal_withReactBatchedUsing"],"sourceRoot":""}